/**
 * generated by Xtext 2.33.0
 */
package ca.mcgill.devops.pipeline.pipeline.impl;

import ca.mcgill.devops.pipeline.pipeline.ParameterValue;
import ca.mcgill.devops.pipeline.pipeline.Permission;
import ca.mcgill.devops.pipeline.pipeline.PipelinePackage;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Parameter Value</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link ca.mcgill.devops.pipeline.pipeline.impl.ParameterValueImpl#getName <em>Name</em>}</li>
 *   <li>{@link ca.mcgill.devops.pipeline.pipeline.impl.ParameterValueImpl#getPreDefinedKeyword <em>Pre Defined Keyword</em>}</li>
 *   <li>{@link ca.mcgill.devops.pipeline.pipeline.impl.ParameterValueImpl#getSubParameterValues <em>Sub Parameter Values</em>}</li>
 *   <li>{@link ca.mcgill.devops.pipeline.pipeline.impl.ParameterValueImpl#getValue <em>Value</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ParameterValueImpl extends MinimalEObjectImpl.Container implements ParameterValue
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The default value of the '{@link #getPreDefinedKeyword() <em>Pre Defined Keyword</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPreDefinedKeyword()
   * @generated
   * @ordered
   */
  protected static final Permission PRE_DEFINED_KEYWORD_EDEFAULT = Permission.READ_ALL;

  /**
   * The cached value of the '{@link #getPreDefinedKeyword() <em>Pre Defined Keyword</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPreDefinedKeyword()
   * @generated
   * @ordered
   */
  protected Permission preDefinedKeyword = PRE_DEFINED_KEYWORD_EDEFAULT;

  /**
   * The cached value of the '{@link #getSubParameterValues() <em>Sub Parameter Values</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSubParameterValues()
   * @generated
   * @ordered
   */
  protected EList<ParameterValue> subParameterValues;

  /**
   * The default value of the '{@link #getValue() <em>Value</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getValue()
   * @generated
   * @ordered
   */
  protected static final String VALUE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getValue() <em>Value</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getValue()
   * @generated
   * @ordered
   */
  protected String value = VALUE_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ParameterValueImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return PipelinePackage.Literals.PARAMETER_VALUE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PipelinePackage.PARAMETER_VALUE__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Permission getPreDefinedKeyword()
  {
    return preDefinedKeyword;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setPreDefinedKeyword(Permission newPreDefinedKeyword)
  {
    Permission oldPreDefinedKeyword = preDefinedKeyword;
    preDefinedKeyword = newPreDefinedKeyword == null ? PRE_DEFINED_KEYWORD_EDEFAULT : newPreDefinedKeyword;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PipelinePackage.PARAMETER_VALUE__PRE_DEFINED_KEYWORD, oldPreDefinedKeyword, preDefinedKeyword));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<ParameterValue> getSubParameterValues()
  {
    if (subParameterValues == null)
    {
      subParameterValues = new EObjectContainmentEList<ParameterValue>(ParameterValue.class, this, PipelinePackage.PARAMETER_VALUE__SUB_PARAMETER_VALUES);
    }
    return subParameterValues;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getValue()
  {
    return value;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setValue(String newValue)
  {
    String oldValue = value;
    value = newValue;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PipelinePackage.PARAMETER_VALUE__VALUE, oldValue, value));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case PipelinePackage.PARAMETER_VALUE__SUB_PARAMETER_VALUES:
        return ((InternalEList<?>)getSubParameterValues()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case PipelinePackage.PARAMETER_VALUE__NAME:
        return getName();
      case PipelinePackage.PARAMETER_VALUE__PRE_DEFINED_KEYWORD:
        return getPreDefinedKeyword();
      case PipelinePackage.PARAMETER_VALUE__SUB_PARAMETER_VALUES:
        return getSubParameterValues();
      case PipelinePackage.PARAMETER_VALUE__VALUE:
        return getValue();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case PipelinePackage.PARAMETER_VALUE__NAME:
        setName((String)newValue);
        return;
      case PipelinePackage.PARAMETER_VALUE__PRE_DEFINED_KEYWORD:
        setPreDefinedKeyword((Permission)newValue);
        return;
      case PipelinePackage.PARAMETER_VALUE__SUB_PARAMETER_VALUES:
        getSubParameterValues().clear();
        getSubParameterValues().addAll((Collection<? extends ParameterValue>)newValue);
        return;
      case PipelinePackage.PARAMETER_VALUE__VALUE:
        setValue((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case PipelinePackage.PARAMETER_VALUE__NAME:
        setName(NAME_EDEFAULT);
        return;
      case PipelinePackage.PARAMETER_VALUE__PRE_DEFINED_KEYWORD:
        setPreDefinedKeyword(PRE_DEFINED_KEYWORD_EDEFAULT);
        return;
      case PipelinePackage.PARAMETER_VALUE__SUB_PARAMETER_VALUES:
        getSubParameterValues().clear();
        return;
      case PipelinePackage.PARAMETER_VALUE__VALUE:
        setValue(VALUE_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case PipelinePackage.PARAMETER_VALUE__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case PipelinePackage.PARAMETER_VALUE__PRE_DEFINED_KEYWORD:
        return preDefinedKeyword != PRE_DEFINED_KEYWORD_EDEFAULT;
      case PipelinePackage.PARAMETER_VALUE__SUB_PARAMETER_VALUES:
        return subParameterValues != null && !subParameterValues.isEmpty();
      case PipelinePackage.PARAMETER_VALUE__VALUE:
        return VALUE_EDEFAULT == null ? value != null : !VALUE_EDEFAULT.equals(value);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(", preDefinedKeyword: ");
    result.append(preDefinedKeyword);
    result.append(", value: ");
    result.append(value);
    result.append(')');
    return result.toString();
  }

} //ParameterValueImpl
