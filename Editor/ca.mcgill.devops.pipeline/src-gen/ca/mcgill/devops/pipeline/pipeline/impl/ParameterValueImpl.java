/**
 * generated by Xtext 2.33.0
 */
package ca.mcgill.devops.pipeline.pipeline.impl;

import ca.mcgill.devops.pipeline.pipeline.ParameterValue;
import ca.mcgill.devops.pipeline.pipeline.PipelineKeyword;
import ca.mcgill.devops.pipeline.pipeline.PipelinePackage;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Parameter Value</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link ca.mcgill.devops.pipeline.pipeline.impl.ParameterValueImpl#getName <em>Name</em>}</li>
 *   <li>{@link ca.mcgill.devops.pipeline.pipeline.impl.ParameterValueImpl#getOtherName <em>Other Name</em>}</li>
 *   <li>{@link ca.mcgill.devops.pipeline.pipeline.impl.ParameterValueImpl#getValue <em>Value</em>}</li>
 *   <li>{@link ca.mcgill.devops.pipeline.pipeline.impl.ParameterValueImpl#getSubParameters <em>Sub Parameters</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ParameterValueImpl extends MinimalEObjectImpl.Container implements ParameterValue
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final PipelineKeyword NAME_EDEFAULT = PipelineKeyword.PPL_KW_NAME;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected PipelineKeyword name = NAME_EDEFAULT;

  /**
   * The default value of the '{@link #getOtherName() <em>Other Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOtherName()
   * @generated
   * @ordered
   */
  protected static final String OTHER_NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getOtherName() <em>Other Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOtherName()
   * @generated
   * @ordered
   */
  protected String otherName = OTHER_NAME_EDEFAULT;

  /**
   * The default value of the '{@link #getValue() <em>Value</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getValue()
   * @generated
   * @ordered
   */
  protected static final String VALUE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getValue() <em>Value</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getValue()
   * @generated
   * @ordered
   */
  protected String value = VALUE_EDEFAULT;

  /**
   * The cached value of the '{@link #getSubParameters() <em>Sub Parameters</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSubParameters()
   * @generated
   * @ordered
   */
  protected EList<ParameterValue> subParameters;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ParameterValueImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return PipelinePackage.Literals.PARAMETER_VALUE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public PipelineKeyword getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setName(PipelineKeyword newName)
  {
    PipelineKeyword oldName = name;
    name = newName == null ? NAME_EDEFAULT : newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PipelinePackage.PARAMETER_VALUE__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getOtherName()
  {
    return otherName;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setOtherName(String newOtherName)
  {
    String oldOtherName = otherName;
    otherName = newOtherName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PipelinePackage.PARAMETER_VALUE__OTHER_NAME, oldOtherName, otherName));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getValue()
  {
    return value;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setValue(String newValue)
  {
    String oldValue = value;
    value = newValue;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PipelinePackage.PARAMETER_VALUE__VALUE, oldValue, value));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<ParameterValue> getSubParameters()
  {
    if (subParameters == null)
    {
      subParameters = new EObjectContainmentEList<ParameterValue>(ParameterValue.class, this, PipelinePackage.PARAMETER_VALUE__SUB_PARAMETERS);
    }
    return subParameters;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case PipelinePackage.PARAMETER_VALUE__SUB_PARAMETERS:
        return ((InternalEList<?>)getSubParameters()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case PipelinePackage.PARAMETER_VALUE__NAME:
        return getName();
      case PipelinePackage.PARAMETER_VALUE__OTHER_NAME:
        return getOtherName();
      case PipelinePackage.PARAMETER_VALUE__VALUE:
        return getValue();
      case PipelinePackage.PARAMETER_VALUE__SUB_PARAMETERS:
        return getSubParameters();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case PipelinePackage.PARAMETER_VALUE__NAME:
        setName((PipelineKeyword)newValue);
        return;
      case PipelinePackage.PARAMETER_VALUE__OTHER_NAME:
        setOtherName((String)newValue);
        return;
      case PipelinePackage.PARAMETER_VALUE__VALUE:
        setValue((String)newValue);
        return;
      case PipelinePackage.PARAMETER_VALUE__SUB_PARAMETERS:
        getSubParameters().clear();
        getSubParameters().addAll((Collection<? extends ParameterValue>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case PipelinePackage.PARAMETER_VALUE__NAME:
        setName(NAME_EDEFAULT);
        return;
      case PipelinePackage.PARAMETER_VALUE__OTHER_NAME:
        setOtherName(OTHER_NAME_EDEFAULT);
        return;
      case PipelinePackage.PARAMETER_VALUE__VALUE:
        setValue(VALUE_EDEFAULT);
        return;
      case PipelinePackage.PARAMETER_VALUE__SUB_PARAMETERS:
        getSubParameters().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case PipelinePackage.PARAMETER_VALUE__NAME:
        return name != NAME_EDEFAULT;
      case PipelinePackage.PARAMETER_VALUE__OTHER_NAME:
        return OTHER_NAME_EDEFAULT == null ? otherName != null : !OTHER_NAME_EDEFAULT.equals(otherName);
      case PipelinePackage.PARAMETER_VALUE__VALUE:
        return VALUE_EDEFAULT == null ? value != null : !VALUE_EDEFAULT.equals(value);
      case PipelinePackage.PARAMETER_VALUE__SUB_PARAMETERS:
        return subParameters != null && !subParameters.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(", otherName: ");
    result.append(otherName);
    result.append(", value: ");
    result.append(value);
    result.append(')');
    return result.toString();
  }

} //ParameterValueImpl
