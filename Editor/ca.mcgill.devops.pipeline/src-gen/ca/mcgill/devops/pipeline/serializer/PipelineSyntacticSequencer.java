/*
 * generated by Xtext 2.33.0
 */
package ca.mcgill.devops.pipeline.serializer;

import ca.mcgill.devops.pipeline.services.PipelineGrammarAccess;
import com.google.inject.Inject;
import java.util.List;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.IGrammarAccess;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.nodemodel.INode;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.AbstractElementAlias;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.AlternativeAlias;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.GroupAlias;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.TokenAlias;
import org.eclipse.xtext.serializer.analysis.ISyntacticSequencerPDAProvider.ISynNavigable;
import org.eclipse.xtext.serializer.analysis.ISyntacticSequencerPDAProvider.ISynTransition;
import org.eclipse.xtext.serializer.sequencer.AbstractSyntacticSequencer;

@SuppressWarnings("all")
public class PipelineSyntacticSequencer extends AbstractSyntacticSequencer {

	protected PipelineGrammarAccess grammarAccess;
	protected AbstractElementAlias match_Action___BEGINTerminalRuleCall_2_0_ENDTerminalRuleCall_2_2__q;
	protected AbstractElementAlias match_Configuration___BEGINTerminalRuleCall_0_2_2_0_0_or_ENDTerminalRuleCall_0_2_2_1_1__a;
	protected AbstractElementAlias match_Configuration___BEGINTerminalRuleCall_0_2_2_0_0_or_ENDTerminalRuleCall_0_2_2_1_1__p;
	protected AbstractElementAlias match_Configuration___ENDTerminalRuleCall_0_2_2_1_1_BEGINTerminalRuleCall_0_2_2_0_0_a__p;
	protected AbstractElementAlias match_Configuration___ENDTerminalRuleCall_0_2_2_1_1_a_BEGINTerminalRuleCall_0_2_2_0_0__a;
	protected AbstractElementAlias match_Configuration___ENDTerminalRuleCall_0_2_2_1_1_a_BEGINTerminalRuleCall_0_2_2_0_0__p;
	protected AbstractElementAlias match_Configuration___ENDTerminalRuleCall_0_2_2_1_1_p_BEGINTerminalRuleCall_0_2_2_0_0_p__p;
	protected AbstractElementAlias match_Configuration___ParametersKeyword_0_0_0_or___PoolKeyword_0_2_0___BEGINTerminalRuleCall_0_2_2_0_0_or_ENDTerminalRuleCall_0_2_2_1_1__a___or_____DockerKeyword_1_1_0_IDTerminalRuleCall_1_1_1___or___ENDTerminalRuleCall_1_2_1___SizeKeyword_1_2_0_0_IDTerminalRuleCall_1_2_0_1__q___or___OptionsKeyword_1_0_0_BEGINTerminalRuleCall_1_0_1___MaxTimeKeyword_1_0_2_0_INTTerminalRuleCall_1_0_2_1__q____p__q;
	protected AbstractElementAlias match_Event_ActivitiesActivityParserRuleCall_1_0_1_1_0_0;
	protected AbstractElementAlias match_Event_ActivitiesActivityParserRuleCall_1_5_2_0;
	protected AbstractElementAlias match_Event_AutoCancelIDTerminalRuleCall_1_3_1_0;
	protected AbstractElementAlias match_Event_BEGINTerminalRuleCall_1_0_1_2_0_or_____BEGINTerminalRuleCall_1_0_1_2_0_ENDTerminalRuleCall_1_0_1_2_2__q_____ENDTerminalRuleCall_1_6_a_BEGINTerminalRuleCall_1_0_0__p_TypesKeyword_1_0_1_0__p_BEGINTerminalRuleCall_1_0_1_2_0___ENDTerminalRuleCall_1_0_1_2_2_____ENDTerminalRuleCall_1_6_a_BEGINTerminalRuleCall_1_0_0__p_TypesKeyword_1_0_1_0__p_BEGINTerminalRuleCall_1_0_1_2_0__a__;
	protected AbstractElementAlias match_Event_BranchesBranchParserRuleCall_0_0_0;
	protected AbstractElementAlias match_Event_BranchesBranchParserRuleCall_1_1_2_0_1_0;
	protected AbstractElementAlias match_Event_DraftsIDTerminalRuleCall_1_4_1_0;
	protected AbstractElementAlias match_Event_HyphenMinusKeyword_1_0_1_2_1_0_q;
	protected AbstractElementAlias match_Event_KeywordPipelineKeywordEnumRuleCall_0_1_0;
	protected AbstractElementAlias match_Event___BEGINTerminalRuleCall_1_0_1_2_0_ENDTerminalRuleCall_1_0_1_2_2_____ENDTerminalRuleCall_1_6_a_BEGINTerminalRuleCall_1_0_0__p_TypesKeyword_1_0_1_0__p__a;
	protected AbstractElementAlias match_Event___BEGINTerminalRuleCall_1_1_2_1_0___ExcludesKeyword_1_1_2_1_1_0_1_or_IncludesKeyword_1_1_2_1_1_0_0__p_ENDTerminalRuleCall_1_1_2_1_2__q;
	protected AbstractElementAlias match_Event___ENDTerminalRuleCall_1_0_1_2_2_____ENDTerminalRuleCall_1_6_a_BEGINTerminalRuleCall_1_0_0__p_TypesKeyword_1_0_1_0__p_BEGINTerminalRuleCall_1_0_1_2_0__a;
	protected AbstractElementAlias match_Event___ENDTerminalRuleCall_1_6_a_BEGINTerminalRuleCall_1_0_0__p;
	protected AbstractElementAlias match_Event___ExcludesKeyword_1_1_2_1_1_0_1_or_IncludesKeyword_1_1_2_1_1_0_0__a;
	protected AbstractElementAlias match_Event___ExcludesKeyword_1_1_2_1_1_0_1_or_IncludesKeyword_1_1_2_1_1_0_0__p;
	protected AbstractElementAlias match_Event_____BEGINTerminalRuleCall_1_0_1_2_0_ENDTerminalRuleCall_1_0_1_2_2__q___ENDTerminalRuleCall_1_6_a_BEGINTerminalRuleCall_1_0_0__p_TypesKeyword_1_0_1_0__a;
	protected AbstractElementAlias match_Event_____BEGINTerminalRuleCall_1_0_1_2_0_ENDTerminalRuleCall_1_0_1_2_2__q___ENDTerminalRuleCall_1_6_a_BEGINTerminalRuleCall_1_0_0__p_TypesKeyword_1_0_1_0__p;
	protected AbstractElementAlias match_Event_____ENDTerminalRuleCall_1_6_a_BEGINTerminalRuleCall_1_0_0__p_TypesKeyword_1_0_1_0__p;
	protected AbstractElementAlias match_JobParameter___BEGINTerminalRuleCall_2_0_ENDTerminalRuleCall_2_2__q;
	protected AbstractElementAlias match_Job_BEGINTerminalRuleCall_1_0_0_a;
	protected AbstractElementAlias match_Job_BEGINTerminalRuleCall_1_0_0_p;
	protected AbstractElementAlias match_Job_ColonKeyword_0_2_q;
	protected AbstractElementAlias match_Job___BEGINTerminalRuleCall_1_0_0___StepsKeyword_1_5_0_0_q_ENDTerminalRuleCall_1_5_1__a__p;
	protected AbstractElementAlias match_Job___BEGINTerminalRuleCall_1_0_0_q_ENDTerminalRuleCall_1_5_1_q__p;
	protected AbstractElementAlias match_Job___BEGINTerminalRuleCall_1_0_0_q___StepsKeyword_1_5_0_0_q_ENDTerminalRuleCall_1_5_1__q__p;
	protected AbstractElementAlias match_Job___BEGINTerminalRuleCall_1_3_1_1_0_0_or_ENDTerminalRuleCall_1_3_1_1_1_1__a;
	protected AbstractElementAlias match_Job___BEGINTerminalRuleCall_1_3_1_1_0_0_or_ENDTerminalRuleCall_1_3_1_1_1_1__p;
	protected AbstractElementAlias match_Job___ENDTerminalRuleCall_1_3_1_1_1_1_BEGINTerminalRuleCall_1_3_1_1_0_0_a__p;
	protected AbstractElementAlias match_Job___ENDTerminalRuleCall_1_3_1_1_1_1_a_BEGINTerminalRuleCall_1_3_1_1_0_0__a;
	protected AbstractElementAlias match_Job___ENDTerminalRuleCall_1_3_1_1_1_1_a_BEGINTerminalRuleCall_1_3_1_1_0_0__p;
	protected AbstractElementAlias match_Job___ENDTerminalRuleCall_1_3_1_1_1_1_p_BEGINTerminalRuleCall_1_3_1_1_0_0_p__p;
	protected AbstractElementAlias match_Job___ENDTerminalRuleCall_1_5_1_q___BEGINTerminalRuleCall_1_0_0_q_ENDTerminalRuleCall_1_5_1_q__p_StepsKeyword_1_5_0_0__a;
	protected AbstractElementAlias match_Job___HyphenMinusKeyword_0_0_0_JobKeyword_0_0_1__q;
	protected AbstractElementAlias match_Job___StepsKeyword_1_5_0_0_q_ENDTerminalRuleCall_1_5_1_BEGINTerminalRuleCall_1_0_0_a__a;
	protected AbstractElementAlias match_Job_____ENDTerminalRuleCall_1_5_1_BEGINTerminalRuleCall_1_0_0_a__p_StepsKeyword_1_5_0_0__a;
	protected AbstractElementAlias match_Job_____StepsKeyword_1_5_0_0_or___BEGINTerminalRuleCall_1_0_0_p_StepsKeyword_1_5_0_0____q_ENDTerminalRuleCall_1_5_1__a;
	protected AbstractElementAlias match_Parameter_ENDTerminalRuleCall_3_1_a;
	protected AbstractElementAlias match_Parameter_ENDTerminalRuleCall_3_1_p;
	protected AbstractElementAlias match_Parameter___BEGINTerminalRuleCall_2_1_0_ENDTerminalRuleCall_2_1_2_ENDTerminalRuleCall_3_1_a__a;
	protected AbstractElementAlias match_Parameter___ENDTerminalRuleCall_2_1_2_ENDTerminalRuleCall_3_1_a_BEGINTerminalRuleCall_2_1_0__a;
	protected AbstractElementAlias match_Parameter___ENDTerminalRuleCall_3_1___BEGINTerminalRuleCall_2_1_0_ENDTerminalRuleCall_2_1_2__a__p;
	protected AbstractElementAlias match_Parameter___ENDTerminalRuleCall_3_1_or___BEGINTerminalRuleCall_2_1_0_ENDTerminalRuleCall_2_1_2____p;
	protected AbstractElementAlias match_Parameter___ENDTerminalRuleCall_3_1_q___BEGINTerminalRuleCall_2_1_0_ENDTerminalRuleCall_2_1_2__q__p;
	protected AbstractElementAlias match_Parameter_____ENDTerminalRuleCall_2_1_2_or___ENDTerminalRuleCall_2_1_2_ENDTerminalRuleCall_3_1_p_____BEGINTerminalRuleCall_2_1_0__a;
	protected AbstractElementAlias match_Pipeline_BEGINTerminalRuleCall_0_5_0_2_0_or_____BEGINTerminalRuleCall_0_5_0_2_0_ENDTerminalRuleCall_0_5_0_2_2__q___OnKeyword_0_5_0_0___DefaultsKeyword_0_3_0_BEGINTerminalRuleCall_0_3_1_RunKeyword_0_3_2_BEGINTerminalRuleCall_0_3_3_ENDTerminalRuleCall_0_3_5_ENDTerminalRuleCall_0_3_6__a__p_BEGINTerminalRuleCall_0_5_0_2_0___ENDTerminalRuleCall_0_5_0_2_2___OnKeyword_0_5_0_0___DefaultsKeyword_0_3_0_BEGINTerminalRuleCall_0_3_1_RunKeyword_0_3_2_BEGINTerminalRuleCall_0_3_3_ENDTerminalRuleCall_0_3_5_ENDTerminalRuleCall_0_3_6__a__p_BEGINTerminalRuleCall_0_5_0_2_0__a__;
	protected AbstractElementAlias match_Pipeline_OnKeyword_0_5_0_0_a;
	protected AbstractElementAlias match_Pipeline___BEGINTerminalRuleCall_0_5_0_2_0_ENDTerminalRuleCall_0_5_0_2_2___OnKeyword_0_5_0_0___DefaultsKeyword_0_3_0_BEGINTerminalRuleCall_0_3_1_RunKeyword_0_3_2_BEGINTerminalRuleCall_0_3_3_ENDTerminalRuleCall_0_3_5_ENDTerminalRuleCall_0_3_6__a__p__a;
	protected AbstractElementAlias match_Pipeline___DefaultsKeyword_0_3_0_BEGINTerminalRuleCall_0_3_1_RunKeyword_0_3_2_BEGINTerminalRuleCall_0_3_3_ENDTerminalRuleCall_0_3_5_ENDTerminalRuleCall_0_3_6_OnKeyword_0_5_0_0_a_BEGINTerminalRuleCall_0_5_0_2_0_ENDTerminalRuleCall_0_5_0_2_2___OnKeyword_0_5_0_0_a_BEGINTerminalRuleCall_0_5_0_2_0_ENDTerminalRuleCall_0_5_0_2_2__a_OnKeyword_0_5_0_0_a___DefaultsKeyword_0_3_0_BEGINTerminalRuleCall_0_3_1_RunKeyword_0_3_2_BEGINTerminalRuleCall_0_3_3_ENDTerminalRuleCall_0_3_5_ENDTerminalRuleCall_0_3_6_OnKeyword_0_5_0_0_a__a__a;
	protected AbstractElementAlias match_Pipeline___DefaultsKeyword_0_3_0_BEGINTerminalRuleCall_0_3_1_RunKeyword_0_3_2_BEGINTerminalRuleCall_0_3_3_ENDTerminalRuleCall_0_3_5_ENDTerminalRuleCall_0_3_6_OnKeyword_0_5_0_0_a__a;
	protected AbstractElementAlias match_Pipeline___DefaultsKeyword_0_3_0_BEGINTerminalRuleCall_0_3_1_RunKeyword_0_3_2_BEGINTerminalRuleCall_0_3_3_ENDTerminalRuleCall_0_3_5_ENDTerminalRuleCall_0_3_6___OnKeyword_0_5_0_0___BEGINTerminalRuleCall_0_5_0_2_0_ENDTerminalRuleCall_0_5_0_2_2__q__a__a;
	protected AbstractElementAlias match_Pipeline___ENDTerminalRuleCall_0_3_5_ENDTerminalRuleCall_0_3_6___OnKeyword_0_5_0_0___BEGINTerminalRuleCall_0_5_0_2_0_ENDTerminalRuleCall_0_5_0_2_2__q__a_DefaultsKeyword_0_3_0_BEGINTerminalRuleCall_0_3_1_RunKeyword_0_3_2_BEGINTerminalRuleCall_0_3_3__a;
	protected AbstractElementAlias match_Pipeline___ENDTerminalRuleCall_0_5_0_2_2___OnKeyword_0_5_0_0___DefaultsKeyword_0_3_0_BEGINTerminalRuleCall_0_3_1_RunKeyword_0_3_2_BEGINTerminalRuleCall_0_3_3_ENDTerminalRuleCall_0_3_5_ENDTerminalRuleCall_0_3_6__a__p_BEGINTerminalRuleCall_0_5_0_2_0__a;
	protected AbstractElementAlias match_Pipeline___OnKeyword_0_5_0_0___BEGINTerminalRuleCall_0_5_0_2_0_ENDTerminalRuleCall_0_5_0_2_2__q___DefaultsKeyword_0_3_0_BEGINTerminalRuleCall_0_3_1_RunKeyword_0_3_2_BEGINTerminalRuleCall_0_3_3_ENDTerminalRuleCall_0_3_5_ENDTerminalRuleCall_0_3_6__a__p;
	protected AbstractElementAlias match_Pipeline___OnKeyword_0_5_0_0___BEGINTerminalRuleCall_0_5_0_2_0_ENDTerminalRuleCall_0_5_0_2_2__q__a;
	protected AbstractElementAlias match_Pipeline___OnKeyword_0_5_0_0___BEGINTerminalRuleCall_0_5_0_2_0_ENDTerminalRuleCall_0_5_0_2_2__q__p_or_______OnKeyword_0_5_0_0___BEGINTerminalRuleCall_0_5_0_2_0_ENDTerminalRuleCall_0_5_0_2_2__q__p___BEGINTerminalRuleCall_0_5_0_2_0_ENDTerminalRuleCall_0_5_0_2_2__q__q___DefaultsKeyword_0_3_0_BEGINTerminalRuleCall_0_3_1_RunKeyword_0_3_2_BEGINTerminalRuleCall_0_3_3_ENDTerminalRuleCall_0_3_5_ENDTerminalRuleCall_0_3_6__p___OnKeyword_0_5_0_0___BEGINTerminalRuleCall_0_5_0_2_0_ENDTerminalRuleCall_0_5_0_2_2__q__p_____BEGINTerminalRuleCall_0_5_0_2_0_ENDTerminalRuleCall_0_5_0_2_2__q___DefaultsKeyword_0_3_0_BEGINTerminalRuleCall_0_3_1_RunKeyword_0_3_2_BEGINTerminalRuleCall_0_3_3_ENDTerminalRuleCall_0_3_5_ENDTerminalRuleCall_0_3_6__p___OnKeyword_0_5_0_0___BEGINTerminalRuleCall_0_5_0_2_0_ENDTerminalRuleCall_0_5_0_2_2__q__p__a__;
	protected AbstractElementAlias match_Pipeline___OnKeyword_0_5_0_0___DefaultsKeyword_0_3_0_BEGINTerminalRuleCall_0_3_1_RunKeyword_0_3_2_BEGINTerminalRuleCall_0_3_3_ENDTerminalRuleCall_0_3_5_ENDTerminalRuleCall_0_3_6__a___BEGINTerminalRuleCall_0_5_0_2_0_ENDTerminalRuleCall_0_5_0_2_2__q__a;
	protected AbstractElementAlias match_Pipeline___OnKeyword_0_5_0_0___DefaultsKeyword_0_3_0_BEGINTerminalRuleCall_0_3_1_RunKeyword_0_3_2_BEGINTerminalRuleCall_0_3_3_ENDTerminalRuleCall_0_3_5_ENDTerminalRuleCall_0_3_6__a__p;
	protected AbstractElementAlias match_Pipeline___OnKeyword_0_5_0_0_a_BEGINTerminalRuleCall_0_5_0_2_0_ENDTerminalRuleCall_0_5_0_2_2__a;
	protected AbstractElementAlias match_Pipeline_____OnKeyword_0_5_0_0___BEGINTerminalRuleCall_0_5_0_2_0_ENDTerminalRuleCall_0_5_0_2_2__q__q___DefaultsKeyword_0_3_0_BEGINTerminalRuleCall_0_3_1_RunKeyword_0_3_2_BEGINTerminalRuleCall_0_3_3_ENDTerminalRuleCall_0_3_5_ENDTerminalRuleCall_0_3_6__q__p;
	protected AbstractElementAlias match_Script_GreaterThanSignHyphenMinusKeyword_0_1_1_0_1_or_VerticalLineKeyword_0_1_1_0_0;
	protected AbstractElementAlias match_Script___BEGINTerminalRuleCall_1_0_ENDTerminalRuleCall_1_2__q;
	protected AbstractElementAlias match_Stage_DependsOnStageIDTerminalRuleCall_1_1_1_0_1;
	protected AbstractElementAlias match_Stage___BEGINTerminalRuleCall_1_0_0_or_DependsOnKeyword_1_1_0__a;
	protected AbstractElementAlias match_Stage___BEGINTerminalRuleCall_1_0_0_q_DependsOnKeyword_1_1_0_q___JobsKeyword_1_2_0_0_ENDTerminalRuleCall_1_2_1__q__p;
	protected AbstractElementAlias match_Stage___DependsOnKeyword_1_1_0_q_BEGINTerminalRuleCall_1_0_0_q___JobsKeyword_1_2_0_0_ENDTerminalRuleCall_1_2_1__q__p;
	protected AbstractElementAlias match_Stage___ENDTerminalRuleCall_1_2_1___BEGINTerminalRuleCall_1_0_0_or_DependsOnKeyword_1_1_0__a_JobsKeyword_1_2_0_0__a;
	protected AbstractElementAlias match_Stage___ENDTerminalRuleCall_1_2_1___BEGINTerminalRuleCall_1_0_0_q_DependsOnKeyword_1_1_0_q__p_JobsKeyword_1_2_0_0__a;
	protected AbstractElementAlias match_Stage___ENDTerminalRuleCall_1_2_1___DependsOnKeyword_1_1_0_q_BEGINTerminalRuleCall_1_0_0_q__p_JobsKeyword_1_2_0_0__a;
	protected AbstractElementAlias match_Stage___JobsKeyword_1_2_0_0_ENDTerminalRuleCall_1_2_1___BEGINTerminalRuleCall_1_0_0_or_DependsOnKeyword_1_1_0__a__a;
	protected AbstractElementAlias match_Stage_____BEGINTerminalRuleCall_1_0_0_or_DependsOnKeyword_1_1_0__q___JobsKeyword_1_2_0_0_ENDTerminalRuleCall_1_2_1__q__p;
	
	@Inject
	protected void init(IGrammarAccess access) {
		grammarAccess = (PipelineGrammarAccess) access;
		init0();
		init1();
	}
	
	private void init0() {
		match_Action___BEGINTerminalRuleCall_2_0_ENDTerminalRuleCall_2_2__q = new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getActionAccess().getBEGINTerminalRuleCall_2_0()), new TokenAlias(false, false, grammarAccess.getActionAccess().getENDTerminalRuleCall_2_2()));
		match_Configuration___BEGINTerminalRuleCall_0_2_2_0_0_or_ENDTerminalRuleCall_0_2_2_1_1__a = new AlternativeAlias(true, true, new TokenAlias(false, false, grammarAccess.getConfigurationAccess().getBEGINTerminalRuleCall_0_2_2_0_0()), new TokenAlias(false, false, grammarAccess.getConfigurationAccess().getENDTerminalRuleCall_0_2_2_1_1()));
		match_Configuration___BEGINTerminalRuleCall_0_2_2_0_0_or_ENDTerminalRuleCall_0_2_2_1_1__p = new AlternativeAlias(true, false, new TokenAlias(false, false, grammarAccess.getConfigurationAccess().getBEGINTerminalRuleCall_0_2_2_0_0()), new TokenAlias(false, false, grammarAccess.getConfigurationAccess().getENDTerminalRuleCall_0_2_2_1_1()));
		match_Configuration___ENDTerminalRuleCall_0_2_2_1_1_BEGINTerminalRuleCall_0_2_2_0_0_a__p = new GroupAlias(true, false, new TokenAlias(false, false, grammarAccess.getConfigurationAccess().getENDTerminalRuleCall_0_2_2_1_1()), new TokenAlias(true, true, grammarAccess.getConfigurationAccess().getBEGINTerminalRuleCall_0_2_2_0_0()));
		match_Configuration___ENDTerminalRuleCall_0_2_2_1_1_a_BEGINTerminalRuleCall_0_2_2_0_0__a = new GroupAlias(true, true, new TokenAlias(true, true, grammarAccess.getConfigurationAccess().getENDTerminalRuleCall_0_2_2_1_1()), new TokenAlias(false, false, grammarAccess.getConfigurationAccess().getBEGINTerminalRuleCall_0_2_2_0_0()));
		match_Configuration___ENDTerminalRuleCall_0_2_2_1_1_a_BEGINTerminalRuleCall_0_2_2_0_0__p = new GroupAlias(true, false, new TokenAlias(true, true, grammarAccess.getConfigurationAccess().getENDTerminalRuleCall_0_2_2_1_1()), new TokenAlias(false, false, grammarAccess.getConfigurationAccess().getBEGINTerminalRuleCall_0_2_2_0_0()));
		match_Configuration___ENDTerminalRuleCall_0_2_2_1_1_p_BEGINTerminalRuleCall_0_2_2_0_0_p__p = new GroupAlias(true, false, new TokenAlias(true, false, grammarAccess.getConfigurationAccess().getENDTerminalRuleCall_0_2_2_1_1()), new TokenAlias(true, false, grammarAccess.getConfigurationAccess().getBEGINTerminalRuleCall_0_2_2_0_0()));
		match_Configuration___ParametersKeyword_0_0_0_or___PoolKeyword_0_2_0___BEGINTerminalRuleCall_0_2_2_0_0_or_ENDTerminalRuleCall_0_2_2_1_1__a___or_____DockerKeyword_1_1_0_IDTerminalRuleCall_1_1_1___or___ENDTerminalRuleCall_1_2_1___SizeKeyword_1_2_0_0_IDTerminalRuleCall_1_2_0_1__q___or___OptionsKeyword_1_0_0_BEGINTerminalRuleCall_1_0_1___MaxTimeKeyword_1_0_2_0_INTTerminalRuleCall_1_0_2_1__q____p__q = new AlternativeAlias(false, true, new AlternativeAlias(true, false, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getConfigurationAccess().getDockerKeyword_1_1_0()), new TokenAlias(false, false, grammarAccess.getConfigurationAccess().getIDTerminalRuleCall_1_1_1())), new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getConfigurationAccess().getENDTerminalRuleCall_1_2_1()), new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getConfigurationAccess().getSizeKeyword_1_2_0_0()), new TokenAlias(false, false, grammarAccess.getConfigurationAccess().getIDTerminalRuleCall_1_2_0_1()))), new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getConfigurationAccess().getOptionsKeyword_1_0_0()), new TokenAlias(false, false, grammarAccess.getConfigurationAccess().getBEGINTerminalRuleCall_1_0_1()), new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getConfigurationAccess().getMaxTimeKeyword_1_0_2_0()), new TokenAlias(false, false, grammarAccess.getConfigurationAccess().getINTTerminalRuleCall_1_0_2_1())))), new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getConfigurationAccess().getPoolKeyword_0_2_0()), new AlternativeAlias(true, true, new TokenAlias(false, false, grammarAccess.getConfigurationAccess().getBEGINTerminalRuleCall_0_2_2_0_0()), new TokenAlias(false, false, grammarAccess.getConfigurationAccess().getENDTerminalRuleCall_0_2_2_1_1()))), new TokenAlias(false, false, grammarAccess.getConfigurationAccess().getParametersKeyword_0_0_0()));
		match_Event_ActivitiesActivityParserRuleCall_1_0_1_1_0_0 = new TokenAlias(false, false, grammarAccess.getEventAccess().getActivitiesActivityParserRuleCall_1_0_1_1_0_0());
		match_Event_ActivitiesActivityParserRuleCall_1_5_2_0 = new TokenAlias(false, false, grammarAccess.getEventAccess().getActivitiesActivityParserRuleCall_1_5_2_0());
		match_Event_AutoCancelIDTerminalRuleCall_1_3_1_0 = new TokenAlias(false, false, grammarAccess.getEventAccess().getAutoCancelIDTerminalRuleCall_1_3_1_0());
		match_Event_BEGINTerminalRuleCall_1_0_1_2_0_or_____BEGINTerminalRuleCall_1_0_1_2_0_ENDTerminalRuleCall_1_0_1_2_2__q_____ENDTerminalRuleCall_1_6_a_BEGINTerminalRuleCall_1_0_0__p_TypesKeyword_1_0_1_0__p_BEGINTerminalRuleCall_1_0_1_2_0___ENDTerminalRuleCall_1_0_1_2_2_____ENDTerminalRuleCall_1_6_a_BEGINTerminalRuleCall_1_0_0__p_TypesKeyword_1_0_1_0__p_BEGINTerminalRuleCall_1_0_1_2_0__a__ = new AlternativeAlias(false, false, new GroupAlias(false, false, new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getEventAccess().getBEGINTerminalRuleCall_1_0_1_2_0()), new TokenAlias(false, false, grammarAccess.getEventAccess().getENDTerminalRuleCall_1_0_1_2_2())), new GroupAlias(true, false, new GroupAlias(true, false, new TokenAlias(true, true, grammarAccess.getEventAccess().getENDTerminalRuleCall_1_6()), new TokenAlias(false, false, grammarAccess.getEventAccess().getBEGINTerminalRuleCall_1_0_0())), new TokenAlias(false, false, grammarAccess.getEventAccess().getTypesKeyword_1_0_1_0())), new TokenAlias(false, false, grammarAccess.getEventAccess().getBEGINTerminalRuleCall_1_0_1_2_0()), new GroupAlias(true, true, new TokenAlias(false, false, grammarAccess.getEventAccess().getENDTerminalRuleCall_1_0_1_2_2()), new GroupAlias(true, false, new GroupAlias(true, false, new TokenAlias(true, true, grammarAccess.getEventAccess().getENDTerminalRuleCall_1_6()), new TokenAlias(false, false, grammarAccess.getEventAccess().getBEGINTerminalRuleCall_1_0_0())), new TokenAlias(false, false, grammarAccess.getEventAccess().getTypesKeyword_1_0_1_0())), new TokenAlias(false, false, grammarAccess.getEventAccess().getBEGINTerminalRuleCall_1_0_1_2_0()))), new TokenAlias(false, false, grammarAccess.getEventAccess().getBEGINTerminalRuleCall_1_0_1_2_0()));
		match_Event_BranchesBranchParserRuleCall_0_0_0 = new TokenAlias(false, false, grammarAccess.getEventAccess().getBranchesBranchParserRuleCall_0_0_0());
		match_Event_BranchesBranchParserRuleCall_1_1_2_0_1_0 = new TokenAlias(false, false, grammarAccess.getEventAccess().getBranchesBranchParserRuleCall_1_1_2_0_1_0());
		match_Event_DraftsIDTerminalRuleCall_1_4_1_0 = new TokenAlias(false, false, grammarAccess.getEventAccess().getDraftsIDTerminalRuleCall_1_4_1_0());
		match_Event_HyphenMinusKeyword_1_0_1_2_1_0_q = new TokenAlias(false, true, grammarAccess.getEventAccess().getHyphenMinusKeyword_1_0_1_2_1_0());
		match_Event_KeywordPipelineKeywordEnumRuleCall_0_1_0 = new TokenAlias(false, false, grammarAccess.getEventAccess().getKeywordPipelineKeywordEnumRuleCall_0_1_0());
		match_Event___BEGINTerminalRuleCall_1_0_1_2_0_ENDTerminalRuleCall_1_0_1_2_2_____ENDTerminalRuleCall_1_6_a_BEGINTerminalRuleCall_1_0_0__p_TypesKeyword_1_0_1_0__p__a = new GroupAlias(true, true, new TokenAlias(false, false, grammarAccess.getEventAccess().getBEGINTerminalRuleCall_1_0_1_2_0()), new TokenAlias(false, false, grammarAccess.getEventAccess().getENDTerminalRuleCall_1_0_1_2_2()), new GroupAlias(true, false, new GroupAlias(true, false, new TokenAlias(true, true, grammarAccess.getEventAccess().getENDTerminalRuleCall_1_6()), new TokenAlias(false, false, grammarAccess.getEventAccess().getBEGINTerminalRuleCall_1_0_0())), new TokenAlias(false, false, grammarAccess.getEventAccess().getTypesKeyword_1_0_1_0())));
		match_Event___BEGINTerminalRuleCall_1_1_2_1_0___ExcludesKeyword_1_1_2_1_1_0_1_or_IncludesKeyword_1_1_2_1_1_0_0__p_ENDTerminalRuleCall_1_1_2_1_2__q = new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getEventAccess().getBEGINTerminalRuleCall_1_1_2_1_0()), new AlternativeAlias(true, false, new TokenAlias(false, false, grammarAccess.getEventAccess().getExcludesKeyword_1_1_2_1_1_0_1()), new TokenAlias(false, false, grammarAccess.getEventAccess().getIncludesKeyword_1_1_2_1_1_0_0())), new TokenAlias(false, false, grammarAccess.getEventAccess().getENDTerminalRuleCall_1_1_2_1_2()));
		match_Event___ENDTerminalRuleCall_1_0_1_2_2_____ENDTerminalRuleCall_1_6_a_BEGINTerminalRuleCall_1_0_0__p_TypesKeyword_1_0_1_0__p_BEGINTerminalRuleCall_1_0_1_2_0__a = new GroupAlias(true, true, new TokenAlias(false, false, grammarAccess.getEventAccess().getENDTerminalRuleCall_1_0_1_2_2()), new GroupAlias(true, false, new GroupAlias(true, false, new TokenAlias(true, true, grammarAccess.getEventAccess().getENDTerminalRuleCall_1_6()), new TokenAlias(false, false, grammarAccess.getEventAccess().getBEGINTerminalRuleCall_1_0_0())), new TokenAlias(false, false, grammarAccess.getEventAccess().getTypesKeyword_1_0_1_0())), new TokenAlias(false, false, grammarAccess.getEventAccess().getBEGINTerminalRuleCall_1_0_1_2_0()));
		match_Event___ENDTerminalRuleCall_1_6_a_BEGINTerminalRuleCall_1_0_0__p = new GroupAlias(true, false, new TokenAlias(true, true, grammarAccess.getEventAccess().getENDTerminalRuleCall_1_6()), new TokenAlias(false, false, grammarAccess.getEventAccess().getBEGINTerminalRuleCall_1_0_0()));
		match_Event___ExcludesKeyword_1_1_2_1_1_0_1_or_IncludesKeyword_1_1_2_1_1_0_0__a = new AlternativeAlias(true, true, new TokenAlias(false, false, grammarAccess.getEventAccess().getExcludesKeyword_1_1_2_1_1_0_1()), new TokenAlias(false, false, grammarAccess.getEventAccess().getIncludesKeyword_1_1_2_1_1_0_0()));
		match_Event___ExcludesKeyword_1_1_2_1_1_0_1_or_IncludesKeyword_1_1_2_1_1_0_0__p = new AlternativeAlias(true, false, new TokenAlias(false, false, grammarAccess.getEventAccess().getExcludesKeyword_1_1_2_1_1_0_1()), new TokenAlias(false, false, grammarAccess.getEventAccess().getIncludesKeyword_1_1_2_1_1_0_0()));
		match_Event_____BEGINTerminalRuleCall_1_0_1_2_0_ENDTerminalRuleCall_1_0_1_2_2__q___ENDTerminalRuleCall_1_6_a_BEGINTerminalRuleCall_1_0_0__p_TypesKeyword_1_0_1_0__a = new GroupAlias(true, true, new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getEventAccess().getBEGINTerminalRuleCall_1_0_1_2_0()), new TokenAlias(false, false, grammarAccess.getEventAccess().getENDTerminalRuleCall_1_0_1_2_2())), new GroupAlias(true, false, new TokenAlias(true, true, grammarAccess.getEventAccess().getENDTerminalRuleCall_1_6()), new TokenAlias(false, false, grammarAccess.getEventAccess().getBEGINTerminalRuleCall_1_0_0())), new TokenAlias(false, false, grammarAccess.getEventAccess().getTypesKeyword_1_0_1_0()));
		match_Event_____BEGINTerminalRuleCall_1_0_1_2_0_ENDTerminalRuleCall_1_0_1_2_2__q___ENDTerminalRuleCall_1_6_a_BEGINTerminalRuleCall_1_0_0__p_TypesKeyword_1_0_1_0__p = new GroupAlias(true, false, new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getEventAccess().getBEGINTerminalRuleCall_1_0_1_2_0()), new TokenAlias(false, false, grammarAccess.getEventAccess().getENDTerminalRuleCall_1_0_1_2_2())), new GroupAlias(true, false, new TokenAlias(true, true, grammarAccess.getEventAccess().getENDTerminalRuleCall_1_6()), new TokenAlias(false, false, grammarAccess.getEventAccess().getBEGINTerminalRuleCall_1_0_0())), new TokenAlias(false, false, grammarAccess.getEventAccess().getTypesKeyword_1_0_1_0()));
		match_Event_____ENDTerminalRuleCall_1_6_a_BEGINTerminalRuleCall_1_0_0__p_TypesKeyword_1_0_1_0__p = new GroupAlias(true, false, new GroupAlias(true, false, new TokenAlias(true, true, grammarAccess.getEventAccess().getENDTerminalRuleCall_1_6()), new TokenAlias(false, false, grammarAccess.getEventAccess().getBEGINTerminalRuleCall_1_0_0())), new TokenAlias(false, false, grammarAccess.getEventAccess().getTypesKeyword_1_0_1_0()));
		match_JobParameter___BEGINTerminalRuleCall_2_0_ENDTerminalRuleCall_2_2__q = new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getJobParameterAccess().getBEGINTerminalRuleCall_2_0()), new TokenAlias(false, false, grammarAccess.getJobParameterAccess().getENDTerminalRuleCall_2_2()));
		match_Job_BEGINTerminalRuleCall_1_0_0_a = new TokenAlias(true, true, grammarAccess.getJobAccess().getBEGINTerminalRuleCall_1_0_0());
		match_Job_BEGINTerminalRuleCall_1_0_0_p = new TokenAlias(true, false, grammarAccess.getJobAccess().getBEGINTerminalRuleCall_1_0_0());
		match_Job_ColonKeyword_0_2_q = new TokenAlias(false, true, grammarAccess.getJobAccess().getColonKeyword_0_2());
		match_Job___BEGINTerminalRuleCall_1_0_0___StepsKeyword_1_5_0_0_q_ENDTerminalRuleCall_1_5_1__a__p = new GroupAlias(true, false, new TokenAlias(false, false, grammarAccess.getJobAccess().getBEGINTerminalRuleCall_1_0_0()), new GroupAlias(true, true, new TokenAlias(false, true, grammarAccess.getJobAccess().getStepsKeyword_1_5_0_0()), new TokenAlias(false, false, grammarAccess.getJobAccess().getENDTerminalRuleCall_1_5_1())));
		match_Job___BEGINTerminalRuleCall_1_0_0_q_ENDTerminalRuleCall_1_5_1_q__p = new GroupAlias(true, false, new TokenAlias(false, true, grammarAccess.getJobAccess().getBEGINTerminalRuleCall_1_0_0()), new TokenAlias(false, true, grammarAccess.getJobAccess().getENDTerminalRuleCall_1_5_1()));
		match_Job___BEGINTerminalRuleCall_1_0_0_q___StepsKeyword_1_5_0_0_q_ENDTerminalRuleCall_1_5_1__q__p = new GroupAlias(true, false, new TokenAlias(false, true, grammarAccess.getJobAccess().getBEGINTerminalRuleCall_1_0_0()), new GroupAlias(false, true, new TokenAlias(false, true, grammarAccess.getJobAccess().getStepsKeyword_1_5_0_0()), new TokenAlias(false, false, grammarAccess.getJobAccess().getENDTerminalRuleCall_1_5_1())));
		match_Job___BEGINTerminalRuleCall_1_3_1_1_0_0_or_ENDTerminalRuleCall_1_3_1_1_1_1__a = new AlternativeAlias(true, true, new TokenAlias(false, false, grammarAccess.getJobAccess().getBEGINTerminalRuleCall_1_3_1_1_0_0()), new TokenAlias(false, false, grammarAccess.getJobAccess().getENDTerminalRuleCall_1_3_1_1_1_1()));
		match_Job___BEGINTerminalRuleCall_1_3_1_1_0_0_or_ENDTerminalRuleCall_1_3_1_1_1_1__p = new AlternativeAlias(true, false, new TokenAlias(false, false, grammarAccess.getJobAccess().getBEGINTerminalRuleCall_1_3_1_1_0_0()), new TokenAlias(false, false, grammarAccess.getJobAccess().getENDTerminalRuleCall_1_3_1_1_1_1()));
		match_Job___ENDTerminalRuleCall_1_3_1_1_1_1_BEGINTerminalRuleCall_1_3_1_1_0_0_a__p = new GroupAlias(true, false, new TokenAlias(false, false, grammarAccess.getJobAccess().getENDTerminalRuleCall_1_3_1_1_1_1()), new TokenAlias(true, true, grammarAccess.getJobAccess().getBEGINTerminalRuleCall_1_3_1_1_0_0()));
		match_Job___ENDTerminalRuleCall_1_3_1_1_1_1_a_BEGINTerminalRuleCall_1_3_1_1_0_0__a = new GroupAlias(true, true, new TokenAlias(true, true, grammarAccess.getJobAccess().getENDTerminalRuleCall_1_3_1_1_1_1()), new TokenAlias(false, false, grammarAccess.getJobAccess().getBEGINTerminalRuleCall_1_3_1_1_0_0()));
		match_Job___ENDTerminalRuleCall_1_3_1_1_1_1_a_BEGINTerminalRuleCall_1_3_1_1_0_0__p = new GroupAlias(true, false, new TokenAlias(true, true, grammarAccess.getJobAccess().getENDTerminalRuleCall_1_3_1_1_1_1()), new TokenAlias(false, false, grammarAccess.getJobAccess().getBEGINTerminalRuleCall_1_3_1_1_0_0()));
		match_Job___ENDTerminalRuleCall_1_3_1_1_1_1_p_BEGINTerminalRuleCall_1_3_1_1_0_0_p__p = new GroupAlias(true, false, new TokenAlias(true, false, grammarAccess.getJobAccess().getENDTerminalRuleCall_1_3_1_1_1_1()), new TokenAlias(true, false, grammarAccess.getJobAccess().getBEGINTerminalRuleCall_1_3_1_1_0_0()));
		match_Job___ENDTerminalRuleCall_1_5_1_q___BEGINTerminalRuleCall_1_0_0_q_ENDTerminalRuleCall_1_5_1_q__p_StepsKeyword_1_5_0_0__a = new GroupAlias(true, true, new TokenAlias(false, true, grammarAccess.getJobAccess().getENDTerminalRuleCall_1_5_1()), new GroupAlias(true, false, new TokenAlias(false, true, grammarAccess.getJobAccess().getBEGINTerminalRuleCall_1_0_0()), new TokenAlias(false, true, grammarAccess.getJobAccess().getENDTerminalRuleCall_1_5_1())), new TokenAlias(false, false, grammarAccess.getJobAccess().getStepsKeyword_1_5_0_0()));
		match_Job___HyphenMinusKeyword_0_0_0_JobKeyword_0_0_1__q = new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getJobAccess().getHyphenMinusKeyword_0_0_0()), new TokenAlias(false, false, grammarAccess.getJobAccess().getJobKeyword_0_0_1()));
		match_Job___StepsKeyword_1_5_0_0_q_ENDTerminalRuleCall_1_5_1_BEGINTerminalRuleCall_1_0_0_a__a = new GroupAlias(true, true, new TokenAlias(false, true, grammarAccess.getJobAccess().getStepsKeyword_1_5_0_0()), new TokenAlias(false, false, grammarAccess.getJobAccess().getENDTerminalRuleCall_1_5_1()), new TokenAlias(true, true, grammarAccess.getJobAccess().getBEGINTerminalRuleCall_1_0_0()));
		match_Job_____ENDTerminalRuleCall_1_5_1_BEGINTerminalRuleCall_1_0_0_a__p_StepsKeyword_1_5_0_0__a = new GroupAlias(true, true, new GroupAlias(true, false, new TokenAlias(false, false, grammarAccess.getJobAccess().getENDTerminalRuleCall_1_5_1()), new TokenAlias(true, true, grammarAccess.getJobAccess().getBEGINTerminalRuleCall_1_0_0())), new TokenAlias(false, false, grammarAccess.getJobAccess().getStepsKeyword_1_5_0_0()));
		match_Job_____StepsKeyword_1_5_0_0_or___BEGINTerminalRuleCall_1_0_0_p_StepsKeyword_1_5_0_0____q_ENDTerminalRuleCall_1_5_1__a = new GroupAlias(true, true, new AlternativeAlias(false, true, new GroupAlias(false, false, new TokenAlias(true, false, grammarAccess.getJobAccess().getBEGINTerminalRuleCall_1_0_0()), new TokenAlias(false, false, grammarAccess.getJobAccess().getStepsKeyword_1_5_0_0())), new TokenAlias(false, false, grammarAccess.getJobAccess().getStepsKeyword_1_5_0_0())), new TokenAlias(false, false, grammarAccess.getJobAccess().getENDTerminalRuleCall_1_5_1()));
		match_Parameter_ENDTerminalRuleCall_3_1_a = new TokenAlias(true, true, grammarAccess.getParameterAccess().getENDTerminalRuleCall_3_1());
		match_Parameter_ENDTerminalRuleCall_3_1_p = new TokenAlias(true, false, grammarAccess.getParameterAccess().getENDTerminalRuleCall_3_1());
		match_Parameter___BEGINTerminalRuleCall_2_1_0_ENDTerminalRuleCall_2_1_2_ENDTerminalRuleCall_3_1_a__a = new GroupAlias(true, true, new TokenAlias(false, false, grammarAccess.getParameterAccess().getBEGINTerminalRuleCall_2_1_0()), new TokenAlias(false, false, grammarAccess.getParameterAccess().getENDTerminalRuleCall_2_1_2()), new TokenAlias(true, true, grammarAccess.getParameterAccess().getENDTerminalRuleCall_3_1()));
		match_Parameter___ENDTerminalRuleCall_2_1_2_ENDTerminalRuleCall_3_1_a_BEGINTerminalRuleCall_2_1_0__a = new GroupAlias(true, true, new TokenAlias(false, false, grammarAccess.getParameterAccess().getENDTerminalRuleCall_2_1_2()), new TokenAlias(true, true, grammarAccess.getParameterAccess().getENDTerminalRuleCall_3_1()), new TokenAlias(false, false, grammarAccess.getParameterAccess().getBEGINTerminalRuleCall_2_1_0()));
		match_Parameter___ENDTerminalRuleCall_3_1___BEGINTerminalRuleCall_2_1_0_ENDTerminalRuleCall_2_1_2__a__p = new GroupAlias(true, false, new TokenAlias(false, false, grammarAccess.getParameterAccess().getENDTerminalRuleCall_3_1()), new GroupAlias(true, true, new TokenAlias(false, false, grammarAccess.getParameterAccess().getBEGINTerminalRuleCall_2_1_0()), new TokenAlias(false, false, grammarAccess.getParameterAccess().getENDTerminalRuleCall_2_1_2())));
		match_Parameter___ENDTerminalRuleCall_3_1_or___BEGINTerminalRuleCall_2_1_0_ENDTerminalRuleCall_2_1_2____p = new AlternativeAlias(true, false, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getParameterAccess().getBEGINTerminalRuleCall_2_1_0()), new TokenAlias(false, false, grammarAccess.getParameterAccess().getENDTerminalRuleCall_2_1_2())), new TokenAlias(false, false, grammarAccess.getParameterAccess().getENDTerminalRuleCall_3_1()));
		match_Parameter___ENDTerminalRuleCall_3_1_q___BEGINTerminalRuleCall_2_1_0_ENDTerminalRuleCall_2_1_2__q__p = new GroupAlias(true, false, new TokenAlias(false, true, grammarAccess.getParameterAccess().getENDTerminalRuleCall_3_1()), new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getParameterAccess().getBEGINTerminalRuleCall_2_1_0()), new TokenAlias(false, false, grammarAccess.getParameterAccess().getENDTerminalRuleCall_2_1_2())));
		match_Parameter_____ENDTerminalRuleCall_2_1_2_or___ENDTerminalRuleCall_2_1_2_ENDTerminalRuleCall_3_1_p_____BEGINTerminalRuleCall_2_1_0__a = new GroupAlias(true, true, new AlternativeAlias(false, false, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getParameterAccess().getENDTerminalRuleCall_2_1_2()), new TokenAlias(true, false, grammarAccess.getParameterAccess().getENDTerminalRuleCall_3_1())), new TokenAlias(false, false, grammarAccess.getParameterAccess().getENDTerminalRuleCall_2_1_2())), new TokenAlias(false, false, grammarAccess.getParameterAccess().getBEGINTerminalRuleCall_2_1_0()));
		match_Pipeline_BEGINTerminalRuleCall_0_5_0_2_0_or_____BEGINTerminalRuleCall_0_5_0_2_0_ENDTerminalRuleCall_0_5_0_2_2__q___OnKeyword_0_5_0_0___DefaultsKeyword_0_3_0_BEGINTerminalRuleCall_0_3_1_RunKeyword_0_3_2_BEGINTerminalRuleCall_0_3_3_ENDTerminalRuleCall_0_3_5_ENDTerminalRuleCall_0_3_6__a__p_BEGINTerminalRuleCall_0_5_0_2_0___ENDTerminalRuleCall_0_5_0_2_2___OnKeyword_0_5_0_0___DefaultsKeyword_0_3_0_BEGINTerminalRuleCall_0_3_1_RunKeyword_0_3_2_BEGINTerminalRuleCall_0_3_3_ENDTerminalRuleCall_0_3_5_ENDTerminalRuleCall_0_3_6__a__p_BEGINTerminalRuleCall_0_5_0_2_0__a__ = new AlternativeAlias(false, false, new GroupAlias(false, false, new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getPipelineAccess().getBEGINTerminalRuleCall_0_5_0_2_0()), new TokenAlias(false, false, grammarAccess.getPipelineAccess().getENDTerminalRuleCall_0_5_0_2_2())), new GroupAlias(true, false, new TokenAlias(false, false, grammarAccess.getPipelineAccess().getOnKeyword_0_5_0_0()), new GroupAlias(true, true, new TokenAlias(false, false, grammarAccess.getPipelineAccess().getDefaultsKeyword_0_3_0()), new TokenAlias(false, false, grammarAccess.getPipelineAccess().getBEGINTerminalRuleCall_0_3_1()), new TokenAlias(false, false, grammarAccess.getPipelineAccess().getRunKeyword_0_3_2()), new TokenAlias(false, false, grammarAccess.getPipelineAccess().getBEGINTerminalRuleCall_0_3_3()), new TokenAlias(false, false, grammarAccess.getPipelineAccess().getENDTerminalRuleCall_0_3_5()), new TokenAlias(false, false, grammarAccess.getPipelineAccess().getENDTerminalRuleCall_0_3_6()))), new TokenAlias(false, false, grammarAccess.getPipelineAccess().getBEGINTerminalRuleCall_0_5_0_2_0()), new GroupAlias(true, true, new TokenAlias(false, false, grammarAccess.getPipelineAccess().getENDTerminalRuleCall_0_5_0_2_2()), new GroupAlias(true, false, new TokenAlias(false, false, grammarAccess.getPipelineAccess().getOnKeyword_0_5_0_0()), new GroupAlias(true, true, new TokenAlias(false, false, grammarAccess.getPipelineAccess().getDefaultsKeyword_0_3_0()), new TokenAlias(false, false, grammarAccess.getPipelineAccess().getBEGINTerminalRuleCall_0_3_1()), new TokenAlias(false, false, grammarAccess.getPipelineAccess().getRunKeyword_0_3_2()), new TokenAlias(false, false, grammarAccess.getPipelineAccess().getBEGINTerminalRuleCall_0_3_3()), new TokenAlias(false, false, grammarAccess.getPipelineAccess().getENDTerminalRuleCall_0_3_5()), new TokenAlias(false, false, grammarAccess.getPipelineAccess().getENDTerminalRuleCall_0_3_6()))), new TokenAlias(false, false, grammarAccess.getPipelineAccess().getBEGINTerminalRuleCall_0_5_0_2_0()))), new TokenAlias(false, false, grammarAccess.getPipelineAccess().getBEGINTerminalRuleCall_0_5_0_2_0()));
		match_Pipeline_OnKeyword_0_5_0_0_a = new TokenAlias(true, true, grammarAccess.getPipelineAccess().getOnKeyword_0_5_0_0());
		match_Pipeline___BEGINTerminalRuleCall_0_5_0_2_0_ENDTerminalRuleCall_0_5_0_2_2___OnKeyword_0_5_0_0___DefaultsKeyword_0_3_0_BEGINTerminalRuleCall_0_3_1_RunKeyword_0_3_2_BEGINTerminalRuleCall_0_3_3_ENDTerminalRuleCall_0_3_5_ENDTerminalRuleCall_0_3_6__a__p__a = new GroupAlias(true, true, new TokenAlias(false, false, grammarAccess.getPipelineAccess().getBEGINTerminalRuleCall_0_5_0_2_0()), new TokenAlias(false, false, grammarAccess.getPipelineAccess().getENDTerminalRuleCall_0_5_0_2_2()), new GroupAlias(true, false, new TokenAlias(false, false, grammarAccess.getPipelineAccess().getOnKeyword_0_5_0_0()), new GroupAlias(true, true, new TokenAlias(false, false, grammarAccess.getPipelineAccess().getDefaultsKeyword_0_3_0()), new TokenAlias(false, false, grammarAccess.getPipelineAccess().getBEGINTerminalRuleCall_0_3_1()), new TokenAlias(false, false, grammarAccess.getPipelineAccess().getRunKeyword_0_3_2()), new TokenAlias(false, false, grammarAccess.getPipelineAccess().getBEGINTerminalRuleCall_0_3_3()), new TokenAlias(false, false, grammarAccess.getPipelineAccess().getENDTerminalRuleCall_0_3_5()), new TokenAlias(false, false, grammarAccess.getPipelineAccess().getENDTerminalRuleCall_0_3_6()))));
		match_Pipeline___DefaultsKeyword_0_3_0_BEGINTerminalRuleCall_0_3_1_RunKeyword_0_3_2_BEGINTerminalRuleCall_0_3_3_ENDTerminalRuleCall_0_3_5_ENDTerminalRuleCall_0_3_6_OnKeyword_0_5_0_0_a_BEGINTerminalRuleCall_0_5_0_2_0_ENDTerminalRuleCall_0_5_0_2_2___OnKeyword_0_5_0_0_a_BEGINTerminalRuleCall_0_5_0_2_0_ENDTerminalRuleCall_0_5_0_2_2__a_OnKeyword_0_5_0_0_a___DefaultsKeyword_0_3_0_BEGINTerminalRuleCall_0_3_1_RunKeyword_0_3_2_BEGINTerminalRuleCall_0_3_3_ENDTerminalRuleCall_0_3_5_ENDTerminalRuleCall_0_3_6_OnKeyword_0_5_0_0_a__a__a = new GroupAlias(true, true, new TokenAlias(false, false, grammarAccess.getPipelineAccess().getDefaultsKeyword_0_3_0()), new TokenAlias(false, false, grammarAccess.getPipelineAccess().getBEGINTerminalRuleCall_0_3_1()), new TokenAlias(false, false, grammarAccess.getPipelineAccess().getRunKeyword_0_3_2()), new TokenAlias(false, false, grammarAccess.getPipelineAccess().getBEGINTerminalRuleCall_0_3_3()), new TokenAlias(false, false, grammarAccess.getPipelineAccess().getENDTerminalRuleCall_0_3_5()), new TokenAlias(false, false, grammarAccess.getPipelineAccess().getENDTerminalRuleCall_0_3_6()), new TokenAlias(true, true, grammarAccess.getPipelineAccess().getOnKeyword_0_5_0_0()), new TokenAlias(false, false, grammarAccess.getPipelineAccess().getBEGINTerminalRuleCall_0_5_0_2_0()), new TokenAlias(false, false, grammarAccess.getPipelineAccess().getENDTerminalRuleCall_0_5_0_2_2()), new GroupAlias(true, true, new TokenAlias(true, true, grammarAccess.getPipelineAccess().getOnKeyword_0_5_0_0()), new TokenAlias(false, false, grammarAccess.getPipelineAccess().getBEGINTerminalRuleCall_0_5_0_2_0()), new TokenAlias(false, false, grammarAccess.getPipelineAccess().getENDTerminalRuleCall_0_5_0_2_2())), new TokenAlias(true, true, grammarAccess.getPipelineAccess().getOnKeyword_0_5_0_0()), new GroupAlias(true, true, new TokenAlias(false, false, grammarAccess.getPipelineAccess().getDefaultsKeyword_0_3_0()), new TokenAlias(false, false, grammarAccess.getPipelineAccess().getBEGINTerminalRuleCall_0_3_1()), new TokenAlias(false, false, grammarAccess.getPipelineAccess().getRunKeyword_0_3_2()), new TokenAlias(false, false, grammarAccess.getPipelineAccess().getBEGINTerminalRuleCall_0_3_3()), new TokenAlias(false, false, grammarAccess.getPipelineAccess().getENDTerminalRuleCall_0_3_5()), new TokenAlias(false, false, grammarAccess.getPipelineAccess().getENDTerminalRuleCall_0_3_6()), new TokenAlias(true, true, grammarAccess.getPipelineAccess().getOnKeyword_0_5_0_0())));
		match_Pipeline___DefaultsKeyword_0_3_0_BEGINTerminalRuleCall_0_3_1_RunKeyword_0_3_2_BEGINTerminalRuleCall_0_3_3_ENDTerminalRuleCall_0_3_5_ENDTerminalRuleCall_0_3_6_OnKeyword_0_5_0_0_a__a = new GroupAlias(true, true, new TokenAlias(false, false, grammarAccess.getPipelineAccess().getDefaultsKeyword_0_3_0()), new TokenAlias(false, false, grammarAccess.getPipelineAccess().getBEGINTerminalRuleCall_0_3_1()), new TokenAlias(false, false, grammarAccess.getPipelineAccess().getRunKeyword_0_3_2()), new TokenAlias(false, false, grammarAccess.getPipelineAccess().getBEGINTerminalRuleCall_0_3_3()), new TokenAlias(false, false, grammarAccess.getPipelineAccess().getENDTerminalRuleCall_0_3_5()), new TokenAlias(false, false, grammarAccess.getPipelineAccess().getENDTerminalRuleCall_0_3_6()), new TokenAlias(true, true, grammarAccess.getPipelineAccess().getOnKeyword_0_5_0_0()));
		match_Pipeline___DefaultsKeyword_0_3_0_BEGINTerminalRuleCall_0_3_1_RunKeyword_0_3_2_BEGINTerminalRuleCall_0_3_3_ENDTerminalRuleCall_0_3_5_ENDTerminalRuleCall_0_3_6___OnKeyword_0_5_0_0___BEGINTerminalRuleCall_0_5_0_2_0_ENDTerminalRuleCall_0_5_0_2_2__q__a__a = new GroupAlias(true, true, new TokenAlias(false, false, grammarAccess.getPipelineAccess().getDefaultsKeyword_0_3_0()), new TokenAlias(false, false, grammarAccess.getPipelineAccess().getBEGINTerminalRuleCall_0_3_1()), new TokenAlias(false, false, grammarAccess.getPipelineAccess().getRunKeyword_0_3_2()), new TokenAlias(false, false, grammarAccess.getPipelineAccess().getBEGINTerminalRuleCall_0_3_3()), new TokenAlias(false, false, grammarAccess.getPipelineAccess().getENDTerminalRuleCall_0_3_5()), new TokenAlias(false, false, grammarAccess.getPipelineAccess().getENDTerminalRuleCall_0_3_6()), new GroupAlias(true, true, new TokenAlias(false, false, grammarAccess.getPipelineAccess().getOnKeyword_0_5_0_0()), new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getPipelineAccess().getBEGINTerminalRuleCall_0_5_0_2_0()), new TokenAlias(false, false, grammarAccess.getPipelineAccess().getENDTerminalRuleCall_0_5_0_2_2()))));
		match_Pipeline___ENDTerminalRuleCall_0_3_5_ENDTerminalRuleCall_0_3_6___OnKeyword_0_5_0_0___BEGINTerminalRuleCall_0_5_0_2_0_ENDTerminalRuleCall_0_5_0_2_2__q__a_DefaultsKeyword_0_3_0_BEGINTerminalRuleCall_0_3_1_RunKeyword_0_3_2_BEGINTerminalRuleCall_0_3_3__a = new GroupAlias(true, true, new TokenAlias(false, false, grammarAccess.getPipelineAccess().getENDTerminalRuleCall_0_3_5()), new TokenAlias(false, false, grammarAccess.getPipelineAccess().getENDTerminalRuleCall_0_3_6()), new GroupAlias(true, true, new TokenAlias(false, false, grammarAccess.getPipelineAccess().getOnKeyword_0_5_0_0()), new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getPipelineAccess().getBEGINTerminalRuleCall_0_5_0_2_0()), new TokenAlias(false, false, grammarAccess.getPipelineAccess().getENDTerminalRuleCall_0_5_0_2_2()))), new TokenAlias(false, false, grammarAccess.getPipelineAccess().getDefaultsKeyword_0_3_0()), new TokenAlias(false, false, grammarAccess.getPipelineAccess().getBEGINTerminalRuleCall_0_3_1()), new TokenAlias(false, false, grammarAccess.getPipelineAccess().getRunKeyword_0_3_2()), new TokenAlias(false, false, grammarAccess.getPipelineAccess().getBEGINTerminalRuleCall_0_3_3()));
		match_Pipeline___ENDTerminalRuleCall_0_5_0_2_2___OnKeyword_0_5_0_0___DefaultsKeyword_0_3_0_BEGINTerminalRuleCall_0_3_1_RunKeyword_0_3_2_BEGINTerminalRuleCall_0_3_3_ENDTerminalRuleCall_0_3_5_ENDTerminalRuleCall_0_3_6__a__p_BEGINTerminalRuleCall_0_5_0_2_0__a = new GroupAlias(true, true, new TokenAlias(false, false, grammarAccess.getPipelineAccess().getENDTerminalRuleCall_0_5_0_2_2()), new GroupAlias(true, false, new TokenAlias(false, false, grammarAccess.getPipelineAccess().getOnKeyword_0_5_0_0()), new GroupAlias(true, true, new TokenAlias(false, false, grammarAccess.getPipelineAccess().getDefaultsKeyword_0_3_0()), new TokenAlias(false, false, grammarAccess.getPipelineAccess().getBEGINTerminalRuleCall_0_3_1()), new TokenAlias(false, false, grammarAccess.getPipelineAccess().getRunKeyword_0_3_2()), new TokenAlias(false, false, grammarAccess.getPipelineAccess().getBEGINTerminalRuleCall_0_3_3()), new TokenAlias(false, false, grammarAccess.getPipelineAccess().getENDTerminalRuleCall_0_3_5()), new TokenAlias(false, false, grammarAccess.getPipelineAccess().getENDTerminalRuleCall_0_3_6()))), new TokenAlias(false, false, grammarAccess.getPipelineAccess().getBEGINTerminalRuleCall_0_5_0_2_0()));
	}
	
	private void init1() {
		match_Pipeline___OnKeyword_0_5_0_0___BEGINTerminalRuleCall_0_5_0_2_0_ENDTerminalRuleCall_0_5_0_2_2__q___DefaultsKeyword_0_3_0_BEGINTerminalRuleCall_0_3_1_RunKeyword_0_3_2_BEGINTerminalRuleCall_0_3_3_ENDTerminalRuleCall_0_3_5_ENDTerminalRuleCall_0_3_6__a__p = new GroupAlias(true, false, new TokenAlias(false, false, grammarAccess.getPipelineAccess().getOnKeyword_0_5_0_0()), new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getPipelineAccess().getBEGINTerminalRuleCall_0_5_0_2_0()), new TokenAlias(false, false, grammarAccess.getPipelineAccess().getENDTerminalRuleCall_0_5_0_2_2())), new GroupAlias(true, true, new TokenAlias(false, false, grammarAccess.getPipelineAccess().getDefaultsKeyword_0_3_0()), new TokenAlias(false, false, grammarAccess.getPipelineAccess().getBEGINTerminalRuleCall_0_3_1()), new TokenAlias(false, false, grammarAccess.getPipelineAccess().getRunKeyword_0_3_2()), new TokenAlias(false, false, grammarAccess.getPipelineAccess().getBEGINTerminalRuleCall_0_3_3()), new TokenAlias(false, false, grammarAccess.getPipelineAccess().getENDTerminalRuleCall_0_3_5()), new TokenAlias(false, false, grammarAccess.getPipelineAccess().getENDTerminalRuleCall_0_3_6())));
		match_Pipeline___OnKeyword_0_5_0_0___BEGINTerminalRuleCall_0_5_0_2_0_ENDTerminalRuleCall_0_5_0_2_2__q__a = new GroupAlias(true, true, new TokenAlias(false, false, grammarAccess.getPipelineAccess().getOnKeyword_0_5_0_0()), new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getPipelineAccess().getBEGINTerminalRuleCall_0_5_0_2_0()), new TokenAlias(false, false, grammarAccess.getPipelineAccess().getENDTerminalRuleCall_0_5_0_2_2())));
		match_Pipeline___OnKeyword_0_5_0_0___BEGINTerminalRuleCall_0_5_0_2_0_ENDTerminalRuleCall_0_5_0_2_2__q__p_or_______OnKeyword_0_5_0_0___BEGINTerminalRuleCall_0_5_0_2_0_ENDTerminalRuleCall_0_5_0_2_2__q__p___BEGINTerminalRuleCall_0_5_0_2_0_ENDTerminalRuleCall_0_5_0_2_2__q__q___DefaultsKeyword_0_3_0_BEGINTerminalRuleCall_0_3_1_RunKeyword_0_3_2_BEGINTerminalRuleCall_0_3_3_ENDTerminalRuleCall_0_3_5_ENDTerminalRuleCall_0_3_6__p___OnKeyword_0_5_0_0___BEGINTerminalRuleCall_0_5_0_2_0_ENDTerminalRuleCall_0_5_0_2_2__q__p_____BEGINTerminalRuleCall_0_5_0_2_0_ENDTerminalRuleCall_0_5_0_2_2__q___DefaultsKeyword_0_3_0_BEGINTerminalRuleCall_0_3_1_RunKeyword_0_3_2_BEGINTerminalRuleCall_0_3_3_ENDTerminalRuleCall_0_3_5_ENDTerminalRuleCall_0_3_6__p___OnKeyword_0_5_0_0___BEGINTerminalRuleCall_0_5_0_2_0_ENDTerminalRuleCall_0_5_0_2_2__q__p__a__ = new AlternativeAlias(false, false, new GroupAlias(false, false, new GroupAlias(false, true, new GroupAlias(true, false, new TokenAlias(false, false, grammarAccess.getPipelineAccess().getOnKeyword_0_5_0_0()), new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getPipelineAccess().getBEGINTerminalRuleCall_0_5_0_2_0()), new TokenAlias(false, false, grammarAccess.getPipelineAccess().getENDTerminalRuleCall_0_5_0_2_2()))), new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getPipelineAccess().getBEGINTerminalRuleCall_0_5_0_2_0()), new TokenAlias(false, false, grammarAccess.getPipelineAccess().getENDTerminalRuleCall_0_5_0_2_2()))), new GroupAlias(true, false, new TokenAlias(false, false, grammarAccess.getPipelineAccess().getDefaultsKeyword_0_3_0()), new TokenAlias(false, false, grammarAccess.getPipelineAccess().getBEGINTerminalRuleCall_0_3_1()), new TokenAlias(false, false, grammarAccess.getPipelineAccess().getRunKeyword_0_3_2()), new TokenAlias(false, false, grammarAccess.getPipelineAccess().getBEGINTerminalRuleCall_0_3_3()), new TokenAlias(false, false, grammarAccess.getPipelineAccess().getENDTerminalRuleCall_0_3_5()), new TokenAlias(false, false, grammarAccess.getPipelineAccess().getENDTerminalRuleCall_0_3_6())), new GroupAlias(true, false, new TokenAlias(false, false, grammarAccess.getPipelineAccess().getOnKeyword_0_5_0_0()), new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getPipelineAccess().getBEGINTerminalRuleCall_0_5_0_2_0()), new TokenAlias(false, false, grammarAccess.getPipelineAccess().getENDTerminalRuleCall_0_5_0_2_2()))), new GroupAlias(true, true, new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getPipelineAccess().getBEGINTerminalRuleCall_0_5_0_2_0()), new TokenAlias(false, false, grammarAccess.getPipelineAccess().getENDTerminalRuleCall_0_5_0_2_2())), new GroupAlias(true, false, new TokenAlias(false, false, grammarAccess.getPipelineAccess().getDefaultsKeyword_0_3_0()), new TokenAlias(false, false, grammarAccess.getPipelineAccess().getBEGINTerminalRuleCall_0_3_1()), new TokenAlias(false, false, grammarAccess.getPipelineAccess().getRunKeyword_0_3_2()), new TokenAlias(false, false, grammarAccess.getPipelineAccess().getBEGINTerminalRuleCall_0_3_3()), new TokenAlias(false, false, grammarAccess.getPipelineAccess().getENDTerminalRuleCall_0_3_5()), new TokenAlias(false, false, grammarAccess.getPipelineAccess().getENDTerminalRuleCall_0_3_6())), new GroupAlias(true, false, new TokenAlias(false, false, grammarAccess.getPipelineAccess().getOnKeyword_0_5_0_0()), new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getPipelineAccess().getBEGINTerminalRuleCall_0_5_0_2_0()), new TokenAlias(false, false, grammarAccess.getPipelineAccess().getENDTerminalRuleCall_0_5_0_2_2()))))), new GroupAlias(true, false, new TokenAlias(false, false, grammarAccess.getPipelineAccess().getOnKeyword_0_5_0_0()), new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getPipelineAccess().getBEGINTerminalRuleCall_0_5_0_2_0()), new TokenAlias(false, false, grammarAccess.getPipelineAccess().getENDTerminalRuleCall_0_5_0_2_2()))));
		match_Pipeline___OnKeyword_0_5_0_0___DefaultsKeyword_0_3_0_BEGINTerminalRuleCall_0_3_1_RunKeyword_0_3_2_BEGINTerminalRuleCall_0_3_3_ENDTerminalRuleCall_0_3_5_ENDTerminalRuleCall_0_3_6__a___BEGINTerminalRuleCall_0_5_0_2_0_ENDTerminalRuleCall_0_5_0_2_2__q__a = new GroupAlias(true, true, new TokenAlias(false, false, grammarAccess.getPipelineAccess().getOnKeyword_0_5_0_0()), new GroupAlias(true, true, new TokenAlias(false, false, grammarAccess.getPipelineAccess().getDefaultsKeyword_0_3_0()), new TokenAlias(false, false, grammarAccess.getPipelineAccess().getBEGINTerminalRuleCall_0_3_1()), new TokenAlias(false, false, grammarAccess.getPipelineAccess().getRunKeyword_0_3_2()), new TokenAlias(false, false, grammarAccess.getPipelineAccess().getBEGINTerminalRuleCall_0_3_3()), new TokenAlias(false, false, grammarAccess.getPipelineAccess().getENDTerminalRuleCall_0_3_5()), new TokenAlias(false, false, grammarAccess.getPipelineAccess().getENDTerminalRuleCall_0_3_6())), new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getPipelineAccess().getBEGINTerminalRuleCall_0_5_0_2_0()), new TokenAlias(false, false, grammarAccess.getPipelineAccess().getENDTerminalRuleCall_0_5_0_2_2())));
		match_Pipeline___OnKeyword_0_5_0_0___DefaultsKeyword_0_3_0_BEGINTerminalRuleCall_0_3_1_RunKeyword_0_3_2_BEGINTerminalRuleCall_0_3_3_ENDTerminalRuleCall_0_3_5_ENDTerminalRuleCall_0_3_6__a__p = new GroupAlias(true, false, new TokenAlias(false, false, grammarAccess.getPipelineAccess().getOnKeyword_0_5_0_0()), new GroupAlias(true, true, new TokenAlias(false, false, grammarAccess.getPipelineAccess().getDefaultsKeyword_0_3_0()), new TokenAlias(false, false, grammarAccess.getPipelineAccess().getBEGINTerminalRuleCall_0_3_1()), new TokenAlias(false, false, grammarAccess.getPipelineAccess().getRunKeyword_0_3_2()), new TokenAlias(false, false, grammarAccess.getPipelineAccess().getBEGINTerminalRuleCall_0_3_3()), new TokenAlias(false, false, grammarAccess.getPipelineAccess().getENDTerminalRuleCall_0_3_5()), new TokenAlias(false, false, grammarAccess.getPipelineAccess().getENDTerminalRuleCall_0_3_6())));
		match_Pipeline___OnKeyword_0_5_0_0_a_BEGINTerminalRuleCall_0_5_0_2_0_ENDTerminalRuleCall_0_5_0_2_2__a = new GroupAlias(true, true, new TokenAlias(true, true, grammarAccess.getPipelineAccess().getOnKeyword_0_5_0_0()), new TokenAlias(false, false, grammarAccess.getPipelineAccess().getBEGINTerminalRuleCall_0_5_0_2_0()), new TokenAlias(false, false, grammarAccess.getPipelineAccess().getENDTerminalRuleCall_0_5_0_2_2()));
		match_Pipeline_____OnKeyword_0_5_0_0___BEGINTerminalRuleCall_0_5_0_2_0_ENDTerminalRuleCall_0_5_0_2_2__q__q___DefaultsKeyword_0_3_0_BEGINTerminalRuleCall_0_3_1_RunKeyword_0_3_2_BEGINTerminalRuleCall_0_3_3_ENDTerminalRuleCall_0_3_5_ENDTerminalRuleCall_0_3_6__q__p = new GroupAlias(true, false, new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getPipelineAccess().getOnKeyword_0_5_0_0()), new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getPipelineAccess().getBEGINTerminalRuleCall_0_5_0_2_0()), new TokenAlias(false, false, grammarAccess.getPipelineAccess().getENDTerminalRuleCall_0_5_0_2_2()))), new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getPipelineAccess().getDefaultsKeyword_0_3_0()), new TokenAlias(false, false, grammarAccess.getPipelineAccess().getBEGINTerminalRuleCall_0_3_1()), new TokenAlias(false, false, grammarAccess.getPipelineAccess().getRunKeyword_0_3_2()), new TokenAlias(false, false, grammarAccess.getPipelineAccess().getBEGINTerminalRuleCall_0_3_3()), new TokenAlias(false, false, grammarAccess.getPipelineAccess().getENDTerminalRuleCall_0_3_5()), new TokenAlias(false, false, grammarAccess.getPipelineAccess().getENDTerminalRuleCall_0_3_6())));
		match_Script_GreaterThanSignHyphenMinusKeyword_0_1_1_0_1_or_VerticalLineKeyword_0_1_1_0_0 = new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getScriptAccess().getGreaterThanSignHyphenMinusKeyword_0_1_1_0_1()), new TokenAlias(false, false, grammarAccess.getScriptAccess().getVerticalLineKeyword_0_1_1_0_0()));
		match_Script___BEGINTerminalRuleCall_1_0_ENDTerminalRuleCall_1_2__q = new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getScriptAccess().getBEGINTerminalRuleCall_1_0()), new TokenAlias(false, false, grammarAccess.getScriptAccess().getENDTerminalRuleCall_1_2()));
		match_Stage_DependsOnStageIDTerminalRuleCall_1_1_1_0_1 = new TokenAlias(false, false, grammarAccess.getStageAccess().getDependsOnStageIDTerminalRuleCall_1_1_1_0_1());
		match_Stage___BEGINTerminalRuleCall_1_0_0_or_DependsOnKeyword_1_1_0__a = new AlternativeAlias(true, true, new TokenAlias(false, false, grammarAccess.getStageAccess().getBEGINTerminalRuleCall_1_0_0()), new TokenAlias(false, false, grammarAccess.getStageAccess().getDependsOnKeyword_1_1_0()));
		match_Stage___BEGINTerminalRuleCall_1_0_0_q_DependsOnKeyword_1_1_0_q___JobsKeyword_1_2_0_0_ENDTerminalRuleCall_1_2_1__q__p = new GroupAlias(true, false, new TokenAlias(false, true, grammarAccess.getStageAccess().getBEGINTerminalRuleCall_1_0_0()), new TokenAlias(false, true, grammarAccess.getStageAccess().getDependsOnKeyword_1_1_0()), new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getStageAccess().getJobsKeyword_1_2_0_0()), new TokenAlias(false, false, grammarAccess.getStageAccess().getENDTerminalRuleCall_1_2_1())));
		match_Stage___DependsOnKeyword_1_1_0_q_BEGINTerminalRuleCall_1_0_0_q___JobsKeyword_1_2_0_0_ENDTerminalRuleCall_1_2_1__q__p = new GroupAlias(true, false, new TokenAlias(false, true, grammarAccess.getStageAccess().getDependsOnKeyword_1_1_0()), new TokenAlias(false, true, grammarAccess.getStageAccess().getBEGINTerminalRuleCall_1_0_0()), new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getStageAccess().getJobsKeyword_1_2_0_0()), new TokenAlias(false, false, grammarAccess.getStageAccess().getENDTerminalRuleCall_1_2_1())));
		match_Stage___ENDTerminalRuleCall_1_2_1___BEGINTerminalRuleCall_1_0_0_or_DependsOnKeyword_1_1_0__a_JobsKeyword_1_2_0_0__a = new GroupAlias(true, true, new TokenAlias(false, false, grammarAccess.getStageAccess().getENDTerminalRuleCall_1_2_1()), new AlternativeAlias(true, true, new TokenAlias(false, false, grammarAccess.getStageAccess().getBEGINTerminalRuleCall_1_0_0()), new TokenAlias(false, false, grammarAccess.getStageAccess().getDependsOnKeyword_1_1_0())), new TokenAlias(false, false, grammarAccess.getStageAccess().getJobsKeyword_1_2_0_0()));
		match_Stage___ENDTerminalRuleCall_1_2_1___BEGINTerminalRuleCall_1_0_0_q_DependsOnKeyword_1_1_0_q__p_JobsKeyword_1_2_0_0__a = new GroupAlias(true, true, new TokenAlias(false, false, grammarAccess.getStageAccess().getENDTerminalRuleCall_1_2_1()), new GroupAlias(true, false, new TokenAlias(false, true, grammarAccess.getStageAccess().getBEGINTerminalRuleCall_1_0_0()), new TokenAlias(false, true, grammarAccess.getStageAccess().getDependsOnKeyword_1_1_0())), new TokenAlias(false, false, grammarAccess.getStageAccess().getJobsKeyword_1_2_0_0()));
		match_Stage___ENDTerminalRuleCall_1_2_1___DependsOnKeyword_1_1_0_q_BEGINTerminalRuleCall_1_0_0_q__p_JobsKeyword_1_2_0_0__a = new GroupAlias(true, true, new TokenAlias(false, false, grammarAccess.getStageAccess().getENDTerminalRuleCall_1_2_1()), new GroupAlias(true, false, new TokenAlias(false, true, grammarAccess.getStageAccess().getDependsOnKeyword_1_1_0()), new TokenAlias(false, true, grammarAccess.getStageAccess().getBEGINTerminalRuleCall_1_0_0())), new TokenAlias(false, false, grammarAccess.getStageAccess().getJobsKeyword_1_2_0_0()));
		match_Stage___JobsKeyword_1_2_0_0_ENDTerminalRuleCall_1_2_1___BEGINTerminalRuleCall_1_0_0_or_DependsOnKeyword_1_1_0__a__a = new GroupAlias(true, true, new TokenAlias(false, false, grammarAccess.getStageAccess().getJobsKeyword_1_2_0_0()), new TokenAlias(false, false, grammarAccess.getStageAccess().getENDTerminalRuleCall_1_2_1()), new AlternativeAlias(true, true, new TokenAlias(false, false, grammarAccess.getStageAccess().getBEGINTerminalRuleCall_1_0_0()), new TokenAlias(false, false, grammarAccess.getStageAccess().getDependsOnKeyword_1_1_0())));
		match_Stage_____BEGINTerminalRuleCall_1_0_0_or_DependsOnKeyword_1_1_0__q___JobsKeyword_1_2_0_0_ENDTerminalRuleCall_1_2_1__q__p = new GroupAlias(true, false, new AlternativeAlias(false, true, new TokenAlias(false, false, grammarAccess.getStageAccess().getBEGINTerminalRuleCall_1_0_0()), new TokenAlias(false, false, grammarAccess.getStageAccess().getDependsOnKeyword_1_1_0())), new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getStageAccess().getJobsKeyword_1_2_0_0()), new TokenAlias(false, false, grammarAccess.getStageAccess().getENDTerminalRuleCall_1_2_1())));
	}
	
	@Override
	protected String getUnassignedRuleCallToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (ruleCall.getRule() == grammarAccess.getBEGINRule())
			return getBEGINToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getENDRule())
			return getENDToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getIDRule())
			return getIDToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getINTRule())
			return getINTToken(semanticObject, ruleCall, node);
		return "";
	}
	
	/**
	 * Synthetic terminal rule. The concrete syntax is to be specified by clients.
	 * Defaults to the empty string.
	 */
	protected String getBEGINToken(EObject semanticObject, RuleCall ruleCall, INode node) { return ""; }
	
	/**
	 * Synthetic terminal rule. The concrete syntax is to be specified by clients.
	 * Defaults to the empty string.
	 */
	protected String getENDToken(EObject semanticObject, RuleCall ruleCall, INode node) { return ""; }
	
	/**
	 * @Override 
	 * terminal ID:
	 *         ('a'..'z' | 'A'..'Z' | '_' | '/' | '@' | '-' | '.' | '\\' | '&') ('a'..'z' | 'A'..'Z' | '0'..'9' | '_' | '/' | '@' | '&' |'-' | '.' | '\\' |'$' | '(' | ')')*;
	 */
	protected String getIDToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "";
	}
	
	/**
	 * terminal INT returns ecore::EInt: ('0'..'9')+;
	 */
	protected String getINTToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "";
	}
	
	@Override
	protected void emitUnassignedTokens(EObject semanticObject, ISynTransition transition, INode fromNode, INode toNode) {
		if (transition.getAmbiguousSyntaxes().isEmpty()) return;
		List<INode> transitionNodes = collectNodes(fromNode, toNode);
		for (AbstractElementAlias syntax : transition.getAmbiguousSyntaxes()) {
			List<INode> syntaxNodes = getNodesFor(transitionNodes, syntax);
			if (match_Action___BEGINTerminalRuleCall_2_0_ENDTerminalRuleCall_2_2__q.equals(syntax))
				emit_Action___BEGINTerminalRuleCall_2_0_ENDTerminalRuleCall_2_2__q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Configuration___BEGINTerminalRuleCall_0_2_2_0_0_or_ENDTerminalRuleCall_0_2_2_1_1__a.equals(syntax))
				emit_Configuration___BEGINTerminalRuleCall_0_2_2_0_0_or_ENDTerminalRuleCall_0_2_2_1_1__a(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Configuration___BEGINTerminalRuleCall_0_2_2_0_0_or_ENDTerminalRuleCall_0_2_2_1_1__p.equals(syntax))
				emit_Configuration___BEGINTerminalRuleCall_0_2_2_0_0_or_ENDTerminalRuleCall_0_2_2_1_1__p(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Configuration___ENDTerminalRuleCall_0_2_2_1_1_BEGINTerminalRuleCall_0_2_2_0_0_a__p.equals(syntax))
				emit_Configuration___ENDTerminalRuleCall_0_2_2_1_1_BEGINTerminalRuleCall_0_2_2_0_0_a__p(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Configuration___ENDTerminalRuleCall_0_2_2_1_1_a_BEGINTerminalRuleCall_0_2_2_0_0__a.equals(syntax))
				emit_Configuration___ENDTerminalRuleCall_0_2_2_1_1_a_BEGINTerminalRuleCall_0_2_2_0_0__a(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Configuration___ENDTerminalRuleCall_0_2_2_1_1_a_BEGINTerminalRuleCall_0_2_2_0_0__p.equals(syntax))
				emit_Configuration___ENDTerminalRuleCall_0_2_2_1_1_a_BEGINTerminalRuleCall_0_2_2_0_0__p(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Configuration___ENDTerminalRuleCall_0_2_2_1_1_p_BEGINTerminalRuleCall_0_2_2_0_0_p__p.equals(syntax))
				emit_Configuration___ENDTerminalRuleCall_0_2_2_1_1_p_BEGINTerminalRuleCall_0_2_2_0_0_p__p(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Configuration___ParametersKeyword_0_0_0_or___PoolKeyword_0_2_0___BEGINTerminalRuleCall_0_2_2_0_0_or_ENDTerminalRuleCall_0_2_2_1_1__a___or_____DockerKeyword_1_1_0_IDTerminalRuleCall_1_1_1___or___ENDTerminalRuleCall_1_2_1___SizeKeyword_1_2_0_0_IDTerminalRuleCall_1_2_0_1__q___or___OptionsKeyword_1_0_0_BEGINTerminalRuleCall_1_0_1___MaxTimeKeyword_1_0_2_0_INTTerminalRuleCall_1_0_2_1__q____p__q.equals(syntax))
				emit_Configuration___ParametersKeyword_0_0_0_or___PoolKeyword_0_2_0___BEGINTerminalRuleCall_0_2_2_0_0_or_ENDTerminalRuleCall_0_2_2_1_1__a___or_____DockerKeyword_1_1_0_IDTerminalRuleCall_1_1_1___or___ENDTerminalRuleCall_1_2_1___SizeKeyword_1_2_0_0_IDTerminalRuleCall_1_2_0_1__q___or___OptionsKeyword_1_0_0_BEGINTerminalRuleCall_1_0_1___MaxTimeKeyword_1_0_2_0_INTTerminalRuleCall_1_0_2_1__q____p__q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Event_ActivitiesActivityParserRuleCall_1_0_1_1_0_0.equals(syntax))
				emit_Event_ActivitiesActivityParserRuleCall_1_0_1_1_0_0(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Event_ActivitiesActivityParserRuleCall_1_5_2_0.equals(syntax))
				emit_Event_ActivitiesActivityParserRuleCall_1_5_2_0(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Event_AutoCancelIDTerminalRuleCall_1_3_1_0.equals(syntax))
				emit_Event_AutoCancelIDTerminalRuleCall_1_3_1_0(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Event_BEGINTerminalRuleCall_1_0_1_2_0_or_____BEGINTerminalRuleCall_1_0_1_2_0_ENDTerminalRuleCall_1_0_1_2_2__q_____ENDTerminalRuleCall_1_6_a_BEGINTerminalRuleCall_1_0_0__p_TypesKeyword_1_0_1_0__p_BEGINTerminalRuleCall_1_0_1_2_0___ENDTerminalRuleCall_1_0_1_2_2_____ENDTerminalRuleCall_1_6_a_BEGINTerminalRuleCall_1_0_0__p_TypesKeyword_1_0_1_0__p_BEGINTerminalRuleCall_1_0_1_2_0__a__.equals(syntax))
				emit_Event_BEGINTerminalRuleCall_1_0_1_2_0_or_____BEGINTerminalRuleCall_1_0_1_2_0_ENDTerminalRuleCall_1_0_1_2_2__q_____ENDTerminalRuleCall_1_6_a_BEGINTerminalRuleCall_1_0_0__p_TypesKeyword_1_0_1_0__p_BEGINTerminalRuleCall_1_0_1_2_0___ENDTerminalRuleCall_1_0_1_2_2_____ENDTerminalRuleCall_1_6_a_BEGINTerminalRuleCall_1_0_0__p_TypesKeyword_1_0_1_0__p_BEGINTerminalRuleCall_1_0_1_2_0__a__(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Event_BranchesBranchParserRuleCall_0_0_0.equals(syntax))
				emit_Event_BranchesBranchParserRuleCall_0_0_0(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Event_BranchesBranchParserRuleCall_1_1_2_0_1_0.equals(syntax))
				emit_Event_BranchesBranchParserRuleCall_1_1_2_0_1_0(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Event_DraftsIDTerminalRuleCall_1_4_1_0.equals(syntax))
				emit_Event_DraftsIDTerminalRuleCall_1_4_1_0(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Event_HyphenMinusKeyword_1_0_1_2_1_0_q.equals(syntax))
				emit_Event_HyphenMinusKeyword_1_0_1_2_1_0_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Event_KeywordPipelineKeywordEnumRuleCall_0_1_0.equals(syntax))
				emit_Event_KeywordPipelineKeywordEnumRuleCall_0_1_0(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Event___BEGINTerminalRuleCall_1_0_1_2_0_ENDTerminalRuleCall_1_0_1_2_2_____ENDTerminalRuleCall_1_6_a_BEGINTerminalRuleCall_1_0_0__p_TypesKeyword_1_0_1_0__p__a.equals(syntax))
				emit_Event___BEGINTerminalRuleCall_1_0_1_2_0_ENDTerminalRuleCall_1_0_1_2_2_____ENDTerminalRuleCall_1_6_a_BEGINTerminalRuleCall_1_0_0__p_TypesKeyword_1_0_1_0__p__a(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Event___BEGINTerminalRuleCall_1_1_2_1_0___ExcludesKeyword_1_1_2_1_1_0_1_or_IncludesKeyword_1_1_2_1_1_0_0__p_ENDTerminalRuleCall_1_1_2_1_2__q.equals(syntax))
				emit_Event___BEGINTerminalRuleCall_1_1_2_1_0___ExcludesKeyword_1_1_2_1_1_0_1_or_IncludesKeyword_1_1_2_1_1_0_0__p_ENDTerminalRuleCall_1_1_2_1_2__q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Event___ENDTerminalRuleCall_1_0_1_2_2_____ENDTerminalRuleCall_1_6_a_BEGINTerminalRuleCall_1_0_0__p_TypesKeyword_1_0_1_0__p_BEGINTerminalRuleCall_1_0_1_2_0__a.equals(syntax))
				emit_Event___ENDTerminalRuleCall_1_0_1_2_2_____ENDTerminalRuleCall_1_6_a_BEGINTerminalRuleCall_1_0_0__p_TypesKeyword_1_0_1_0__p_BEGINTerminalRuleCall_1_0_1_2_0__a(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Event___ENDTerminalRuleCall_1_6_a_BEGINTerminalRuleCall_1_0_0__p.equals(syntax))
				emit_Event___ENDTerminalRuleCall_1_6_a_BEGINTerminalRuleCall_1_0_0__p(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Event___ExcludesKeyword_1_1_2_1_1_0_1_or_IncludesKeyword_1_1_2_1_1_0_0__a.equals(syntax))
				emit_Event___ExcludesKeyword_1_1_2_1_1_0_1_or_IncludesKeyword_1_1_2_1_1_0_0__a(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Event___ExcludesKeyword_1_1_2_1_1_0_1_or_IncludesKeyword_1_1_2_1_1_0_0__p.equals(syntax))
				emit_Event___ExcludesKeyword_1_1_2_1_1_0_1_or_IncludesKeyword_1_1_2_1_1_0_0__p(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Event_____BEGINTerminalRuleCall_1_0_1_2_0_ENDTerminalRuleCall_1_0_1_2_2__q___ENDTerminalRuleCall_1_6_a_BEGINTerminalRuleCall_1_0_0__p_TypesKeyword_1_0_1_0__a.equals(syntax))
				emit_Event_____BEGINTerminalRuleCall_1_0_1_2_0_ENDTerminalRuleCall_1_0_1_2_2__q___ENDTerminalRuleCall_1_6_a_BEGINTerminalRuleCall_1_0_0__p_TypesKeyword_1_0_1_0__a(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Event_____BEGINTerminalRuleCall_1_0_1_2_0_ENDTerminalRuleCall_1_0_1_2_2__q___ENDTerminalRuleCall_1_6_a_BEGINTerminalRuleCall_1_0_0__p_TypesKeyword_1_0_1_0__p.equals(syntax))
				emit_Event_____BEGINTerminalRuleCall_1_0_1_2_0_ENDTerminalRuleCall_1_0_1_2_2__q___ENDTerminalRuleCall_1_6_a_BEGINTerminalRuleCall_1_0_0__p_TypesKeyword_1_0_1_0__p(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Event_____ENDTerminalRuleCall_1_6_a_BEGINTerminalRuleCall_1_0_0__p_TypesKeyword_1_0_1_0__p.equals(syntax))
				emit_Event_____ENDTerminalRuleCall_1_6_a_BEGINTerminalRuleCall_1_0_0__p_TypesKeyword_1_0_1_0__p(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_JobParameter___BEGINTerminalRuleCall_2_0_ENDTerminalRuleCall_2_2__q.equals(syntax))
				emit_JobParameter___BEGINTerminalRuleCall_2_0_ENDTerminalRuleCall_2_2__q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Job_BEGINTerminalRuleCall_1_0_0_a.equals(syntax))
				emit_Job_BEGINTerminalRuleCall_1_0_0_a(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Job_BEGINTerminalRuleCall_1_0_0_p.equals(syntax))
				emit_Job_BEGINTerminalRuleCall_1_0_0_p(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Job_ColonKeyword_0_2_q.equals(syntax))
				emit_Job_ColonKeyword_0_2_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Job___BEGINTerminalRuleCall_1_0_0___StepsKeyword_1_5_0_0_q_ENDTerminalRuleCall_1_5_1__a__p.equals(syntax))
				emit_Job___BEGINTerminalRuleCall_1_0_0___StepsKeyword_1_5_0_0_q_ENDTerminalRuleCall_1_5_1__a__p(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Job___BEGINTerminalRuleCall_1_0_0_q_ENDTerminalRuleCall_1_5_1_q__p.equals(syntax))
				emit_Job___BEGINTerminalRuleCall_1_0_0_q_ENDTerminalRuleCall_1_5_1_q__p(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Job___BEGINTerminalRuleCall_1_0_0_q___StepsKeyword_1_5_0_0_q_ENDTerminalRuleCall_1_5_1__q__p.equals(syntax))
				emit_Job___BEGINTerminalRuleCall_1_0_0_q___StepsKeyword_1_5_0_0_q_ENDTerminalRuleCall_1_5_1__q__p(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Job___BEGINTerminalRuleCall_1_3_1_1_0_0_or_ENDTerminalRuleCall_1_3_1_1_1_1__a.equals(syntax))
				emit_Job___BEGINTerminalRuleCall_1_3_1_1_0_0_or_ENDTerminalRuleCall_1_3_1_1_1_1__a(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Job___BEGINTerminalRuleCall_1_3_1_1_0_0_or_ENDTerminalRuleCall_1_3_1_1_1_1__p.equals(syntax))
				emit_Job___BEGINTerminalRuleCall_1_3_1_1_0_0_or_ENDTerminalRuleCall_1_3_1_1_1_1__p(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Job___ENDTerminalRuleCall_1_3_1_1_1_1_BEGINTerminalRuleCall_1_3_1_1_0_0_a__p.equals(syntax))
				emit_Job___ENDTerminalRuleCall_1_3_1_1_1_1_BEGINTerminalRuleCall_1_3_1_1_0_0_a__p(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Job___ENDTerminalRuleCall_1_3_1_1_1_1_a_BEGINTerminalRuleCall_1_3_1_1_0_0__a.equals(syntax))
				emit_Job___ENDTerminalRuleCall_1_3_1_1_1_1_a_BEGINTerminalRuleCall_1_3_1_1_0_0__a(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Job___ENDTerminalRuleCall_1_3_1_1_1_1_a_BEGINTerminalRuleCall_1_3_1_1_0_0__p.equals(syntax))
				emit_Job___ENDTerminalRuleCall_1_3_1_1_1_1_a_BEGINTerminalRuleCall_1_3_1_1_0_0__p(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Job___ENDTerminalRuleCall_1_3_1_1_1_1_p_BEGINTerminalRuleCall_1_3_1_1_0_0_p__p.equals(syntax))
				emit_Job___ENDTerminalRuleCall_1_3_1_1_1_1_p_BEGINTerminalRuleCall_1_3_1_1_0_0_p__p(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Job___ENDTerminalRuleCall_1_5_1_q___BEGINTerminalRuleCall_1_0_0_q_ENDTerminalRuleCall_1_5_1_q__p_StepsKeyword_1_5_0_0__a.equals(syntax))
				emit_Job___ENDTerminalRuleCall_1_5_1_q___BEGINTerminalRuleCall_1_0_0_q_ENDTerminalRuleCall_1_5_1_q__p_StepsKeyword_1_5_0_0__a(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Job___HyphenMinusKeyword_0_0_0_JobKeyword_0_0_1__q.equals(syntax))
				emit_Job___HyphenMinusKeyword_0_0_0_JobKeyword_0_0_1__q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Job___StepsKeyword_1_5_0_0_q_ENDTerminalRuleCall_1_5_1_BEGINTerminalRuleCall_1_0_0_a__a.equals(syntax))
				emit_Job___StepsKeyword_1_5_0_0_q_ENDTerminalRuleCall_1_5_1_BEGINTerminalRuleCall_1_0_0_a__a(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Job_____ENDTerminalRuleCall_1_5_1_BEGINTerminalRuleCall_1_0_0_a__p_StepsKeyword_1_5_0_0__a.equals(syntax))
				emit_Job_____ENDTerminalRuleCall_1_5_1_BEGINTerminalRuleCall_1_0_0_a__p_StepsKeyword_1_5_0_0__a(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Job_____StepsKeyword_1_5_0_0_or___BEGINTerminalRuleCall_1_0_0_p_StepsKeyword_1_5_0_0____q_ENDTerminalRuleCall_1_5_1__a.equals(syntax))
				emit_Job_____StepsKeyword_1_5_0_0_or___BEGINTerminalRuleCall_1_0_0_p_StepsKeyword_1_5_0_0____q_ENDTerminalRuleCall_1_5_1__a(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Parameter_ENDTerminalRuleCall_3_1_a.equals(syntax))
				emit_Parameter_ENDTerminalRuleCall_3_1_a(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Parameter_ENDTerminalRuleCall_3_1_p.equals(syntax))
				emit_Parameter_ENDTerminalRuleCall_3_1_p(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Parameter___BEGINTerminalRuleCall_2_1_0_ENDTerminalRuleCall_2_1_2_ENDTerminalRuleCall_3_1_a__a.equals(syntax))
				emit_Parameter___BEGINTerminalRuleCall_2_1_0_ENDTerminalRuleCall_2_1_2_ENDTerminalRuleCall_3_1_a__a(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Parameter___ENDTerminalRuleCall_2_1_2_ENDTerminalRuleCall_3_1_a_BEGINTerminalRuleCall_2_1_0__a.equals(syntax))
				emit_Parameter___ENDTerminalRuleCall_2_1_2_ENDTerminalRuleCall_3_1_a_BEGINTerminalRuleCall_2_1_0__a(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Parameter___ENDTerminalRuleCall_3_1___BEGINTerminalRuleCall_2_1_0_ENDTerminalRuleCall_2_1_2__a__p.equals(syntax))
				emit_Parameter___ENDTerminalRuleCall_3_1___BEGINTerminalRuleCall_2_1_0_ENDTerminalRuleCall_2_1_2__a__p(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Parameter___ENDTerminalRuleCall_3_1_or___BEGINTerminalRuleCall_2_1_0_ENDTerminalRuleCall_2_1_2____p.equals(syntax))
				emit_Parameter___ENDTerminalRuleCall_3_1_or___BEGINTerminalRuleCall_2_1_0_ENDTerminalRuleCall_2_1_2____p(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Parameter___ENDTerminalRuleCall_3_1_q___BEGINTerminalRuleCall_2_1_0_ENDTerminalRuleCall_2_1_2__q__p.equals(syntax))
				emit_Parameter___ENDTerminalRuleCall_3_1_q___BEGINTerminalRuleCall_2_1_0_ENDTerminalRuleCall_2_1_2__q__p(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Parameter_____ENDTerminalRuleCall_2_1_2_or___ENDTerminalRuleCall_2_1_2_ENDTerminalRuleCall_3_1_p_____BEGINTerminalRuleCall_2_1_0__a.equals(syntax))
				emit_Parameter_____ENDTerminalRuleCall_2_1_2_or___ENDTerminalRuleCall_2_1_2_ENDTerminalRuleCall_3_1_p_____BEGINTerminalRuleCall_2_1_0__a(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Pipeline_BEGINTerminalRuleCall_0_5_0_2_0_or_____BEGINTerminalRuleCall_0_5_0_2_0_ENDTerminalRuleCall_0_5_0_2_2__q___OnKeyword_0_5_0_0___DefaultsKeyword_0_3_0_BEGINTerminalRuleCall_0_3_1_RunKeyword_0_3_2_BEGINTerminalRuleCall_0_3_3_ENDTerminalRuleCall_0_3_5_ENDTerminalRuleCall_0_3_6__a__p_BEGINTerminalRuleCall_0_5_0_2_0___ENDTerminalRuleCall_0_5_0_2_2___OnKeyword_0_5_0_0___DefaultsKeyword_0_3_0_BEGINTerminalRuleCall_0_3_1_RunKeyword_0_3_2_BEGINTerminalRuleCall_0_3_3_ENDTerminalRuleCall_0_3_5_ENDTerminalRuleCall_0_3_6__a__p_BEGINTerminalRuleCall_0_5_0_2_0__a__.equals(syntax))
				emit_Pipeline_BEGINTerminalRuleCall_0_5_0_2_0_or_____BEGINTerminalRuleCall_0_5_0_2_0_ENDTerminalRuleCall_0_5_0_2_2__q___OnKeyword_0_5_0_0___DefaultsKeyword_0_3_0_BEGINTerminalRuleCall_0_3_1_RunKeyword_0_3_2_BEGINTerminalRuleCall_0_3_3_ENDTerminalRuleCall_0_3_5_ENDTerminalRuleCall_0_3_6__a__p_BEGINTerminalRuleCall_0_5_0_2_0___ENDTerminalRuleCall_0_5_0_2_2___OnKeyword_0_5_0_0___DefaultsKeyword_0_3_0_BEGINTerminalRuleCall_0_3_1_RunKeyword_0_3_2_BEGINTerminalRuleCall_0_3_3_ENDTerminalRuleCall_0_3_5_ENDTerminalRuleCall_0_3_6__a__p_BEGINTerminalRuleCall_0_5_0_2_0__a__(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Pipeline_OnKeyword_0_5_0_0_a.equals(syntax))
				emit_Pipeline_OnKeyword_0_5_0_0_a(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Pipeline___BEGINTerminalRuleCall_0_5_0_2_0_ENDTerminalRuleCall_0_5_0_2_2___OnKeyword_0_5_0_0___DefaultsKeyword_0_3_0_BEGINTerminalRuleCall_0_3_1_RunKeyword_0_3_2_BEGINTerminalRuleCall_0_3_3_ENDTerminalRuleCall_0_3_5_ENDTerminalRuleCall_0_3_6__a__p__a.equals(syntax))
				emit_Pipeline___BEGINTerminalRuleCall_0_5_0_2_0_ENDTerminalRuleCall_0_5_0_2_2___OnKeyword_0_5_0_0___DefaultsKeyword_0_3_0_BEGINTerminalRuleCall_0_3_1_RunKeyword_0_3_2_BEGINTerminalRuleCall_0_3_3_ENDTerminalRuleCall_0_3_5_ENDTerminalRuleCall_0_3_6__a__p__a(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Pipeline___DefaultsKeyword_0_3_0_BEGINTerminalRuleCall_0_3_1_RunKeyword_0_3_2_BEGINTerminalRuleCall_0_3_3_ENDTerminalRuleCall_0_3_5_ENDTerminalRuleCall_0_3_6_OnKeyword_0_5_0_0_a_BEGINTerminalRuleCall_0_5_0_2_0_ENDTerminalRuleCall_0_5_0_2_2___OnKeyword_0_5_0_0_a_BEGINTerminalRuleCall_0_5_0_2_0_ENDTerminalRuleCall_0_5_0_2_2__a_OnKeyword_0_5_0_0_a___DefaultsKeyword_0_3_0_BEGINTerminalRuleCall_0_3_1_RunKeyword_0_3_2_BEGINTerminalRuleCall_0_3_3_ENDTerminalRuleCall_0_3_5_ENDTerminalRuleCall_0_3_6_OnKeyword_0_5_0_0_a__a__a.equals(syntax))
				emit_Pipeline___DefaultsKeyword_0_3_0_BEGINTerminalRuleCall_0_3_1_RunKeyword_0_3_2_BEGINTerminalRuleCall_0_3_3_ENDTerminalRuleCall_0_3_5_ENDTerminalRuleCall_0_3_6_OnKeyword_0_5_0_0_a_BEGINTerminalRuleCall_0_5_0_2_0_ENDTerminalRuleCall_0_5_0_2_2___OnKeyword_0_5_0_0_a_BEGINTerminalRuleCall_0_5_0_2_0_ENDTerminalRuleCall_0_5_0_2_2__a_OnKeyword_0_5_0_0_a___DefaultsKeyword_0_3_0_BEGINTerminalRuleCall_0_3_1_RunKeyword_0_3_2_BEGINTerminalRuleCall_0_3_3_ENDTerminalRuleCall_0_3_5_ENDTerminalRuleCall_0_3_6_OnKeyword_0_5_0_0_a__a__a(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Pipeline___DefaultsKeyword_0_3_0_BEGINTerminalRuleCall_0_3_1_RunKeyword_0_3_2_BEGINTerminalRuleCall_0_3_3_ENDTerminalRuleCall_0_3_5_ENDTerminalRuleCall_0_3_6_OnKeyword_0_5_0_0_a__a.equals(syntax))
				emit_Pipeline___DefaultsKeyword_0_3_0_BEGINTerminalRuleCall_0_3_1_RunKeyword_0_3_2_BEGINTerminalRuleCall_0_3_3_ENDTerminalRuleCall_0_3_5_ENDTerminalRuleCall_0_3_6_OnKeyword_0_5_0_0_a__a(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Pipeline___DefaultsKeyword_0_3_0_BEGINTerminalRuleCall_0_3_1_RunKeyword_0_3_2_BEGINTerminalRuleCall_0_3_3_ENDTerminalRuleCall_0_3_5_ENDTerminalRuleCall_0_3_6___OnKeyword_0_5_0_0___BEGINTerminalRuleCall_0_5_0_2_0_ENDTerminalRuleCall_0_5_0_2_2__q__a__a.equals(syntax))
				emit_Pipeline___DefaultsKeyword_0_3_0_BEGINTerminalRuleCall_0_3_1_RunKeyword_0_3_2_BEGINTerminalRuleCall_0_3_3_ENDTerminalRuleCall_0_3_5_ENDTerminalRuleCall_0_3_6___OnKeyword_0_5_0_0___BEGINTerminalRuleCall_0_5_0_2_0_ENDTerminalRuleCall_0_5_0_2_2__q__a__a(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Pipeline___ENDTerminalRuleCall_0_3_5_ENDTerminalRuleCall_0_3_6___OnKeyword_0_5_0_0___BEGINTerminalRuleCall_0_5_0_2_0_ENDTerminalRuleCall_0_5_0_2_2__q__a_DefaultsKeyword_0_3_0_BEGINTerminalRuleCall_0_3_1_RunKeyword_0_3_2_BEGINTerminalRuleCall_0_3_3__a.equals(syntax))
				emit_Pipeline___ENDTerminalRuleCall_0_3_5_ENDTerminalRuleCall_0_3_6___OnKeyword_0_5_0_0___BEGINTerminalRuleCall_0_5_0_2_0_ENDTerminalRuleCall_0_5_0_2_2__q__a_DefaultsKeyword_0_3_0_BEGINTerminalRuleCall_0_3_1_RunKeyword_0_3_2_BEGINTerminalRuleCall_0_3_3__a(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Pipeline___ENDTerminalRuleCall_0_5_0_2_2___OnKeyword_0_5_0_0___DefaultsKeyword_0_3_0_BEGINTerminalRuleCall_0_3_1_RunKeyword_0_3_2_BEGINTerminalRuleCall_0_3_3_ENDTerminalRuleCall_0_3_5_ENDTerminalRuleCall_0_3_6__a__p_BEGINTerminalRuleCall_0_5_0_2_0__a.equals(syntax))
				emit_Pipeline___ENDTerminalRuleCall_0_5_0_2_2___OnKeyword_0_5_0_0___DefaultsKeyword_0_3_0_BEGINTerminalRuleCall_0_3_1_RunKeyword_0_3_2_BEGINTerminalRuleCall_0_3_3_ENDTerminalRuleCall_0_3_5_ENDTerminalRuleCall_0_3_6__a__p_BEGINTerminalRuleCall_0_5_0_2_0__a(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Pipeline___OnKeyword_0_5_0_0___BEGINTerminalRuleCall_0_5_0_2_0_ENDTerminalRuleCall_0_5_0_2_2__q___DefaultsKeyword_0_3_0_BEGINTerminalRuleCall_0_3_1_RunKeyword_0_3_2_BEGINTerminalRuleCall_0_3_3_ENDTerminalRuleCall_0_3_5_ENDTerminalRuleCall_0_3_6__a__p.equals(syntax))
				emit_Pipeline___OnKeyword_0_5_0_0___BEGINTerminalRuleCall_0_5_0_2_0_ENDTerminalRuleCall_0_5_0_2_2__q___DefaultsKeyword_0_3_0_BEGINTerminalRuleCall_0_3_1_RunKeyword_0_3_2_BEGINTerminalRuleCall_0_3_3_ENDTerminalRuleCall_0_3_5_ENDTerminalRuleCall_0_3_6__a__p(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Pipeline___OnKeyword_0_5_0_0___BEGINTerminalRuleCall_0_5_0_2_0_ENDTerminalRuleCall_0_5_0_2_2__q__a.equals(syntax))
				emit_Pipeline___OnKeyword_0_5_0_0___BEGINTerminalRuleCall_0_5_0_2_0_ENDTerminalRuleCall_0_5_0_2_2__q__a(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Pipeline___OnKeyword_0_5_0_0___BEGINTerminalRuleCall_0_5_0_2_0_ENDTerminalRuleCall_0_5_0_2_2__q__p_or_______OnKeyword_0_5_0_0___BEGINTerminalRuleCall_0_5_0_2_0_ENDTerminalRuleCall_0_5_0_2_2__q__p___BEGINTerminalRuleCall_0_5_0_2_0_ENDTerminalRuleCall_0_5_0_2_2__q__q___DefaultsKeyword_0_3_0_BEGINTerminalRuleCall_0_3_1_RunKeyword_0_3_2_BEGINTerminalRuleCall_0_3_3_ENDTerminalRuleCall_0_3_5_ENDTerminalRuleCall_0_3_6__p___OnKeyword_0_5_0_0___BEGINTerminalRuleCall_0_5_0_2_0_ENDTerminalRuleCall_0_5_0_2_2__q__p_____BEGINTerminalRuleCall_0_5_0_2_0_ENDTerminalRuleCall_0_5_0_2_2__q___DefaultsKeyword_0_3_0_BEGINTerminalRuleCall_0_3_1_RunKeyword_0_3_2_BEGINTerminalRuleCall_0_3_3_ENDTerminalRuleCall_0_3_5_ENDTerminalRuleCall_0_3_6__p___OnKeyword_0_5_0_0___BEGINTerminalRuleCall_0_5_0_2_0_ENDTerminalRuleCall_0_5_0_2_2__q__p__a__.equals(syntax))
				emit_Pipeline___OnKeyword_0_5_0_0___BEGINTerminalRuleCall_0_5_0_2_0_ENDTerminalRuleCall_0_5_0_2_2__q__p_or_______OnKeyword_0_5_0_0___BEGINTerminalRuleCall_0_5_0_2_0_ENDTerminalRuleCall_0_5_0_2_2__q__p___BEGINTerminalRuleCall_0_5_0_2_0_ENDTerminalRuleCall_0_5_0_2_2__q__q___DefaultsKeyword_0_3_0_BEGINTerminalRuleCall_0_3_1_RunKeyword_0_3_2_BEGINTerminalRuleCall_0_3_3_ENDTerminalRuleCall_0_3_5_ENDTerminalRuleCall_0_3_6__p___OnKeyword_0_5_0_0___BEGINTerminalRuleCall_0_5_0_2_0_ENDTerminalRuleCall_0_5_0_2_2__q__p_____BEGINTerminalRuleCall_0_5_0_2_0_ENDTerminalRuleCall_0_5_0_2_2__q___DefaultsKeyword_0_3_0_BEGINTerminalRuleCall_0_3_1_RunKeyword_0_3_2_BEGINTerminalRuleCall_0_3_3_ENDTerminalRuleCall_0_3_5_ENDTerminalRuleCall_0_3_6__p___OnKeyword_0_5_0_0___BEGINTerminalRuleCall_0_5_0_2_0_ENDTerminalRuleCall_0_5_0_2_2__q__p__a__(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Pipeline___OnKeyword_0_5_0_0___DefaultsKeyword_0_3_0_BEGINTerminalRuleCall_0_3_1_RunKeyword_0_3_2_BEGINTerminalRuleCall_0_3_3_ENDTerminalRuleCall_0_3_5_ENDTerminalRuleCall_0_3_6__a___BEGINTerminalRuleCall_0_5_0_2_0_ENDTerminalRuleCall_0_5_0_2_2__q__a.equals(syntax))
				emit_Pipeline___OnKeyword_0_5_0_0___DefaultsKeyword_0_3_0_BEGINTerminalRuleCall_0_3_1_RunKeyword_0_3_2_BEGINTerminalRuleCall_0_3_3_ENDTerminalRuleCall_0_3_5_ENDTerminalRuleCall_0_3_6__a___BEGINTerminalRuleCall_0_5_0_2_0_ENDTerminalRuleCall_0_5_0_2_2__q__a(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Pipeline___OnKeyword_0_5_0_0___DefaultsKeyword_0_3_0_BEGINTerminalRuleCall_0_3_1_RunKeyword_0_3_2_BEGINTerminalRuleCall_0_3_3_ENDTerminalRuleCall_0_3_5_ENDTerminalRuleCall_0_3_6__a__p.equals(syntax))
				emit_Pipeline___OnKeyword_0_5_0_0___DefaultsKeyword_0_3_0_BEGINTerminalRuleCall_0_3_1_RunKeyword_0_3_2_BEGINTerminalRuleCall_0_3_3_ENDTerminalRuleCall_0_3_5_ENDTerminalRuleCall_0_3_6__a__p(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Pipeline___OnKeyword_0_5_0_0_a_BEGINTerminalRuleCall_0_5_0_2_0_ENDTerminalRuleCall_0_5_0_2_2__a.equals(syntax))
				emit_Pipeline___OnKeyword_0_5_0_0_a_BEGINTerminalRuleCall_0_5_0_2_0_ENDTerminalRuleCall_0_5_0_2_2__a(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Pipeline_____OnKeyword_0_5_0_0___BEGINTerminalRuleCall_0_5_0_2_0_ENDTerminalRuleCall_0_5_0_2_2__q__q___DefaultsKeyword_0_3_0_BEGINTerminalRuleCall_0_3_1_RunKeyword_0_3_2_BEGINTerminalRuleCall_0_3_3_ENDTerminalRuleCall_0_3_5_ENDTerminalRuleCall_0_3_6__q__p.equals(syntax))
				emit_Pipeline_____OnKeyword_0_5_0_0___BEGINTerminalRuleCall_0_5_0_2_0_ENDTerminalRuleCall_0_5_0_2_2__q__q___DefaultsKeyword_0_3_0_BEGINTerminalRuleCall_0_3_1_RunKeyword_0_3_2_BEGINTerminalRuleCall_0_3_3_ENDTerminalRuleCall_0_3_5_ENDTerminalRuleCall_0_3_6__q__p(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Script_GreaterThanSignHyphenMinusKeyword_0_1_1_0_1_or_VerticalLineKeyword_0_1_1_0_0.equals(syntax))
				emit_Script_GreaterThanSignHyphenMinusKeyword_0_1_1_0_1_or_VerticalLineKeyword_0_1_1_0_0(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Script___BEGINTerminalRuleCall_1_0_ENDTerminalRuleCall_1_2__q.equals(syntax))
				emit_Script___BEGINTerminalRuleCall_1_0_ENDTerminalRuleCall_1_2__q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Stage_DependsOnStageIDTerminalRuleCall_1_1_1_0_1.equals(syntax))
				emit_Stage_DependsOnStageIDTerminalRuleCall_1_1_1_0_1(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Stage___BEGINTerminalRuleCall_1_0_0_or_DependsOnKeyword_1_1_0__a.equals(syntax))
				emit_Stage___BEGINTerminalRuleCall_1_0_0_or_DependsOnKeyword_1_1_0__a(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Stage___BEGINTerminalRuleCall_1_0_0_q_DependsOnKeyword_1_1_0_q___JobsKeyword_1_2_0_0_ENDTerminalRuleCall_1_2_1__q__p.equals(syntax))
				emit_Stage___BEGINTerminalRuleCall_1_0_0_q_DependsOnKeyword_1_1_0_q___JobsKeyword_1_2_0_0_ENDTerminalRuleCall_1_2_1__q__p(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Stage___DependsOnKeyword_1_1_0_q_BEGINTerminalRuleCall_1_0_0_q___JobsKeyword_1_2_0_0_ENDTerminalRuleCall_1_2_1__q__p.equals(syntax))
				emit_Stage___DependsOnKeyword_1_1_0_q_BEGINTerminalRuleCall_1_0_0_q___JobsKeyword_1_2_0_0_ENDTerminalRuleCall_1_2_1__q__p(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Stage___ENDTerminalRuleCall_1_2_1___BEGINTerminalRuleCall_1_0_0_or_DependsOnKeyword_1_1_0__a_JobsKeyword_1_2_0_0__a.equals(syntax))
				emit_Stage___ENDTerminalRuleCall_1_2_1___BEGINTerminalRuleCall_1_0_0_or_DependsOnKeyword_1_1_0__a_JobsKeyword_1_2_0_0__a(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Stage___ENDTerminalRuleCall_1_2_1___BEGINTerminalRuleCall_1_0_0_q_DependsOnKeyword_1_1_0_q__p_JobsKeyword_1_2_0_0__a.equals(syntax))
				emit_Stage___ENDTerminalRuleCall_1_2_1___BEGINTerminalRuleCall_1_0_0_q_DependsOnKeyword_1_1_0_q__p_JobsKeyword_1_2_0_0__a(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Stage___ENDTerminalRuleCall_1_2_1___DependsOnKeyword_1_1_0_q_BEGINTerminalRuleCall_1_0_0_q__p_JobsKeyword_1_2_0_0__a.equals(syntax))
				emit_Stage___ENDTerminalRuleCall_1_2_1___DependsOnKeyword_1_1_0_q_BEGINTerminalRuleCall_1_0_0_q__p_JobsKeyword_1_2_0_0__a(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Stage___JobsKeyword_1_2_0_0_ENDTerminalRuleCall_1_2_1___BEGINTerminalRuleCall_1_0_0_or_DependsOnKeyword_1_1_0__a__a.equals(syntax))
				emit_Stage___JobsKeyword_1_2_0_0_ENDTerminalRuleCall_1_2_1___BEGINTerminalRuleCall_1_0_0_or_DependsOnKeyword_1_1_0__a__a(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Stage_____BEGINTerminalRuleCall_1_0_0_or_DependsOnKeyword_1_1_0__q___JobsKeyword_1_2_0_0_ENDTerminalRuleCall_1_2_1__q__p.equals(syntax))
				emit_Stage_____BEGINTerminalRuleCall_1_0_0_or_DependsOnKeyword_1_1_0__q___JobsKeyword_1_2_0_0_ENDTerminalRuleCall_1_2_1__q__p(semanticObject, getLastNavigableState(), syntaxNodes);
			else acceptNodes(getLastNavigableState(), syntaxNodes);
		}
	}

	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     (BEGIN END)?
	 *
	 * This ambiguous syntax occurs at:
	 *     keyword=PipelineKeyword (ambiguity) (rule end)
	 *     paraKW='parameters:' BEGIN END (ambiguity) (rule end)
	 *     paraKW='parameters:' END BEGIN END (ambiguity) (rule end)
	 *     paraKW='with:' BEGIN END (ambiguity) (rule end)
	 *     paraKW='with:' END BEGIN END (ambiguity) (rule end)
	 *     parameters+=ParameterValue END (ambiguity) (rule end)
	 *     value=StringValue (ambiguity) (rule end)
	 
	 * </pre>
	 */
	protected void emit_Action___BEGINTerminalRuleCall_2_0_ENDTerminalRuleCall_2_2__q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     (BEGIN | END)*
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) 'pool:' (ambiguity) 'demands:' poolDemands=HyphenParameters
	 *     (rule start) 'pool:' (ambiguity) 'demands:' poolDemands=StringValue
	 *     poolID=ID (ambiguity) 'demands:' poolDemands=HyphenParameters
	 *     poolID=ID (ambiguity) 'demands:' poolDemands=StringValue
	 *     poolID=ID (ambiguity) (rule end)
	 *     poolID=STRING (ambiguity) 'demands:' poolDemands=HyphenParameters
	 *     poolID=STRING (ambiguity) 'demands:' poolDemands=StringValue
	 *     poolID=STRING (ambiguity) (rule end)
	 *     poolName=StringValue (ambiguity) 'demands:' poolDemands=HyphenParameters
	 *     poolName=StringValue (ambiguity) 'demands:' poolDemands=StringValue
	 *     poolName=StringValue (ambiguity) (rule end)
	 *     poolVm=StringValue (ambiguity) 'demands:' poolDemands=HyphenParameters
	 *     poolVm=StringValue (ambiguity) 'demands:' poolDemands=StringValue
	 *     poolVm=StringValue (ambiguity) (rule end)
	 
	 * </pre>
	 */
	protected void emit_Configuration___BEGINTerminalRuleCall_0_2_2_0_0_or_ENDTerminalRuleCall_0_2_2_1_1__a(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     (BEGIN | END)+
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) 'pool:' (ambiguity) (rule start)
	 
	 * </pre>
	 */
	protected void emit_Configuration___BEGINTerminalRuleCall_0_2_2_0_0_or_ENDTerminalRuleCall_0_2_2_1_1__p(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     (END BEGIN*)+
	 *
	 * This ambiguous syntax occurs at:
	 *     poolDemands=HyphenParameters (ambiguity) 'demands:' poolDemands=HyphenParameters
	 *     poolDemands=HyphenParameters (ambiguity) 'demands:' poolDemands=StringValue
	 *     poolDemands=HyphenParameters (ambiguity) (rule end)
	 *     poolDemands=StringValue (ambiguity) 'demands:' poolDemands=HyphenParameters
	 *     poolDemands=StringValue (ambiguity) 'demands:' poolDemands=StringValue
	 *     poolDemands=StringValue (ambiguity) (rule end)
	 
	 * </pre>
	 */
	protected void emit_Configuration___ENDTerminalRuleCall_0_2_2_1_1_BEGINTerminalRuleCall_0_2_2_0_0_a__p(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     (END* BEGIN)*
	 *
	 * This ambiguous syntax occurs at:
	 *     poolName=StringValue (ambiguity) 'vmImage:' poolVm=StringValue
	 
	 * </pre>
	 */
	protected void emit_Configuration___ENDTerminalRuleCall_0_2_2_1_1_a_BEGINTerminalRuleCall_0_2_2_0_0__a(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     (END* BEGIN)+
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) 'pool:' (ambiguity) 'name:' poolName=StringValue
	 *     (rule start) 'pool:' (ambiguity) 'vmImage:' poolVm=StringValue
	 *     poolID=ID (ambiguity) 'name:' poolName=StringValue
	 *     poolID=ID (ambiguity) 'vmImage:' poolVm=StringValue
	 *     poolID=STRING (ambiguity) 'name:' poolName=StringValue
	 *     poolID=STRING (ambiguity) 'vmImage:' poolVm=StringValue
	 *     poolName=StringValue (ambiguity) 'name:' poolName=StringValue
	 *     poolVm=StringValue (ambiguity) 'name:' poolName=StringValue
	 *     poolVm=StringValue (ambiguity) 'vmImage:' poolVm=StringValue
	 
	 * </pre>
	 */
	protected void emit_Configuration___ENDTerminalRuleCall_0_2_2_1_1_a_BEGINTerminalRuleCall_0_2_2_0_0__p(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     (END+ BEGIN+)+
	 *
	 * This ambiguous syntax occurs at:
	 *     poolDemands=HyphenParameters (ambiguity) 'name:' poolName=StringValue
	 *     poolDemands=HyphenParameters (ambiguity) 'vmImage:' poolVm=StringValue
	 *     poolDemands=StringValue (ambiguity) 'name:' poolName=StringValue
	 *     poolDemands=StringValue (ambiguity) 'vmImage:' poolVm=StringValue
	 
	 * </pre>
	 */
	protected void emit_Configuration___ENDTerminalRuleCall_0_2_2_1_1_p_BEGINTerminalRuleCall_0_2_2_0_0_p__p(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     ('parameters:' | ('pool:' (BEGIN | END)*) | (('options:' BEGIN ('max-time:' INT)?) | ('docker:' ID) | (END ('size:' ID)?))+)?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) (rule start)
	 
	 * </pre>
	 */
	protected void emit_Configuration___ParametersKeyword_0_0_0_or___PoolKeyword_0_2_0___BEGINTerminalRuleCall_0_2_2_0_0_or_ENDTerminalRuleCall_0_2_2_1_1__a___or_____DockerKeyword_1_1_0_IDTerminalRuleCall_1_1_1___or___ENDTerminalRuleCall_1_2_1___SizeKeyword_1_2_0_0_IDTerminalRuleCall_1_2_0_1__q___or___OptionsKeyword_1_0_0_BEGINTerminalRuleCall_1_0_1___MaxTimeKeyword_1_0_2_0_INTTerminalRuleCall_1_0_2_1__q____p__q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     activities+=Activity
	 *
	 * This ambiguous syntax occurs at:
	 *     (ambiguity)
	 
	 * </pre>
	 */
	protected void emit_Event_ActivitiesActivityParserRuleCall_1_0_1_1_0_0(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     activities+=Activity
	 *
	 * This ambiguous syntax occurs at:
	 *     (ambiguity)
	 
	 * </pre>
	 */
	protected void emit_Event_ActivitiesActivityParserRuleCall_1_5_2_0(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     autoCancel=ID
	 *
	 * This ambiguous syntax occurs at:
	 *     (ambiguity)
	 
	 * </pre>
	 */
	protected void emit_Event_AutoCancelIDTerminalRuleCall_1_3_1_0(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     BEGIN | ((BEGIN END)? ((END* BEGIN)+ 'types:')+ BEGIN (END ((END* BEGIN)+ 'types:')+ BEGIN)*)
	 *
	 * This ambiguous syntax occurs at:
	 *     activities+=Activity ']' (ambiguity) '-'? activities+=Activity
	 *     activities+=Activity (ambiguity) '-'? activities+=Activity
	 
	 * </pre>
	 */
	protected void emit_Event_BEGINTerminalRuleCall_1_0_1_2_0_or_____BEGINTerminalRuleCall_1_0_1_2_0_ENDTerminalRuleCall_1_0_1_2_2__q_____ENDTerminalRuleCall_1_6_a_BEGINTerminalRuleCall_1_0_0__p_TypesKeyword_1_0_1_0__p_BEGINTerminalRuleCall_1_0_1_2_0___ENDTerminalRuleCall_1_0_1_2_2_____ENDTerminalRuleCall_1_6_a_BEGINTerminalRuleCall_1_0_0__p_TypesKeyword_1_0_1_0__p_BEGINTerminalRuleCall_1_0_1_2_0__a__(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     branches+=Branch
	 *
	 * This ambiguous syntax occurs at:
	 *     (ambiguity)
	 
	 * </pre>
	 */
	protected void emit_Event_BranchesBranchParserRuleCall_0_0_0(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     branches+=Branch
	 *
	 * This ambiguous syntax occurs at:
	 *     (ambiguity)
	 
	 * </pre>
	 */
	protected void emit_Event_BranchesBranchParserRuleCall_1_1_2_0_1_0(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     drafts=ID
	 *
	 * This ambiguous syntax occurs at:
	 *     (ambiguity)
	 
	 * </pre>
	 */
	protected void emit_Event_DraftsIDTerminalRuleCall_1_4_1_0(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     '-'?
	 *
	 * This ambiguous syntax occurs at:
	 *     activities+=Activity ']' (BEGIN | ((BEGIN END)? ((END* BEGIN)+ 'types:')+ BEGIN (END ((END* BEGIN)+ 'types:')+ BEGIN)*)) (ambiguity) activities+=Activity
	 *     activities+=Activity ((END* BEGIN)+ 'types:')+ BEGIN (END ((END* BEGIN)+ 'types:')+ BEGIN)* (ambiguity) activities+=Activity
	 *     activities+=Activity (BEGIN | ((BEGIN END)? ((END* BEGIN)+ 'types:')+ BEGIN (END ((END* BEGIN)+ 'types:')+ BEGIN)*)) (ambiguity) activities+=Activity
	 *     activities+=Activity (END ((END* BEGIN)+ 'types:')+ BEGIN)* (ambiguity) activities+=Activity
	 *     autoCancel=ID ((END* BEGIN)+ 'types:')+ BEGIN (END ((END* BEGIN)+ 'types:')+ BEGIN)* (ambiguity) activities+=Activity
	 *     branchKW='branches-ignore:' (BEGIN ('includes:' | 'excludes:')+ END)? ((END* BEGIN)+ 'types:')+ BEGIN (END ((END* BEGIN)+ 'types:')+ BEGIN)* (ambiguity) activities+=Activity
	 *     branchKW='branches:' (BEGIN ('includes:' | 'excludes:')+ END)? ((END* BEGIN)+ 'types:')+ BEGIN (END ((END* BEGIN)+ 'types:')+ BEGIN)* (ambiguity) activities+=Activity
	 *     branches+=Branch ']' (BEGIN ('includes:' | 'excludes:')+ END)? ((END* BEGIN)+ 'types:')+ BEGIN (END ((END* BEGIN)+ 'types:')+ BEGIN)* (ambiguity) activities+=Activity
	 *     branches+=Branch ('includes:' | 'excludes:')* END ((END* BEGIN)+ 'types:')+ BEGIN (END ((END* BEGIN)+ 'types:')+ BEGIN)* (ambiguity) activities+=Activity
	 *     branches+=Branch ((END* BEGIN)+ 'types:')+ BEGIN (END ((END* BEGIN)+ 'types:')+ BEGIN)* (ambiguity) activities+=Activity
	 *     branches+=Branch (BEGIN ('includes:' | 'excludes:')+ END)? ((END* BEGIN)+ 'types:')+ BEGIN (END ((END* BEGIN)+ 'types:')+ BEGIN)* (ambiguity) activities+=Activity
	 *     drafts=ID ((END* BEGIN)+ 'types:')+ BEGIN (END ((END* BEGIN)+ 'types:')+ BEGIN)* (ambiguity) activities+=Activity
	 *     keyword=PipelineKeyword ((END* BEGIN)+ 'types:')+ BEGIN (END ((END* BEGIN)+ 'types:')+ BEGIN)* (ambiguity) activities+=Activity
	 *     pathValue=HyphenParameters END ((END* BEGIN)+ 'types:')+ BEGIN (END ((END* BEGIN)+ 'types:')+ BEGIN)* (ambiguity) activities+=Activity
	 
	 * </pre>
	 */
	protected void emit_Event_HyphenMinusKeyword_1_0_1_2_1_0_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     keyword=PipelineKeyword
	 *
	 * This ambiguous syntax occurs at:
	 *     (ambiguity)
	 
	 * </pre>
	 */
	protected void emit_Event_KeywordPipelineKeywordEnumRuleCall_0_1_0(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     (BEGIN END ((END* BEGIN)+ 'types:')+)*
	 *
	 * This ambiguous syntax occurs at:
	 *     activities+=Activity END ((END* BEGIN)+ 'types:')+ (ambiguity) '[' activities+=Activity
	 *     activities+=Activity END ((END* BEGIN)+ 'types:')+ (ambiguity) activities+=Activity
	 
	 * </pre>
	 */
	protected void emit_Event___BEGINTerminalRuleCall_1_0_1_2_0_ENDTerminalRuleCall_1_0_1_2_2_____ENDTerminalRuleCall_1_6_a_BEGINTerminalRuleCall_1_0_0__p_TypesKeyword_1_0_1_0__p__a(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     (BEGIN ('includes:' | 'excludes:')+ END)?
	 *
	 * This ambiguous syntax occurs at:
	 *     branchKW='branches-ignore:' (ambiguity)
	 *     branchKW='branches-ignore:' (ambiguity) ((END* BEGIN)+ 'types:')+ BEGIN (END ((END* BEGIN)+ 'types:')+ BEGIN)* '-'? activities+=Activity
	 *     branchKW='branches-ignore:' (ambiguity) (END* BEGIN)+ 'types:' ((BEGIN END)? (END* BEGIN)+ 'types:')* '[' activities+=Activity
	 *     branchKW='branches-ignore:' (ambiguity) (END* BEGIN)+ 'types:' ((BEGIN END)? (END* BEGIN)+ 'types:')* activities+=Activity
	 *     branchKW='branches:' (ambiguity)
	 *     branchKW='branches:' (ambiguity) ((END* BEGIN)+ 'types:')+ BEGIN (END ((END* BEGIN)+ 'types:')+ BEGIN)* '-'? activities+=Activity
	 *     branchKW='branches:' (ambiguity) (END* BEGIN)+ 'types:' ((BEGIN END)? (END* BEGIN)+ 'types:')* '[' activities+=Activity
	 *     branchKW='branches:' (ambiguity) (END* BEGIN)+ 'types:' ((BEGIN END)? (END* BEGIN)+ 'types:')* activities+=Activity
	 *     branches+=Branch ']' (ambiguity)
	 *     branches+=Branch ']' (ambiguity) ((END* BEGIN)+ 'types:')+ BEGIN (END ((END* BEGIN)+ 'types:')+ BEGIN)* '-'? activities+=Activity
	 *     branches+=Branch ']' (ambiguity) (END* BEGIN)+ 'types:' ((BEGIN END)? (END* BEGIN)+ 'types:')* '[' activities+=Activity
	 *     branches+=Branch ']' (ambiguity) (END* BEGIN)+ 'types:' ((BEGIN END)? (END* BEGIN)+ 'types:')* activities+=Activity
	 *     branches+=Branch (ambiguity)
	 *     branches+=Branch (ambiguity) ((END* BEGIN)+ 'types:')+ BEGIN (END ((END* BEGIN)+ 'types:')+ BEGIN)* '-'? activities+=Activity
	 *     branches+=Branch (ambiguity) (END* BEGIN)+ 'types:' ((BEGIN END)? (END* BEGIN)+ 'types:')* '[' activities+=Activity
	 *     branches+=Branch (ambiguity) (END* BEGIN)+ 'types:' ((BEGIN END)? (END* BEGIN)+ 'types:')* activities+=Activity
	 
	 * </pre>
	 */
	protected void emit_Event___BEGINTerminalRuleCall_1_1_2_1_0___ExcludesKeyword_1_1_2_1_1_0_1_or_IncludesKeyword_1_1_2_1_1_0_0__p_ENDTerminalRuleCall_1_1_2_1_2__q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     (END ((END* BEGIN)+ 'types:')+ BEGIN)*
	 *
	 * This ambiguous syntax occurs at:
	 *     activities+=Activity ((END* BEGIN)+ 'types:')+ BEGIN (ambiguity) '-'? activities+=Activity
	 *     activities+=Activity (ambiguity) '-'? activities+=Activity
	 *     autoCancel=ID ((END* BEGIN)+ 'types:')+ BEGIN (ambiguity) '-'? activities+=Activity
	 *     branchKW='branches-ignore:' (BEGIN ('includes:' | 'excludes:')+ END)? ((END* BEGIN)+ 'types:')+ BEGIN (ambiguity) '-'? activities+=Activity
	 *     branchKW='branches:' (BEGIN ('includes:' | 'excludes:')+ END)? ((END* BEGIN)+ 'types:')+ BEGIN (ambiguity) '-'? activities+=Activity
	 *     branches+=Branch ']' (BEGIN ('includes:' | 'excludes:')+ END)? ((END* BEGIN)+ 'types:')+ BEGIN (ambiguity) '-'? activities+=Activity
	 *     branches+=Branch ('includes:' | 'excludes:')* END ((END* BEGIN)+ 'types:')+ BEGIN (ambiguity) '-'? activities+=Activity
	 *     branches+=Branch ((END* BEGIN)+ 'types:')+ BEGIN (ambiguity) '-'? activities+=Activity
	 *     branches+=Branch (BEGIN ('includes:' | 'excludes:')+ END)? ((END* BEGIN)+ 'types:')+ BEGIN (ambiguity) '-'? activities+=Activity
	 *     drafts=ID ((END* BEGIN)+ 'types:')+ BEGIN (ambiguity) '-'? activities+=Activity
	 *     keyword=PipelineKeyword ((END* BEGIN)+ 'types:')+ BEGIN (ambiguity) '-'? activities+=Activity
	 *     pathValue=HyphenParameters END ((END* BEGIN)+ 'types:')+ BEGIN (ambiguity) '-'? activities+=Activity
	 
	 * </pre>
	 */
	protected void emit_Event___ENDTerminalRuleCall_1_0_1_2_2_____ENDTerminalRuleCall_1_6_a_BEGINTerminalRuleCall_1_0_0__p_TypesKeyword_1_0_1_0__p_BEGINTerminalRuleCall_1_0_1_2_0__a(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     (END* BEGIN)+
	 *
	 * This ambiguous syntax occurs at:
	 *     activities+=Activity (ambiguity) 'types:' ((BEGIN END)? (ambiguity) 'types:')* '[' activities+=Activity
	 *     activities+=Activity (ambiguity) 'types:' ((BEGIN END)? (ambiguity) 'types:')* activities+=Activity
	 *     autoCancel=ID (ambiguity) 'types:' ((BEGIN END)? (ambiguity) 'types:')* '[' activities+=Activity
	 *     autoCancel=ID (ambiguity) 'types:' ((BEGIN END)? (ambiguity) 'types:')* activities+=Activity
	 *     branchKW='branches-ignore:' (BEGIN ('includes:' | 'excludes:')+ END)? (ambiguity) 'types:' ((BEGIN END)? (ambiguity) 'types:')* '[' activities+=Activity
	 *     branchKW='branches-ignore:' (BEGIN ('includes:' | 'excludes:')+ END)? (ambiguity) 'types:' ((BEGIN END)? (ambiguity) 'types:')* activities+=Activity
	 *     branchKW='branches:' (BEGIN ('includes:' | 'excludes:')+ END)? (ambiguity) 'types:' ((BEGIN END)? (ambiguity) 'types:')* '[' activities+=Activity
	 *     branchKW='branches:' (BEGIN ('includes:' | 'excludes:')+ END)? (ambiguity) 'types:' ((BEGIN END)? (ambiguity) 'types:')* activities+=Activity
	 *     branches+=Branch ']' (BEGIN ('includes:' | 'excludes:')+ END)? (ambiguity) 'types:' ((BEGIN END)? (ambiguity) 'types:')* '[' activities+=Activity
	 *     branches+=Branch ']' (BEGIN ('includes:' | 'excludes:')+ END)? (ambiguity) 'types:' ((BEGIN END)? (ambiguity) 'types:')* activities+=Activity
	 *     branches+=Branch ('includes:' | 'excludes:')* END (ambiguity) 'types:' ((BEGIN END)? (ambiguity) 'types:')* '[' activities+=Activity
	 *     branches+=Branch ('includes:' | 'excludes:')* END (ambiguity) 'types:' ((BEGIN END)? (ambiguity) 'types:')* activities+=Activity
	 *     branches+=Branch (BEGIN ('includes:' | 'excludes:')+ END)? (ambiguity) 'types:' ((BEGIN END)? (ambiguity) 'types:')* '[' activities+=Activity
	 *     branches+=Branch (BEGIN ('includes:' | 'excludes:')+ END)? (ambiguity) 'types:' ((BEGIN END)? (ambiguity) 'types:')* activities+=Activity
	 *     branches+=Branch (ambiguity) 'types:' ((BEGIN END)? (ambiguity) 'types:')* '[' activities+=Activity
	 *     branches+=Branch (ambiguity) 'types:' ((BEGIN END)? (ambiguity) 'types:')* activities+=Activity
	 *     drafts=ID (ambiguity) 'types:' ((BEGIN END)? (ambiguity) 'types:')* '[' activities+=Activity
	 *     drafts=ID (ambiguity) 'types:' ((BEGIN END)? (ambiguity) 'types:')* activities+=Activity
	 *     keyword=PipelineKeyword (ambiguity) 'types:' ((BEGIN END)? (ambiguity) 'types:')* '[' activities+=Activity
	 *     keyword=PipelineKeyword (ambiguity) 'types:' ((BEGIN END)? (ambiguity) 'types:')* activities+=Activity
	 *     pathValue=HyphenParameters END (ambiguity) 'types:' ((BEGIN END)? (ambiguity) 'types:')* '[' activities+=Activity
	 *     pathValue=HyphenParameters END (ambiguity) 'types:' ((BEGIN END)? (ambiguity) 'types:')* activities+=Activity
	 
	 * </pre>
	 */
	protected void emit_Event___ENDTerminalRuleCall_1_6_a_BEGINTerminalRuleCall_1_0_0__p(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     ('includes:' | 'excludes:')*
	 *
	 * This ambiguous syntax occurs at:
	 *     branches+=Branch (ambiguity) '-' branches+=Branch
	 *     branches+=Branch (ambiguity) END
	 *     branches+=Branch (ambiguity) END ((END* BEGIN)+ 'types:')+ BEGIN (END ((END* BEGIN)+ 'types:')+ BEGIN)* '-'? activities+=Activity
	 *     branches+=Branch (ambiguity) END (END* BEGIN)+ 'types:' ((BEGIN END)? (END* BEGIN)+ 'types:')* '[' activities+=Activity
	 *     branches+=Branch (ambiguity) END (END* BEGIN)+ 'types:' ((BEGIN END)? (END* BEGIN)+ 'types:')* activities+=Activity
	 
	 * </pre>
	 */
	protected void emit_Event___ExcludesKeyword_1_1_2_1_1_0_1_or_IncludesKeyword_1_1_2_1_1_0_0__a(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     ('includes:' | 'excludes:')+
	 *
	 * This ambiguous syntax occurs at:
	 *     branchKW='branches-ignore:' BEGIN (ambiguity) '-' branches+=Branch
	 *     branchKW='branches:' BEGIN (ambiguity) '-' branches+=Branch
	 *     branches+=Branch ']' BEGIN (ambiguity) '-' branches+=Branch
	 *     branches+=Branch BEGIN (ambiguity) '-' branches+=Branch
	 
	 * </pre>
	 */
	protected void emit_Event___ExcludesKeyword_1_1_2_1_1_0_1_or_IncludesKeyword_1_1_2_1_1_0_0__p(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     ((BEGIN END)? (END* BEGIN)+ 'types:')*
	 *
	 * This ambiguous syntax occurs at:
	 *     activities+=Activity (END* BEGIN)+ 'types:' (ambiguity) '[' activities+=Activity
	 *     activities+=Activity (END* BEGIN)+ 'types:' (ambiguity) activities+=Activity
	 *     autoCancel=ID (END* BEGIN)+ 'types:' (ambiguity) '[' activities+=Activity
	 *     autoCancel=ID (END* BEGIN)+ 'types:' (ambiguity) activities+=Activity
	 *     branchKW='branches-ignore:' (BEGIN ('includes:' | 'excludes:')+ END)? (END* BEGIN)+ 'types:' (ambiguity) '[' activities+=Activity
	 *     branchKW='branches-ignore:' (BEGIN ('includes:' | 'excludes:')+ END)? (END* BEGIN)+ 'types:' (ambiguity) activities+=Activity
	 *     branchKW='branches:' (BEGIN ('includes:' | 'excludes:')+ END)? (END* BEGIN)+ 'types:' (ambiguity) '[' activities+=Activity
	 *     branchKW='branches:' (BEGIN ('includes:' | 'excludes:')+ END)? (END* BEGIN)+ 'types:' (ambiguity) activities+=Activity
	 *     branches+=Branch ']' (BEGIN ('includes:' | 'excludes:')+ END)? (END* BEGIN)+ 'types:' (ambiguity) '[' activities+=Activity
	 *     branches+=Branch ']' (BEGIN ('includes:' | 'excludes:')+ END)? (END* BEGIN)+ 'types:' (ambiguity) activities+=Activity
	 *     branches+=Branch ('includes:' | 'excludes:')* END (END* BEGIN)+ 'types:' (ambiguity) '[' activities+=Activity
	 *     branches+=Branch ('includes:' | 'excludes:')* END (END* BEGIN)+ 'types:' (ambiguity) activities+=Activity
	 *     branches+=Branch (BEGIN ('includes:' | 'excludes:')+ END)? (END* BEGIN)+ 'types:' (ambiguity) '[' activities+=Activity
	 *     branches+=Branch (BEGIN ('includes:' | 'excludes:')+ END)? (END* BEGIN)+ 'types:' (ambiguity) activities+=Activity
	 *     branches+=Branch (END* BEGIN)+ 'types:' (ambiguity) '[' activities+=Activity
	 *     branches+=Branch (END* BEGIN)+ 'types:' (ambiguity) activities+=Activity
	 *     drafts=ID (END* BEGIN)+ 'types:' (ambiguity) '[' activities+=Activity
	 *     drafts=ID (END* BEGIN)+ 'types:' (ambiguity) activities+=Activity
	 *     keyword=PipelineKeyword (END* BEGIN)+ 'types:' (ambiguity) '[' activities+=Activity
	 *     keyword=PipelineKeyword (END* BEGIN)+ 'types:' (ambiguity) activities+=Activity
	 *     pathValue=HyphenParameters END (END* BEGIN)+ 'types:' (ambiguity) '[' activities+=Activity
	 *     pathValue=HyphenParameters END (END* BEGIN)+ 'types:' (ambiguity) activities+=Activity
	 
	 * </pre>
	 */
	protected void emit_Event_____BEGINTerminalRuleCall_1_0_1_2_0_ENDTerminalRuleCall_1_0_1_2_2__q___ENDTerminalRuleCall_1_6_a_BEGINTerminalRuleCall_1_0_0__p_TypesKeyword_1_0_1_0__a(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     ((BEGIN END)? (END* BEGIN)+ 'types:')+
	 *
	 * This ambiguous syntax occurs at:
	 *     activities+=Activity ']' (ambiguity) '[' activities+=Activity
	 *     activities+=Activity ']' (ambiguity) activities+=Activity
	 *     activities+=Activity (ambiguity) '[' activities+=Activity
	 *     activities+=Activity (ambiguity) activities+=Activity
	 
	 * </pre>
	 */
	protected void emit_Event_____BEGINTerminalRuleCall_1_0_1_2_0_ENDTerminalRuleCall_1_0_1_2_2__q___ENDTerminalRuleCall_1_6_a_BEGINTerminalRuleCall_1_0_0__p_TypesKeyword_1_0_1_0__p(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     ((END* BEGIN)+ 'types:')+
	 *
	 * This ambiguous syntax occurs at:
	 *     activities+=Activity (ambiguity) BEGIN (END (ambiguity) BEGIN)* '-'? activities+=Activity
	 *     activities+=Activity END (ambiguity) (BEGIN END (ambiguity))* '[' activities+=Activity
	 *     activities+=Activity END (ambiguity) (BEGIN END (ambiguity))* activities+=Activity
	 *     autoCancel=ID (ambiguity) BEGIN (END (ambiguity) BEGIN)* '-'? activities+=Activity
	 *     branchKW='branches-ignore:' (BEGIN ('includes:' | 'excludes:')+ END)? (ambiguity) BEGIN (END (ambiguity) BEGIN)* '-'? activities+=Activity
	 *     branchKW='branches:' (BEGIN ('includes:' | 'excludes:')+ END)? (ambiguity) BEGIN (END (ambiguity) BEGIN)* '-'? activities+=Activity
	 *     branches+=Branch ']' (BEGIN ('includes:' | 'excludes:')+ END)? (ambiguity) BEGIN (END (ambiguity) BEGIN)* '-'? activities+=Activity
	 *     branches+=Branch ('includes:' | 'excludes:')* END (ambiguity) BEGIN (END (ambiguity) BEGIN)* '-'? activities+=Activity
	 *     branches+=Branch (BEGIN ('includes:' | 'excludes:')+ END)? (ambiguity) BEGIN (END (ambiguity) BEGIN)* '-'? activities+=Activity
	 *     branches+=Branch (ambiguity) BEGIN (END (ambiguity) BEGIN)* '-'? activities+=Activity
	 *     drafts=ID (ambiguity) BEGIN (END (ambiguity) BEGIN)* '-'? activities+=Activity
	 *     keyword=PipelineKeyword (ambiguity) BEGIN (END (ambiguity) BEGIN)* '-'? activities+=Activity
	 *     pathValue=HyphenParameters END (ambiguity) BEGIN (END (ambiguity) BEGIN)* '-'? activities+=Activity
	 
	 * </pre>
	 */
	protected void emit_Event_____ENDTerminalRuleCall_1_6_a_BEGINTerminalRuleCall_1_0_0__p_TypesKeyword_1_0_1_0__p(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     (BEGIN END)?
	 *
	 * This ambiguous syntax occurs at:
	 *     keyword=PipelineKeyword (ambiguity) (rule end)
	 *     name=ArrayList (ambiguity) (rule end)
	 *     name=ID (ambiguity) (rule end)
	 
	 * </pre>
	 */
	protected void emit_JobParameter___BEGINTerminalRuleCall_2_0_ENDTerminalRuleCall_2_2__q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     BEGIN*
	 *
	 * This ambiguous syntax occurs at:
	 *     steps+=Step END (ambiguity) ('steps:'? END (ambiguity))* 'permissions:' BEGIN value+=KeyValuePairs
	 *     steps+=Step END (ambiguity) ('steps:'? END (ambiguity))* 'permissions:' permission=Permission
	 *     steps+=Step END (ambiguity) ('steps:'? END (ambiguity))* (rule end)
	 *     steps+=Step END (ambiguity) ('steps:'? END (ambiguity))* dependKW='dependsOn:'
	 *     steps+=Step END (ambiguity) ('steps:'? END (ambiguity))* dependKW='needs:'
	 *     steps+=Step END (ambiguity) ('steps:'? END (ambiguity))* jobParameters+=JobParameter
	 *     steps+=Step END (ambiguity) ('steps:'? END (ambiguity))* runKW='pool:'
	 *     steps+=Step END (ambiguity) ('steps:'? END (ambiguity))* runKW='runs-on:'
	 
	 * </pre>
	 */
	protected void emit_Job_BEGINTerminalRuleCall_1_0_0_a(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     BEGIN+
	 *
	 * This ambiguous syntax occurs at:
	 *     steps+=Step END ((((ambiguity) 'steps:') | 'steps:')? END)* (ambiguity) nameKW='displayName:'
	 *     steps+=Step END ((((ambiguity) 'steps:') | 'steps:')? END)* (ambiguity) nameKW='name:'
	 
	 * </pre>
	 */
	protected void emit_Job_BEGINTerminalRuleCall_1_0_0_p(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     ':'?
	 *
	 * This ambiguous syntax occurs at:
	 *     name=StringValue (ambiguity) (BEGIN ('steps:'? END)*)+ nameKW='displayName:'
	 *     name=StringValue (ambiguity) (BEGIN ('steps:'? END)*)+ nameKW='name:'
	 *     name=StringValue (ambiguity) (BEGIN? ('steps:'? END)?)+ 'permissions:' BEGIN value+=KeyValuePairs
	 *     name=StringValue (ambiguity) (BEGIN? ('steps:'? END)?)+ 'permissions:' permission=Permission
	 *     name=StringValue (ambiguity) (BEGIN? ('steps:'? END)?)+ (rule end)
	 *     name=StringValue (ambiguity) (BEGIN? ('steps:'? END)?)+ dependKW='dependsOn:'
	 *     name=StringValue (ambiguity) (BEGIN? ('steps:'? END)?)+ dependKW='needs:'
	 *     name=StringValue (ambiguity) (BEGIN? ('steps:'? END)?)+ jobParameters+=JobParameter
	 *     name=StringValue (ambiguity) (BEGIN? ('steps:'? END)?)+ runKW='pool:'
	 *     name=StringValue (ambiguity) (BEGIN? ('steps:'? END)?)+ runKW='runs-on:'
	 *     name=StringValue (ambiguity) (BEGIN? END?)+ 'steps:' (END? (BEGIN? END?)+ 'steps:')* steps+=Step
	 
	 * </pre>
	 */
	protected void emit_Job_ColonKeyword_0_2_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     (BEGIN ('steps:'? END)*)+
	 *
	 * This ambiguous syntax occurs at:
	 *     jobName=StringValue (ambiguity) nameKW='displayName:'
	 *     jobName=StringValue (ambiguity) nameKW='name:'
	 *     jobParameters+=JobParameter (ambiguity) nameKW='displayName:'
	 *     jobParameters+=JobParameter (ambiguity) nameKW='name:'
	 *     name=StringValue ':'? (ambiguity) nameKW='displayName:'
	 *     name=StringValue ':'? (ambiguity) nameKW='name:'
	 *     permission=Permission (ambiguity) nameKW='displayName:'
	 *     permission=Permission (ambiguity) nameKW='name:'
	 *     poolDemands=HyphenParameters (END BEGIN*)+ (ambiguity) nameKW='displayName:'
	 *     poolDemands=HyphenParameters (END BEGIN*)+ (ambiguity) nameKW='name:'
	 *     poolDemands=StringValue (END BEGIN*)+ (ambiguity) nameKW='displayName:'
	 *     poolDemands=StringValue (END BEGIN*)+ (ambiguity) nameKW='name:'
	 *     poolName=StringValue (BEGIN | END)* (ambiguity) nameKW='displayName:'
	 *     poolName=StringValue (BEGIN | END)* (ambiguity) nameKW='name:'
	 *     poolVm=StringValue (BEGIN | END)* (ambiguity) nameKW='displayName:'
	 *     poolVm=StringValue (BEGIN | END)* (ambiguity) nameKW='name:'
	 *     references+=[Job|ID] ']' (ambiguity) nameKW='displayName:'
	 *     references+=[Job|ID] ']' (ambiguity) nameKW='name:'
	 *     references+=[Job|ID] (ambiguity) nameKW='displayName:'
	 *     references+=[Job|ID] (ambiguity) nameKW='name:'
	 *     runKW='pool:' (BEGIN | END)+ (ambiguity) nameKW='displayName:'
	 *     runKW='pool:' (BEGIN | END)+ (ambiguity) nameKW='name:'
	 *     value+=KeyValuePairs END (ambiguity) nameKW='displayName:'
	 *     value+=KeyValuePairs END (ambiguity) nameKW='name:'
	 *     vm=ArrayList (ambiguity) nameKW='displayName:'
	 *     vm=ArrayList (ambiguity) nameKW='name:'
	 *     vm=ID (ambiguity) nameKW='displayName:'
	 *     vm=ID (ambiguity) nameKW='name:'
	 
	 * </pre>
	 */
	protected void emit_Job___BEGINTerminalRuleCall_1_0_0___StepsKeyword_1_5_0_0_q_ENDTerminalRuleCall_1_5_1__a__p(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     (BEGIN? END?)+
	 *
	 * This ambiguous syntax occurs at:
	 *     jobName=StringValue (ambiguity) 'steps:' (END? (ambiguity) 'steps:')* steps+=Step
	 *     jobParameters+=JobParameter (ambiguity) 'steps:' (END? (ambiguity) 'steps:')* steps+=Step
	 *     name=StringValue ':'? (ambiguity) 'steps:' (END? (ambiguity) 'steps:')* steps+=Step
	 *     permission=Permission (ambiguity) 'steps:' (END? (ambiguity) 'steps:')* steps+=Step
	 *     poolDemands=HyphenParameters (END BEGIN*)+ (ambiguity) 'steps:' (END? (ambiguity) 'steps:')* steps+=Step
	 *     poolDemands=StringValue (END BEGIN*)+ (ambiguity) 'steps:' (END? (ambiguity) 'steps:')* steps+=Step
	 *     poolName=StringValue (BEGIN | END)* (ambiguity) 'steps:' (END? (ambiguity) 'steps:')* steps+=Step
	 *     poolVm=StringValue (BEGIN | END)* (ambiguity) 'steps:' (END? (ambiguity) 'steps:')* steps+=Step
	 *     references+=[Job|ID] ']' (ambiguity) 'steps:' (END? (ambiguity) 'steps:')* steps+=Step
	 *     references+=[Job|ID] (ambiguity) 'steps:' (END? (ambiguity) 'steps:')* steps+=Step
	 *     runKW='pool:' (BEGIN | END)+ (ambiguity) 'steps:' (END? (ambiguity) 'steps:')* steps+=Step
	 *     value+=KeyValuePairs END (ambiguity) 'steps:' (END? (ambiguity) 'steps:')* steps+=Step
	 *     vm=ArrayList (ambiguity) 'steps:' (END? (ambiguity) 'steps:')* steps+=Step
	 *     vm=ID (ambiguity) 'steps:' (END? (ambiguity) 'steps:')* steps+=Step
	 
	 * </pre>
	 */
	protected void emit_Job___BEGINTerminalRuleCall_1_0_0_q_ENDTerminalRuleCall_1_5_1_q__p(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     (BEGIN? ('steps:'? END)?)+
	 *
	 * This ambiguous syntax occurs at:
	 *     jobName=StringValue (ambiguity) 'permissions:' BEGIN value+=KeyValuePairs
	 *     jobName=StringValue (ambiguity) 'permissions:' permission=Permission
	 *     jobName=StringValue (ambiguity) (rule end)
	 *     jobName=StringValue (ambiguity) dependKW='dependsOn:'
	 *     jobName=StringValue (ambiguity) dependKW='needs:'
	 *     jobName=StringValue (ambiguity) jobParameters+=JobParameter
	 *     jobName=StringValue (ambiguity) runKW='pool:'
	 *     jobName=StringValue (ambiguity) runKW='runs-on:'
	 *     jobParameters+=JobParameter (ambiguity) 'permissions:' BEGIN value+=KeyValuePairs
	 *     jobParameters+=JobParameter (ambiguity) 'permissions:' permission=Permission
	 *     jobParameters+=JobParameter (ambiguity) (rule end)
	 *     jobParameters+=JobParameter (ambiguity) dependKW='dependsOn:'
	 *     jobParameters+=JobParameter (ambiguity) dependKW='needs:'
	 *     jobParameters+=JobParameter (ambiguity) jobParameters+=JobParameter
	 *     jobParameters+=JobParameter (ambiguity) runKW='pool:'
	 *     jobParameters+=JobParameter (ambiguity) runKW='runs-on:'
	 *     name=StringValue ':'? (ambiguity) 'permissions:' BEGIN value+=KeyValuePairs
	 *     name=StringValue ':'? (ambiguity) 'permissions:' permission=Permission
	 *     name=StringValue ':'? (ambiguity) (rule end)
	 *     name=StringValue ':'? (ambiguity) dependKW='dependsOn:'
	 *     name=StringValue ':'? (ambiguity) dependKW='needs:'
	 *     name=StringValue ':'? (ambiguity) jobParameters+=JobParameter
	 *     name=StringValue ':'? (ambiguity) runKW='pool:'
	 *     name=StringValue ':'? (ambiguity) runKW='runs-on:'
	 *     permission=Permission (ambiguity) 'permissions:' BEGIN value+=KeyValuePairs
	 *     permission=Permission (ambiguity) 'permissions:' permission=Permission
	 *     permission=Permission (ambiguity) (rule end)
	 *     permission=Permission (ambiguity) dependKW='dependsOn:'
	 *     permission=Permission (ambiguity) dependKW='needs:'
	 *     permission=Permission (ambiguity) jobParameters+=JobParameter
	 *     permission=Permission (ambiguity) runKW='pool:'
	 *     permission=Permission (ambiguity) runKW='runs-on:'
	 *     poolDemands=HyphenParameters (END BEGIN*)+ (ambiguity) 'permissions:' BEGIN value+=KeyValuePairs
	 *     poolDemands=HyphenParameters (END BEGIN*)+ (ambiguity) 'permissions:' permission=Permission
	 *     poolDemands=HyphenParameters (END BEGIN*)+ (ambiguity) (rule end)
	 *     poolDemands=HyphenParameters (END BEGIN*)+ (ambiguity) dependKW='dependsOn:'
	 *     poolDemands=HyphenParameters (END BEGIN*)+ (ambiguity) dependKW='needs:'
	 *     poolDemands=HyphenParameters (END BEGIN*)+ (ambiguity) jobParameters+=JobParameter
	 *     poolDemands=HyphenParameters (END BEGIN*)+ (ambiguity) runKW='pool:'
	 *     poolDemands=HyphenParameters (END BEGIN*)+ (ambiguity) runKW='runs-on:'
	 *     poolDemands=StringValue (END BEGIN*)+ (ambiguity) 'permissions:' BEGIN value+=KeyValuePairs
	 *     poolDemands=StringValue (END BEGIN*)+ (ambiguity) 'permissions:' permission=Permission
	 *     poolDemands=StringValue (END BEGIN*)+ (ambiguity) (rule end)
	 *     poolDemands=StringValue (END BEGIN*)+ (ambiguity) dependKW='dependsOn:'
	 *     poolDemands=StringValue (END BEGIN*)+ (ambiguity) dependKW='needs:'
	 *     poolDemands=StringValue (END BEGIN*)+ (ambiguity) jobParameters+=JobParameter
	 *     poolDemands=StringValue (END BEGIN*)+ (ambiguity) runKW='pool:'
	 *     poolDemands=StringValue (END BEGIN*)+ (ambiguity) runKW='runs-on:'
	 *     poolName=StringValue (BEGIN | END)* (ambiguity) 'permissions:' BEGIN value+=KeyValuePairs
	 *     poolName=StringValue (BEGIN | END)* (ambiguity) 'permissions:' permission=Permission
	 *     poolName=StringValue (BEGIN | END)* (ambiguity) (rule end)
	 *     poolName=StringValue (BEGIN | END)* (ambiguity) dependKW='dependsOn:'
	 *     poolName=StringValue (BEGIN | END)* (ambiguity) dependKW='needs:'
	 *     poolName=StringValue (BEGIN | END)* (ambiguity) jobParameters+=JobParameter
	 *     poolName=StringValue (BEGIN | END)* (ambiguity) runKW='pool:'
	 *     poolName=StringValue (BEGIN | END)* (ambiguity) runKW='runs-on:'
	 *     poolVm=StringValue (BEGIN | END)* (ambiguity) 'permissions:' BEGIN value+=KeyValuePairs
	 *     poolVm=StringValue (BEGIN | END)* (ambiguity) 'permissions:' permission=Permission
	 *     poolVm=StringValue (BEGIN | END)* (ambiguity) (rule end)
	 *     poolVm=StringValue (BEGIN | END)* (ambiguity) dependKW='dependsOn:'
	 *     poolVm=StringValue (BEGIN | END)* (ambiguity) dependKW='needs:'
	 *     poolVm=StringValue (BEGIN | END)* (ambiguity) jobParameters+=JobParameter
	 *     poolVm=StringValue (BEGIN | END)* (ambiguity) runKW='pool:'
	 *     poolVm=StringValue (BEGIN | END)* (ambiguity) runKW='runs-on:'
	 *     references+=[Job|ID] ']' (ambiguity) 'permissions:' BEGIN value+=KeyValuePairs
	 *     references+=[Job|ID] ']' (ambiguity) 'permissions:' permission=Permission
	 *     references+=[Job|ID] ']' (ambiguity) (rule end)
	 *     references+=[Job|ID] ']' (ambiguity) dependKW='dependsOn:'
	 *     references+=[Job|ID] ']' (ambiguity) dependKW='needs:'
	 *     references+=[Job|ID] ']' (ambiguity) jobParameters+=JobParameter
	 *     references+=[Job|ID] ']' (ambiguity) runKW='pool:'
	 *     references+=[Job|ID] ']' (ambiguity) runKW='runs-on:'
	 *     references+=[Job|ID] (ambiguity) 'permissions:' BEGIN value+=KeyValuePairs
	 *     references+=[Job|ID] (ambiguity) 'permissions:' permission=Permission
	 *     references+=[Job|ID] (ambiguity) (rule end)
	 *     references+=[Job|ID] (ambiguity) dependKW='dependsOn:'
	 *     references+=[Job|ID] (ambiguity) dependKW='needs:'
	 *     references+=[Job|ID] (ambiguity) jobParameters+=JobParameter
	 *     references+=[Job|ID] (ambiguity) runKW='pool:'
	 *     references+=[Job|ID] (ambiguity) runKW='runs-on:'
	 *     runKW='pool:' (BEGIN | END)+ (ambiguity) 'permissions:' BEGIN value+=KeyValuePairs
	 *     runKW='pool:' (BEGIN | END)+ (ambiguity) 'permissions:' permission=Permission
	 *     runKW='pool:' (BEGIN | END)+ (ambiguity) (rule end)
	 *     runKW='pool:' (BEGIN | END)+ (ambiguity) dependKW='dependsOn:'
	 *     runKW='pool:' (BEGIN | END)+ (ambiguity) dependKW='needs:'
	 *     runKW='pool:' (BEGIN | END)+ (ambiguity) jobParameters+=JobParameter
	 *     runKW='pool:' (BEGIN | END)+ (ambiguity) runKW='pool:'
	 *     runKW='pool:' (BEGIN | END)+ (ambiguity) runKW='runs-on:'
	 *     value+=KeyValuePairs END (ambiguity) 'permissions:' BEGIN value+=KeyValuePairs
	 *     value+=KeyValuePairs END (ambiguity) 'permissions:' permission=Permission
	 *     value+=KeyValuePairs END (ambiguity) (rule end)
	 *     value+=KeyValuePairs END (ambiguity) dependKW='dependsOn:'
	 *     value+=KeyValuePairs END (ambiguity) dependKW='needs:'
	 *     value+=KeyValuePairs END (ambiguity) jobParameters+=JobParameter
	 *     value+=KeyValuePairs END (ambiguity) runKW='pool:'
	 *     value+=KeyValuePairs END (ambiguity) runKW='runs-on:'
	 *     vm=ArrayList (ambiguity) 'permissions:' BEGIN value+=KeyValuePairs
	 *     vm=ArrayList (ambiguity) 'permissions:' permission=Permission
	 *     vm=ArrayList (ambiguity) (rule end)
	 *     vm=ArrayList (ambiguity) dependKW='dependsOn:'
	 *     vm=ArrayList (ambiguity) dependKW='needs:'
	 *     vm=ArrayList (ambiguity) jobParameters+=JobParameter
	 *     vm=ArrayList (ambiguity) runKW='pool:'
	 *     vm=ArrayList (ambiguity) runKW='runs-on:'
	 *     vm=ID (ambiguity) 'permissions:' BEGIN value+=KeyValuePairs
	 *     vm=ID (ambiguity) 'permissions:' permission=Permission
	 *     vm=ID (ambiguity) (rule end)
	 *     vm=ID (ambiguity) dependKW='dependsOn:'
	 *     vm=ID (ambiguity) dependKW='needs:'
	 *     vm=ID (ambiguity) jobParameters+=JobParameter
	 *     vm=ID (ambiguity) runKW='pool:'
	 *     vm=ID (ambiguity) runKW='runs-on:'
	 
	 * </pre>
	 */
	protected void emit_Job___BEGINTerminalRuleCall_1_0_0_q___StepsKeyword_1_5_0_0_q_ENDTerminalRuleCall_1_5_1__q__p(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     (BEGIN | END)*
	 *
	 * This ambiguous syntax occurs at:
	 *     poolName=StringValue (ambiguity) 'demands:' poolDemands=HyphenParameters
	 *     poolName=StringValue (ambiguity) 'demands:' poolDemands=StringValue
	 *     poolName=StringValue (ambiguity) (BEGIN ('steps:'? END)*)+ nameKW='displayName:'
	 *     poolName=StringValue (ambiguity) (BEGIN ('steps:'? END)*)+ nameKW='name:'
	 *     poolName=StringValue (ambiguity) (BEGIN? ('steps:'? END)?)+ 'permissions:' BEGIN value+=KeyValuePairs
	 *     poolName=StringValue (ambiguity) (BEGIN? ('steps:'? END)?)+ 'permissions:' permission=Permission
	 *     poolName=StringValue (ambiguity) (BEGIN? ('steps:'? END)?)+ (rule end)
	 *     poolName=StringValue (ambiguity) (BEGIN? ('steps:'? END)?)+ dependKW='dependsOn:'
	 *     poolName=StringValue (ambiguity) (BEGIN? ('steps:'? END)?)+ dependKW='needs:'
	 *     poolName=StringValue (ambiguity) (BEGIN? ('steps:'? END)?)+ jobParameters+=JobParameter
	 *     poolName=StringValue (ambiguity) (BEGIN? ('steps:'? END)?)+ runKW='pool:'
	 *     poolName=StringValue (ambiguity) (BEGIN? ('steps:'? END)?)+ runKW='runs-on:'
	 *     poolName=StringValue (ambiguity) (BEGIN? END?)+ 'steps:' (END? (BEGIN? END?)+ 'steps:')* steps+=Step
	 *     poolVm=StringValue (ambiguity) 'demands:' poolDemands=HyphenParameters
	 *     poolVm=StringValue (ambiguity) 'demands:' poolDemands=StringValue
	 *     poolVm=StringValue (ambiguity) (BEGIN ('steps:'? END)*)+ nameKW='displayName:'
	 *     poolVm=StringValue (ambiguity) (BEGIN ('steps:'? END)*)+ nameKW='name:'
	 *     poolVm=StringValue (ambiguity) (BEGIN? ('steps:'? END)?)+ 'permissions:' BEGIN value+=KeyValuePairs
	 *     poolVm=StringValue (ambiguity) (BEGIN? ('steps:'? END)?)+ 'permissions:' permission=Permission
	 *     poolVm=StringValue (ambiguity) (BEGIN? ('steps:'? END)?)+ (rule end)
	 *     poolVm=StringValue (ambiguity) (BEGIN? ('steps:'? END)?)+ dependKW='dependsOn:'
	 *     poolVm=StringValue (ambiguity) (BEGIN? ('steps:'? END)?)+ dependKW='needs:'
	 *     poolVm=StringValue (ambiguity) (BEGIN? ('steps:'? END)?)+ jobParameters+=JobParameter
	 *     poolVm=StringValue (ambiguity) (BEGIN? ('steps:'? END)?)+ runKW='pool:'
	 *     poolVm=StringValue (ambiguity) (BEGIN? ('steps:'? END)?)+ runKW='runs-on:'
	 *     poolVm=StringValue (ambiguity) (BEGIN? END?)+ 'steps:' (END? (BEGIN? END?)+ 'steps:')* steps+=Step
	 *     runKW='pool:' (ambiguity) 'demands:' poolDemands=HyphenParameters
	 *     runKW='pool:' (ambiguity) 'demands:' poolDemands=StringValue
	 
	 * </pre>
	 */
	protected void emit_Job___BEGINTerminalRuleCall_1_3_1_1_0_0_or_ENDTerminalRuleCall_1_3_1_1_1_1__a(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     (BEGIN | END)+
	 *
	 * This ambiguous syntax occurs at:
	 *     runKW='pool:' (ambiguity) (BEGIN ('steps:'? END)*)+ nameKW='displayName:'
	 *     runKW='pool:' (ambiguity) (BEGIN ('steps:'? END)*)+ nameKW='name:'
	 *     runKW='pool:' (ambiguity) (BEGIN? ('steps:'? END)?)+ 'permissions:' BEGIN value+=KeyValuePairs
	 *     runKW='pool:' (ambiguity) (BEGIN? ('steps:'? END)?)+ 'permissions:' permission=Permission
	 *     runKW='pool:' (ambiguity) (BEGIN? ('steps:'? END)?)+ (rule end)
	 *     runKW='pool:' (ambiguity) (BEGIN? ('steps:'? END)?)+ dependKW='dependsOn:'
	 *     runKW='pool:' (ambiguity) (BEGIN? ('steps:'? END)?)+ dependKW='needs:'
	 *     runKW='pool:' (ambiguity) (BEGIN? ('steps:'? END)?)+ jobParameters+=JobParameter
	 *     runKW='pool:' (ambiguity) (BEGIN? ('steps:'? END)?)+ runKW='pool:'
	 *     runKW='pool:' (ambiguity) (BEGIN? ('steps:'? END)?)+ runKW='runs-on:'
	 *     runKW='pool:' (ambiguity) (BEGIN? END?)+ 'steps:' (END? (BEGIN? END?)+ 'steps:')* steps+=Step
	 
	 * </pre>
	 */
	protected void emit_Job___BEGINTerminalRuleCall_1_3_1_1_0_0_or_ENDTerminalRuleCall_1_3_1_1_1_1__p(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     (END BEGIN*)+
	 *
	 * This ambiguous syntax occurs at:
	 *     poolDemands=HyphenParameters (ambiguity) 'demands:' poolDemands=HyphenParameters
	 *     poolDemands=HyphenParameters (ambiguity) 'demands:' poolDemands=StringValue
	 *     poolDemands=HyphenParameters (ambiguity) (BEGIN ('steps:'? END)*)+ nameKW='displayName:'
	 *     poolDemands=HyphenParameters (ambiguity) (BEGIN ('steps:'? END)*)+ nameKW='name:'
	 *     poolDemands=HyphenParameters (ambiguity) (BEGIN? ('steps:'? END)?)+ 'permissions:' BEGIN value+=KeyValuePairs
	 *     poolDemands=HyphenParameters (ambiguity) (BEGIN? ('steps:'? END)?)+ 'permissions:' permission=Permission
	 *     poolDemands=HyphenParameters (ambiguity) (BEGIN? ('steps:'? END)?)+ (rule end)
	 *     poolDemands=HyphenParameters (ambiguity) (BEGIN? ('steps:'? END)?)+ dependKW='dependsOn:'
	 *     poolDemands=HyphenParameters (ambiguity) (BEGIN? ('steps:'? END)?)+ dependKW='needs:'
	 *     poolDemands=HyphenParameters (ambiguity) (BEGIN? ('steps:'? END)?)+ jobParameters+=JobParameter
	 *     poolDemands=HyphenParameters (ambiguity) (BEGIN? ('steps:'? END)?)+ runKW='pool:'
	 *     poolDemands=HyphenParameters (ambiguity) (BEGIN? ('steps:'? END)?)+ runKW='runs-on:'
	 *     poolDemands=HyphenParameters (ambiguity) (BEGIN? END?)+ 'steps:' (END? (BEGIN? END?)+ 'steps:')* steps+=Step
	 *     poolDemands=StringValue (ambiguity) 'demands:' poolDemands=HyphenParameters
	 *     poolDemands=StringValue (ambiguity) 'demands:' poolDemands=StringValue
	 *     poolDemands=StringValue (ambiguity) (BEGIN ('steps:'? END)*)+ nameKW='displayName:'
	 *     poolDemands=StringValue (ambiguity) (BEGIN ('steps:'? END)*)+ nameKW='name:'
	 *     poolDemands=StringValue (ambiguity) (BEGIN? ('steps:'? END)?)+ 'permissions:' BEGIN value+=KeyValuePairs
	 *     poolDemands=StringValue (ambiguity) (BEGIN? ('steps:'? END)?)+ 'permissions:' permission=Permission
	 *     poolDemands=StringValue (ambiguity) (BEGIN? ('steps:'? END)?)+ (rule end)
	 *     poolDemands=StringValue (ambiguity) (BEGIN? ('steps:'? END)?)+ dependKW='dependsOn:'
	 *     poolDemands=StringValue (ambiguity) (BEGIN? ('steps:'? END)?)+ dependKW='needs:'
	 *     poolDemands=StringValue (ambiguity) (BEGIN? ('steps:'? END)?)+ jobParameters+=JobParameter
	 *     poolDemands=StringValue (ambiguity) (BEGIN? ('steps:'? END)?)+ runKW='pool:'
	 *     poolDemands=StringValue (ambiguity) (BEGIN? ('steps:'? END)?)+ runKW='runs-on:'
	 *     poolDemands=StringValue (ambiguity) (BEGIN? END?)+ 'steps:' (END? (BEGIN? END?)+ 'steps:')* steps+=Step
	 
	 * </pre>
	 */
	protected void emit_Job___ENDTerminalRuleCall_1_3_1_1_1_1_BEGINTerminalRuleCall_1_3_1_1_0_0_a__p(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     (END* BEGIN)*
	 *
	 * This ambiguous syntax occurs at:
	 *     poolName=StringValue (ambiguity) 'vmImage:' poolVm=StringValue
	 
	 * </pre>
	 */
	protected void emit_Job___ENDTerminalRuleCall_1_3_1_1_1_1_a_BEGINTerminalRuleCall_1_3_1_1_0_0__a(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     (END* BEGIN)+
	 *
	 * This ambiguous syntax occurs at:
	 *     poolName=StringValue (ambiguity) 'name:' poolName=StringValue
	 *     poolVm=StringValue (ambiguity) 'name:' poolName=StringValue
	 *     poolVm=StringValue (ambiguity) 'vmImage:' poolVm=StringValue
	 *     runKW='pool:' (ambiguity) 'name:' poolName=StringValue
	 *     runKW='pool:' (ambiguity) 'vmImage:' poolVm=StringValue
	 
	 * </pre>
	 */
	protected void emit_Job___ENDTerminalRuleCall_1_3_1_1_1_1_a_BEGINTerminalRuleCall_1_3_1_1_0_0__p(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     (END+ BEGIN+)+
	 *
	 * This ambiguous syntax occurs at:
	 *     poolDemands=HyphenParameters (ambiguity) 'name:' poolName=StringValue
	 *     poolDemands=HyphenParameters (ambiguity) 'vmImage:' poolVm=StringValue
	 *     poolDemands=StringValue (ambiguity) 'name:' poolName=StringValue
	 *     poolDemands=StringValue (ambiguity) 'vmImage:' poolVm=StringValue
	 
	 * </pre>
	 */
	protected void emit_Job___ENDTerminalRuleCall_1_3_1_1_1_1_p_BEGINTerminalRuleCall_1_3_1_1_0_0_p__p(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     (END? (BEGIN? END?)+ 'steps:')*
	 *
	 * This ambiguous syntax occurs at:
	 *     jobName=StringValue (BEGIN? END?)+ 'steps:' (ambiguity) steps+=Step
	 *     jobParameters+=JobParameter (BEGIN? END?)+ 'steps:' (ambiguity) steps+=Step
	 *     name=StringValue ':'? (BEGIN? END?)+ 'steps:' (ambiguity) steps+=Step
	 *     permission=Permission (BEGIN? END?)+ 'steps:' (ambiguity) steps+=Step
	 *     poolDemands=HyphenParameters (END BEGIN*)+ (BEGIN? END?)+ 'steps:' (ambiguity) steps+=Step
	 *     poolDemands=StringValue (END BEGIN*)+ (BEGIN? END?)+ 'steps:' (ambiguity) steps+=Step
	 *     poolName=StringValue (BEGIN | END)* (BEGIN? END?)+ 'steps:' (ambiguity) steps+=Step
	 *     poolVm=StringValue (BEGIN | END)* (BEGIN? END?)+ 'steps:' (ambiguity) steps+=Step
	 *     references+=[Job|ID] ']' (BEGIN? END?)+ 'steps:' (ambiguity) steps+=Step
	 *     references+=[Job|ID] (BEGIN? END?)+ 'steps:' (ambiguity) steps+=Step
	 *     runKW='pool:' (BEGIN | END)+ (BEGIN? END?)+ 'steps:' (ambiguity) steps+=Step
	 *     value+=KeyValuePairs END (BEGIN? END?)+ 'steps:' (ambiguity) steps+=Step
	 *     vm=ArrayList (BEGIN? END?)+ 'steps:' (ambiguity) steps+=Step
	 *     vm=ID (BEGIN? END?)+ 'steps:' (ambiguity) steps+=Step
	 
	 * </pre>
	 */
	protected void emit_Job___ENDTerminalRuleCall_1_5_1_q___BEGINTerminalRuleCall_1_0_0_q_ENDTerminalRuleCall_1_5_1_q__p_StepsKeyword_1_5_0_0__a(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     ('-' 'job:')?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) name=StringValue
	 
	 * </pre>
	 */
	protected void emit_Job___HyphenMinusKeyword_0_0_0_JobKeyword_0_0_1__q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     ('steps:'? END BEGIN*)*
	 *
	 * This ambiguous syntax occurs at:
	 *     steps+=Step END BEGIN* (ambiguity) 'permissions:' BEGIN value+=KeyValuePairs
	 *     steps+=Step END BEGIN* (ambiguity) 'permissions:' permission=Permission
	 *     steps+=Step END BEGIN* (ambiguity) (rule end)
	 *     steps+=Step END BEGIN* (ambiguity) dependKW='dependsOn:'
	 *     steps+=Step END BEGIN* (ambiguity) dependKW='needs:'
	 *     steps+=Step END BEGIN* (ambiguity) jobParameters+=JobParameter
	 *     steps+=Step END BEGIN* (ambiguity) runKW='pool:'
	 *     steps+=Step END BEGIN* (ambiguity) runKW='runs-on:'
	 
	 * </pre>
	 */
	protected void emit_Job___StepsKeyword_1_5_0_0_q_ENDTerminalRuleCall_1_5_1_BEGINTerminalRuleCall_1_0_0_a__a(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     ((END BEGIN*)+ 'steps:')*
	 *
	 * This ambiguous syntax occurs at:
	 *     steps+=Step (ambiguity) steps+=Step
	 
	 * </pre>
	 */
	protected void emit_Job_____ENDTerminalRuleCall_1_5_1_BEGINTerminalRuleCall_1_0_0_a__p_StepsKeyword_1_5_0_0__a(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     (((BEGIN+ 'steps:') | 'steps:')? END)*
	 *
	 * This ambiguous syntax occurs at:
	 *     steps+=Step END (ambiguity) BEGIN+ nameKW='displayName:'
	 *     steps+=Step END (ambiguity) BEGIN+ nameKW='name:'
	 
	 * </pre>
	 */
	protected void emit_Job_____StepsKeyword_1_5_0_0_or___BEGINTerminalRuleCall_1_0_0_p_StepsKeyword_1_5_0_0____q_ENDTerminalRuleCall_1_5_1__a(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     END*
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) BEGIN (END (ambiguity) BEGIN)* defaultValue+=HyphenKVP
	 *     (rule start) (ambiguity) BEGIN (END (ambiguity) BEGIN)* defaultValue+=IndentedKeyValues
	 *     (rule start) (ambiguity) BEGIN (END (ambiguity) BEGIN)* defaultValue+=KeyValuePairs
	 *     defaultValue+=HyphenKVP END (ambiguity) (BEGIN END (ambiguity))* '-' 'name:' name=ID
	 *     defaultValue+=HyphenKVP END (ambiguity) (BEGIN END (ambiguity))* 'default:' defaultValue+=INTV
	 *     defaultValue+=HyphenKVP END (ambiguity) (BEGIN END (ambiguity))* 'default:' defaultValue+=StringValue
	 *     defaultValue+=HyphenKVP END (ambiguity) (BEGIN END (ambiguity))* 'displayName:' displayName=StringValue
	 *     defaultValue+=HyphenKVP END (ambiguity) (BEGIN END (ambiguity))* 'values:' value=HyphenParameters
	 *     defaultValue+=HyphenKVP END (ambiguity) (BEGIN END (ambiguity))* (rule end)
	 *     defaultValue+=INTV (ambiguity) BEGIN (END (ambiguity) BEGIN)* defaultValue+=HyphenKVP
	 *     defaultValue+=INTV (ambiguity) BEGIN (END (ambiguity) BEGIN)* defaultValue+=IndentedKeyValues
	 *     defaultValue+=INTV (ambiguity) BEGIN (END (ambiguity) BEGIN)* defaultValue+=KeyValuePairs
	 *     defaultValue+=IndentedKeyValues END (ambiguity) (BEGIN END (ambiguity))* '-' 'name:' name=ID
	 *     defaultValue+=IndentedKeyValues END (ambiguity) (BEGIN END (ambiguity))* 'default:' defaultValue+=INTV
	 *     defaultValue+=IndentedKeyValues END (ambiguity) (BEGIN END (ambiguity))* 'default:' defaultValue+=StringValue
	 *     defaultValue+=IndentedKeyValues END (ambiguity) (BEGIN END (ambiguity))* 'displayName:' displayName=StringValue
	 *     defaultValue+=IndentedKeyValues END (ambiguity) (BEGIN END (ambiguity))* 'values:' value=HyphenParameters
	 *     defaultValue+=IndentedKeyValues END (ambiguity) (BEGIN END (ambiguity))* (rule end)
	 *     defaultValue+=KeyValuePairs END (ambiguity) (BEGIN END (ambiguity))* '-' 'name:' name=ID
	 *     defaultValue+=KeyValuePairs END (ambiguity) (BEGIN END (ambiguity))* 'default:' defaultValue+=INTV
	 *     defaultValue+=KeyValuePairs END (ambiguity) (BEGIN END (ambiguity))* 'default:' defaultValue+=StringValue
	 *     defaultValue+=KeyValuePairs END (ambiguity) (BEGIN END (ambiguity))* 'displayName:' displayName=StringValue
	 *     defaultValue+=KeyValuePairs END (ambiguity) (BEGIN END (ambiguity))* 'values:' value=HyphenParameters
	 *     defaultValue+=KeyValuePairs END (ambiguity) (BEGIN END (ambiguity))* (rule end)
	 *     defaultValue+=StringValue (ambiguity) BEGIN (END (ambiguity) BEGIN)* defaultValue+=HyphenKVP
	 *     defaultValue+=StringValue (ambiguity) BEGIN (END (ambiguity) BEGIN)* defaultValue+=IndentedKeyValues
	 *     defaultValue+=StringValue (ambiguity) BEGIN (END (ambiguity) BEGIN)* defaultValue+=KeyValuePairs
	 *     displayName=StringValue (ambiguity) BEGIN (END (ambiguity) BEGIN)* defaultValue+=HyphenKVP
	 *     displayName=StringValue (ambiguity) BEGIN (END (ambiguity) BEGIN)* defaultValue+=IndentedKeyValues
	 *     displayName=StringValue (ambiguity) BEGIN (END (ambiguity) BEGIN)* defaultValue+=KeyValuePairs
	 *     name=ID BEGIN (ambiguity) BEGIN (END (ambiguity) BEGIN)* defaultValue+=HyphenKVP
	 *     name=ID BEGIN (ambiguity) BEGIN (END (ambiguity) BEGIN)* defaultValue+=IndentedKeyValues
	 *     name=ID BEGIN (ambiguity) BEGIN (END (ambiguity) BEGIN)* defaultValue+=KeyValuePairs
	 *     type=ID (ambiguity) BEGIN (END (ambiguity) BEGIN)* defaultValue+=HyphenKVP
	 *     type=ID (ambiguity) BEGIN (END (ambiguity) BEGIN)* defaultValue+=IndentedKeyValues
	 *     type=ID (ambiguity) BEGIN (END (ambiguity) BEGIN)* defaultValue+=KeyValuePairs
	 
	 * </pre>
	 */
	protected void emit_Parameter_ENDTerminalRuleCall_3_1_a(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     END+
	 *
	 * This ambiguous syntax occurs at:
	 *     value=HyphenParameters (ambiguity) BEGIN (((END (ambiguity)) | END) BEGIN)* defaultValue+=HyphenKVP
	 *     value=HyphenParameters (ambiguity) BEGIN (((END (ambiguity)) | END) BEGIN)* defaultValue+=IndentedKeyValues
	 *     value=HyphenParameters (ambiguity) BEGIN (((END (ambiguity)) | END) BEGIN)* defaultValue+=KeyValuePairs
	 
	 * </pre>
	 */
	protected void emit_Parameter_ENDTerminalRuleCall_3_1_p(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     (BEGIN END END*)*
	 *
	 * This ambiguous syntax occurs at:
	 *     defaultValue+=HyphenKVP END END* (ambiguity) '-' 'name:' name=ID
	 *     defaultValue+=HyphenKVP END END* (ambiguity) 'default:' defaultValue+=INTV
	 *     defaultValue+=HyphenKVP END END* (ambiguity) 'default:' defaultValue+=StringValue
	 *     defaultValue+=HyphenKVP END END* (ambiguity) 'displayName:' displayName=StringValue
	 *     defaultValue+=HyphenKVP END END* (ambiguity) 'values:' value=HyphenParameters
	 *     defaultValue+=HyphenKVP END END* (ambiguity) (rule end)
	 *     defaultValue+=IndentedKeyValues END END* (ambiguity) '-' 'name:' name=ID
	 *     defaultValue+=IndentedKeyValues END END* (ambiguity) 'default:' defaultValue+=INTV
	 *     defaultValue+=IndentedKeyValues END END* (ambiguity) 'default:' defaultValue+=StringValue
	 *     defaultValue+=IndentedKeyValues END END* (ambiguity) 'displayName:' displayName=StringValue
	 *     defaultValue+=IndentedKeyValues END END* (ambiguity) 'values:' value=HyphenParameters
	 *     defaultValue+=IndentedKeyValues END END* (ambiguity) (rule end)
	 *     defaultValue+=KeyValuePairs END END* (ambiguity) '-' 'name:' name=ID
	 *     defaultValue+=KeyValuePairs END END* (ambiguity) 'default:' defaultValue+=INTV
	 *     defaultValue+=KeyValuePairs END END* (ambiguity) 'default:' defaultValue+=StringValue
	 *     defaultValue+=KeyValuePairs END END* (ambiguity) 'displayName:' displayName=StringValue
	 *     defaultValue+=KeyValuePairs END END* (ambiguity) 'values:' value=HyphenParameters
	 *     defaultValue+=KeyValuePairs END END* (ambiguity) (rule end)
	 
	 * </pre>
	 */
	protected void emit_Parameter___BEGINTerminalRuleCall_2_1_0_ENDTerminalRuleCall_2_1_2_ENDTerminalRuleCall_3_1_a__a(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     (END END* BEGIN)*
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) END* BEGIN (ambiguity) defaultValue+=HyphenKVP
	 *     (rule start) END* BEGIN (ambiguity) defaultValue+=IndentedKeyValues
	 *     (rule start) END* BEGIN (ambiguity) defaultValue+=KeyValuePairs
	 *     defaultValue+=HyphenKVP (ambiguity) defaultValue+=HyphenKVP
	 *     defaultValue+=HyphenKVP (ambiguity) defaultValue+=IndentedKeyValues
	 *     defaultValue+=HyphenKVP (ambiguity) defaultValue+=KeyValuePairs
	 *     defaultValue+=INTV END* BEGIN (ambiguity) defaultValue+=HyphenKVP
	 *     defaultValue+=INTV END* BEGIN (ambiguity) defaultValue+=IndentedKeyValues
	 *     defaultValue+=INTV END* BEGIN (ambiguity) defaultValue+=KeyValuePairs
	 *     defaultValue+=IndentedKeyValues (ambiguity) defaultValue+=HyphenKVP
	 *     defaultValue+=IndentedKeyValues (ambiguity) defaultValue+=IndentedKeyValues
	 *     defaultValue+=IndentedKeyValues (ambiguity) defaultValue+=KeyValuePairs
	 *     defaultValue+=KeyValuePairs (ambiguity) defaultValue+=HyphenKVP
	 *     defaultValue+=KeyValuePairs (ambiguity) defaultValue+=IndentedKeyValues
	 *     defaultValue+=KeyValuePairs (ambiguity) defaultValue+=KeyValuePairs
	 *     defaultValue+=StringValue END* BEGIN (ambiguity) defaultValue+=HyphenKVP
	 *     defaultValue+=StringValue END* BEGIN (ambiguity) defaultValue+=IndentedKeyValues
	 *     defaultValue+=StringValue END* BEGIN (ambiguity) defaultValue+=KeyValuePairs
	 *     displayName=StringValue END* BEGIN (ambiguity) defaultValue+=HyphenKVP
	 *     displayName=StringValue END* BEGIN (ambiguity) defaultValue+=IndentedKeyValues
	 *     displayName=StringValue END* BEGIN (ambiguity) defaultValue+=KeyValuePairs
	 *     name=ID BEGIN END* BEGIN (ambiguity) defaultValue+=HyphenKVP
	 *     name=ID BEGIN END* BEGIN (ambiguity) defaultValue+=IndentedKeyValues
	 *     name=ID BEGIN END* BEGIN (ambiguity) defaultValue+=KeyValuePairs
	 *     type=ID END* BEGIN (ambiguity) defaultValue+=HyphenKVP
	 *     type=ID END* BEGIN (ambiguity) defaultValue+=IndentedKeyValues
	 *     type=ID END* BEGIN (ambiguity) defaultValue+=KeyValuePairs
	 
	 * </pre>
	 */
	protected void emit_Parameter___ENDTerminalRuleCall_2_1_2_ENDTerminalRuleCall_3_1_a_BEGINTerminalRuleCall_2_1_0__a(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     (END (BEGIN END)*)+
	 *
	 * This ambiguous syntax occurs at:
	 *     value=HyphenParameters (ambiguity) '-' 'name:' name=ID
	 *     value=HyphenParameters (ambiguity) 'default:' defaultValue+=INTV
	 *     value=HyphenParameters (ambiguity) 'default:' defaultValue+=StringValue
	 *     value=HyphenParameters (ambiguity) 'displayName:' displayName=StringValue
	 *     value=HyphenParameters (ambiguity) 'values:' value=HyphenParameters
	 *     value=HyphenParameters (ambiguity) (rule end)
	 
	 * </pre>
	 */
	protected void emit_Parameter___ENDTerminalRuleCall_3_1___BEGINTerminalRuleCall_2_1_0_ENDTerminalRuleCall_2_1_2__a__p(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     ((BEGIN END) | END)+
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) (rule start)
	 
	 * </pre>
	 */
	protected void emit_Parameter___ENDTerminalRuleCall_3_1_or___BEGINTerminalRuleCall_2_1_0_ENDTerminalRuleCall_2_1_2____p(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     (END? (BEGIN END)?)+
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) '-' 'name:' name=ID
	 *     (rule start) (ambiguity) 'default:' defaultValue+=INTV
	 *     (rule start) (ambiguity) 'default:' defaultValue+=StringValue
	 *     (rule start) (ambiguity) 'displayName:' displayName=StringValue
	 *     (rule start) (ambiguity) 'values:' value=HyphenParameters
	 *     (rule start) (ambiguity) (rule start)
	 *     defaultValue+=INTV (ambiguity) '-' 'name:' name=ID
	 *     defaultValue+=INTV (ambiguity) 'default:' defaultValue+=INTV
	 *     defaultValue+=INTV (ambiguity) 'default:' defaultValue+=StringValue
	 *     defaultValue+=INTV (ambiguity) 'displayName:' displayName=StringValue
	 *     defaultValue+=INTV (ambiguity) 'values:' value=HyphenParameters
	 *     defaultValue+=INTV (ambiguity) (rule end)
	 *     defaultValue+=StringValue (ambiguity) '-' 'name:' name=ID
	 *     defaultValue+=StringValue (ambiguity) 'default:' defaultValue+=INTV
	 *     defaultValue+=StringValue (ambiguity) 'default:' defaultValue+=StringValue
	 *     defaultValue+=StringValue (ambiguity) 'displayName:' displayName=StringValue
	 *     defaultValue+=StringValue (ambiguity) 'values:' value=HyphenParameters
	 *     defaultValue+=StringValue (ambiguity) (rule end)
	 *     displayName=StringValue (ambiguity) '-' 'name:' name=ID
	 *     displayName=StringValue (ambiguity) 'default:' defaultValue+=INTV
	 *     displayName=StringValue (ambiguity) 'default:' defaultValue+=StringValue
	 *     displayName=StringValue (ambiguity) 'displayName:' displayName=StringValue
	 *     displayName=StringValue (ambiguity) 'values:' value=HyphenParameters
	 *     displayName=StringValue (ambiguity) (rule end)
	 *     name=ID BEGIN (ambiguity) '-' 'name:' name=ID
	 *     name=ID BEGIN (ambiguity) 'default:' defaultValue+=INTV
	 *     name=ID BEGIN (ambiguity) 'default:' defaultValue+=StringValue
	 *     name=ID BEGIN (ambiguity) 'displayName:' displayName=StringValue
	 *     name=ID BEGIN (ambiguity) 'values:' value=HyphenParameters
	 *     name=ID BEGIN (ambiguity) (rule end)
	 *     type=ID (ambiguity) '-' 'name:' name=ID
	 *     type=ID (ambiguity) 'default:' defaultValue+=INTV
	 *     type=ID (ambiguity) 'default:' defaultValue+=StringValue
	 *     type=ID (ambiguity) 'displayName:' displayName=StringValue
	 *     type=ID (ambiguity) 'values:' value=HyphenParameters
	 *     type=ID (ambiguity) (rule end)
	 
	 * </pre>
	 */
	protected void emit_Parameter___ENDTerminalRuleCall_3_1_q___BEGINTerminalRuleCall_2_1_0_ENDTerminalRuleCall_2_1_2__q__p(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     (((END END+) | END) BEGIN)*
	 *
	 * This ambiguous syntax occurs at:
	 *     value=HyphenParameters END+ BEGIN (ambiguity) defaultValue+=HyphenKVP
	 *     value=HyphenParameters END+ BEGIN (ambiguity) defaultValue+=IndentedKeyValues
	 *     value=HyphenParameters END+ BEGIN (ambiguity) defaultValue+=KeyValuePairs
	 
	 * </pre>
	 */
	protected void emit_Parameter_____ENDTerminalRuleCall_2_1_2_or___ENDTerminalRuleCall_2_1_2_ENDTerminalRuleCall_3_1_p_____BEGINTerminalRuleCall_2_1_0__a(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     (
	  *         BEGIN | 
	  *         (
	  *             (BEGIN END)? 
	  *             (
	  *                 'on:' 
	  *                 (
	  *                     'defaults:' 
	  *                     BEGIN 
	  *                     'run:' 
	  *                     BEGIN 
	  *                     END 
	  *                     END
	  *                 )*
	  *             )+ 
	  *             BEGIN 
	  *             (
	  *                 END 
	  *                 (
	  *                     'on:' 
	  *                     (
	  *                         'defaults:' 
	  *                         BEGIN 
	  *                         'run:' 
	  *                         BEGIN 
	  *                         END 
	  *                         END
	  *                     )*
	  *                 )+ 
	  *                 BEGIN
	  *             )*
	  *         )
	  *     )
	 *
	 * This ambiguous syntax occurs at:
	 *     triggers+=Event ']' (ambiguity) triggers+=Event
	 *     triggers+=Event (ambiguity) triggers+=Event
	 
	 * </pre>
	 */
	protected void emit_Pipeline_BEGINTerminalRuleCall_0_5_0_2_0_or_____BEGINTerminalRuleCall_0_5_0_2_0_ENDTerminalRuleCall_0_5_0_2_2__q___OnKeyword_0_5_0_0___DefaultsKeyword_0_3_0_BEGINTerminalRuleCall_0_3_1_RunKeyword_0_3_2_BEGINTerminalRuleCall_0_3_3_ENDTerminalRuleCall_0_3_5_ENDTerminalRuleCall_0_3_6__a__p_BEGINTerminalRuleCall_0_5_0_2_0___ENDTerminalRuleCall_0_5_0_2_2___OnKeyword_0_5_0_0___DefaultsKeyword_0_3_0_BEGINTerminalRuleCall_0_3_1_RunKeyword_0_3_2_BEGINTerminalRuleCall_0_3_3_ENDTerminalRuleCall_0_3_5_ENDTerminalRuleCall_0_3_6__a__p_BEGINTerminalRuleCall_0_5_0_2_0__a__(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     'on:'*
	 *
	 * This ambiguous syntax occurs at:
	 *     (
	 *         triggers+=Event 
	 *         END 
	 *         ((ambiguity) BEGIN END)* 
	 *         (ambiguity) 
	 *         ('defaults:' BEGIN 'run:' BEGIN END END (ambiguity))* 
	 *         ('defaults:' BEGIN 'run:' BEGIN END END (ambiguity) BEGIN END ((ambiguity) BEGIN END)* (ambiguity) ('defaults:' BEGIN 'run:' BEGIN END END (ambiguity))*)* 
	 *         'defaults:' 
	 *         BEGIN 
	 *         'run:' 
	 *         BEGIN 
	 *         'shell:' 
	 *         default_shell_for_all_jobs=StringValue
	 *     )
	 *     (
	 *         triggers+=Event 
	 *         END 
	 *         ((ambiguity) BEGIN END)* 
	 *         (ambiguity) 
	 *         ('defaults:' BEGIN 'run:' BEGIN END END (ambiguity))* 
	 *         ('defaults:' BEGIN 'run:' BEGIN END END (ambiguity) BEGIN END ((ambiguity) BEGIN END)* (ambiguity) ('defaults:' BEGIN 'run:' BEGIN END END (ambiguity))*)* 
	 *         'defaults:' 
	 *         BEGIN 
	 *         'run:' 
	 *         BEGIN 
	 *         'working-directory:' 
	 *         default_wd_for_all_jobs=StringValue
	 *     )
	 
	 * </pre>
	 */
	protected void emit_Pipeline_OnKeyword_0_5_0_0_a(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     (
	  *         BEGIN 
	  *         END 
	  *         (
	  *             'on:' 
	  *             (
	  *                 'defaults:' 
	  *                 BEGIN 
	  *                 'run:' 
	  *                 BEGIN 
	  *                 END 
	  *                 END
	  *             )*
	  *         )+
	  *     )*
	 *
	 * This ambiguous syntax occurs at:
	 *     triggers+=Event END ('on:' ('defaults:' BEGIN 'run:' BEGIN END END)*)+ (ambiguity) '[' triggers+=Event
	 *     triggers+=Event END ('on:' ('defaults:' BEGIN 'run:' BEGIN END END)*)+ (ambiguity) triggers+=Event
	 
	 * </pre>
	 */
	protected void emit_Pipeline___BEGINTerminalRuleCall_0_5_0_2_0_ENDTerminalRuleCall_0_5_0_2_2___OnKeyword_0_5_0_0___DefaultsKeyword_0_3_0_BEGINTerminalRuleCall_0_3_1_RunKeyword_0_3_2_BEGINTerminalRuleCall_0_3_3_ENDTerminalRuleCall_0_3_5_ENDTerminalRuleCall_0_3_6__a__p__a(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     (
	  *         'defaults:' 
	  *         BEGIN 
	  *         'run:' 
	  *         BEGIN 
	  *         END 
	  *         END 
	  *         'on:'* 
	  *         BEGIN 
	  *         END 
	  *         ('on:'* BEGIN END)* 
	  *         'on:'* 
	  *         (
	  *             'defaults:' 
	  *             BEGIN 
	  *             'run:' 
	  *             BEGIN 
	  *             END 
	  *             END 
	  *             'on:'*
	  *         )*
	  *     )*
	 *
	 * This ambiguous syntax occurs at:
	 *     triggers+=Event END ('on:'* BEGIN END)* 'on:'* ('defaults:' BEGIN 'run:' BEGIN END END 'on:'*)* (ambiguity) 'defaults:' BEGIN 'run:' BEGIN 'shell:' default_shell_for_all_jobs=StringValue
	 *     triggers+=Event END ('on:'* BEGIN END)* 'on:'* ('defaults:' BEGIN 'run:' BEGIN END END 'on:'*)* (ambiguity) 'defaults:' BEGIN 'run:' BEGIN 'working-directory:' default_wd_for_all_jobs=StringValue
	 
	 * </pre>
	 */
	protected void emit_Pipeline___DefaultsKeyword_0_3_0_BEGINTerminalRuleCall_0_3_1_RunKeyword_0_3_2_BEGINTerminalRuleCall_0_3_3_ENDTerminalRuleCall_0_3_5_ENDTerminalRuleCall_0_3_6_OnKeyword_0_5_0_0_a_BEGINTerminalRuleCall_0_5_0_2_0_ENDTerminalRuleCall_0_5_0_2_2___OnKeyword_0_5_0_0_a_BEGINTerminalRuleCall_0_5_0_2_0_ENDTerminalRuleCall_0_5_0_2_2__a_OnKeyword_0_5_0_0_a___DefaultsKeyword_0_3_0_BEGINTerminalRuleCall_0_3_1_RunKeyword_0_3_2_BEGINTerminalRuleCall_0_3_3_ENDTerminalRuleCall_0_3_5_ENDTerminalRuleCall_0_3_6_OnKeyword_0_5_0_0_a__a__a(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     (
	  *         'defaults:' 
	  *         BEGIN 
	  *         'run:' 
	  *         BEGIN 
	  *         END 
	  *         END 
	  *         'on:'*
	  *     )*
	 *
	 * This ambiguous syntax occurs at:
	 *     (
	 *         triggers+=Event 
	 *         END 
	 *         ('on:'* BEGIN END)* 
	 *         'on:'* 
	 *         (ambiguity) 
	 *         ('defaults:' BEGIN 'run:' BEGIN END END 'on:'* BEGIN END ('on:'* BEGIN END)* 'on:'* (ambiguity))* 
	 *         'defaults:' 
	 *         BEGIN 
	 *         'run:' 
	 *         BEGIN 
	 *         'shell:' 
	 *         default_shell_for_all_jobs=StringValue
	 *     )
	 *     (
	 *         triggers+=Event 
	 *         END 
	 *         ('on:'* BEGIN END)* 
	 *         'on:'* 
	 *         (ambiguity) 
	 *         ('defaults:' BEGIN 'run:' BEGIN END END 'on:'* BEGIN END ('on:'* BEGIN END)* 'on:'* (ambiguity))* 
	 *         'defaults:' 
	 *         BEGIN 
	 *         'run:' 
	 *         BEGIN 
	 *         'working-directory:' 
	 *         default_wd_for_all_jobs=StringValue
	 *     )
	 
	 * </pre>
	 */
	protected void emit_Pipeline___DefaultsKeyword_0_3_0_BEGINTerminalRuleCall_0_3_1_RunKeyword_0_3_2_BEGINTerminalRuleCall_0_3_3_ENDTerminalRuleCall_0_3_5_ENDTerminalRuleCall_0_3_6_OnKeyword_0_5_0_0_a__a(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     (
	  *         'defaults:' 
	  *         BEGIN 
	  *         'run:' 
	  *         BEGIN 
	  *         END 
	  *         END 
	  *         ('on:' (BEGIN END)?)*
	  *     )*
	 *
	 * This ambiguous syntax occurs at:
	 *     default_shell_for_all_jobs=StringValue END END ('on:' (BEGIN END)?)* (ambiguity) 'cancel-in-progress:' cancelProgress=EXPRESSION
	 *     default_shell_for_all_jobs=StringValue END END ('on:' (BEGIN END)?)* (ambiguity) 'cancel-in-progress:' cancelProgress=ID
	 *     default_shell_for_all_jobs=StringValue END END ('on:' (BEGIN END)?)* (ambiguity) 'cancel-in-progress:' cancelProgress=StringValue
	 *     default_shell_for_all_jobs=StringValue END END ('on:' (BEGIN END)?)* (ambiguity) 'concurrency:' BEGIN 'group:' group=EXPRESSION
	 *     default_shell_for_all_jobs=StringValue END END ('on:' (BEGIN END)?)* (ambiguity) 'concurrency:' BEGIN 'group:' group=StringValue
	 *     default_shell_for_all_jobs=StringValue END END ('on:' (BEGIN END)?)* (ambiguity) 'name:' name=StringValue
	 *     default_shell_for_all_jobs=StringValue END END ('on:' (BEGIN END)?)* (ambiguity) 'run-name:' run_name=StringValue
	 *     default_shell_for_all_jobs=StringValue END END ('on:' (BEGIN END)?)* (ambiguity) jobOrStage='jobs:'
	 *     default_shell_for_all_jobs=StringValue END END ('on:' (BEGIN END)?)* (ambiguity) jobOrStage='stages:'
	 *     default_shell_for_all_jobs=StringValue END END ('on:' (BEGIN END)?)* (ambiguity) pipelineConfigurations+=Configuration
	 *     default_shell_for_all_jobs=StringValue END END ('on:' (BEGIN END)?)* (ambiguity) triggers+=Event
	 *     default_wd_for_all_jobs=StringValue END END ('on:' (BEGIN END)?)* (ambiguity) 'cancel-in-progress:' cancelProgress=EXPRESSION
	 *     default_wd_for_all_jobs=StringValue END END ('on:' (BEGIN END)?)* (ambiguity) 'cancel-in-progress:' cancelProgress=ID
	 *     default_wd_for_all_jobs=StringValue END END ('on:' (BEGIN END)?)* (ambiguity) 'cancel-in-progress:' cancelProgress=StringValue
	 *     default_wd_for_all_jobs=StringValue END END ('on:' (BEGIN END)?)* (ambiguity) 'concurrency:' BEGIN 'group:' group=EXPRESSION
	 *     default_wd_for_all_jobs=StringValue END END ('on:' (BEGIN END)?)* (ambiguity) 'concurrency:' BEGIN 'group:' group=StringValue
	 *     default_wd_for_all_jobs=StringValue END END ('on:' (BEGIN END)?)* (ambiguity) 'name:' name=StringValue
	 *     default_wd_for_all_jobs=StringValue END END ('on:' (BEGIN END)?)* (ambiguity) 'run-name:' run_name=StringValue
	 *     default_wd_for_all_jobs=StringValue END END ('on:' (BEGIN END)?)* (ambiguity) jobOrStage='jobs:'
	 *     default_wd_for_all_jobs=StringValue END END ('on:' (BEGIN END)?)* (ambiguity) jobOrStage='stages:'
	 *     default_wd_for_all_jobs=StringValue END END ('on:' (BEGIN END)?)* (ambiguity) pipelineConfigurations+=Configuration
	 *     default_wd_for_all_jobs=StringValue END END ('on:' (BEGIN END)?)* (ambiguity) triggers+=Event
	 
	 * </pre>
	 */
	protected void emit_Pipeline___DefaultsKeyword_0_3_0_BEGINTerminalRuleCall_0_3_1_RunKeyword_0_3_2_BEGINTerminalRuleCall_0_3_3_ENDTerminalRuleCall_0_3_5_ENDTerminalRuleCall_0_3_6___OnKeyword_0_5_0_0___BEGINTerminalRuleCall_0_5_0_2_0_ENDTerminalRuleCall_0_5_0_2_2__q__a__a(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     (
	  *         END 
	  *         END 
	  *         ('on:' (BEGIN END)?)* 
	  *         'defaults:' 
	  *         BEGIN 
	  *         'run:' 
	  *         BEGIN
	  *     )*
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) ('on:' (BEGIN END)?)* 'defaults:' BEGIN 'run:' BEGIN (ambiguity) 'shell:' default_shell_for_all_jobs=StringValue
	 *     (rule start) ('on:' (BEGIN END)?)* 'defaults:' BEGIN 'run:' BEGIN (ambiguity) 'working-directory:' default_wd_for_all_jobs=StringValue
	 *     cancelProgress=EXPRESSION END ('on:' (BEGIN END)?)* 'defaults:' BEGIN 'run:' BEGIN (ambiguity) 'shell:' default_shell_for_all_jobs=StringValue
	 *     cancelProgress=EXPRESSION END ('on:' (BEGIN END)?)* 'defaults:' BEGIN 'run:' BEGIN (ambiguity) 'working-directory:' default_wd_for_all_jobs=StringValue
	 *     cancelProgress=ID END ('on:' (BEGIN END)?)* 'defaults:' BEGIN 'run:' BEGIN (ambiguity) 'shell:' default_shell_for_all_jobs=StringValue
	 *     cancelProgress=ID END ('on:' (BEGIN END)?)* 'defaults:' BEGIN 'run:' BEGIN (ambiguity) 'working-directory:' default_wd_for_all_jobs=StringValue
	 *     cancelProgress=StringValue END ('on:' (BEGIN END)?)* 'defaults:' BEGIN 'run:' BEGIN (ambiguity) 'shell:' default_shell_for_all_jobs=StringValue
	 *     cancelProgress=StringValue END ('on:' (BEGIN END)?)* 'defaults:' BEGIN 'run:' BEGIN (ambiguity) 'working-directory:' default_wd_for_all_jobs=StringValue
	 *     default_shell_for_all_jobs=StringValue (ambiguity) 'shell:' default_shell_for_all_jobs=StringValue
	 *     default_shell_for_all_jobs=StringValue (ambiguity) 'working-directory:' default_wd_for_all_jobs=StringValue
	 *     default_wd_for_all_jobs=StringValue (ambiguity) 'shell:' default_shell_for_all_jobs=StringValue
	 *     default_wd_for_all_jobs=StringValue (ambiguity) 'working-directory:' default_wd_for_all_jobs=StringValue
	 *     group=EXPRESSION ('on:' (BEGIN END)?)* 'defaults:' BEGIN 'run:' BEGIN (ambiguity) 'shell:' default_shell_for_all_jobs=StringValue
	 *     group=EXPRESSION ('on:' (BEGIN END)?)* 'defaults:' BEGIN 'run:' BEGIN (ambiguity) 'working-directory:' default_wd_for_all_jobs=StringValue
	 *     group=StringValue ('on:' (BEGIN END)?)* 'defaults:' BEGIN 'run:' BEGIN (ambiguity) 'shell:' default_shell_for_all_jobs=StringValue
	 *     group=StringValue ('on:' (BEGIN END)?)* 'defaults:' BEGIN 'run:' BEGIN (ambiguity) 'working-directory:' default_wd_for_all_jobs=StringValue
	 *     name=StringValue ('on:' (BEGIN END)?)* 'defaults:' BEGIN 'run:' BEGIN (ambiguity) 'shell:' default_shell_for_all_jobs=StringValue
	 *     name=StringValue ('on:' (BEGIN END)?)* 'defaults:' BEGIN 'run:' BEGIN (ambiguity) 'working-directory:' default_wd_for_all_jobs=StringValue
	 *     pipelineConfigurations+=Configuration ('on:' (BEGIN END)?)* 'defaults:' BEGIN 'run:' BEGIN (ambiguity) 'shell:' default_shell_for_all_jobs=StringValue
	 *     pipelineConfigurations+=Configuration ('on:' (BEGIN END)?)* 'defaults:' BEGIN 'run:' BEGIN (ambiguity) 'working-directory:' default_wd_for_all_jobs=StringValue
	 *     run_name=StringValue ('on:' (BEGIN END)?)* 'defaults:' BEGIN 'run:' BEGIN (ambiguity) 'shell:' default_shell_for_all_jobs=StringValue
	 *     run_name=StringValue ('on:' (BEGIN END)?)* 'defaults:' BEGIN 'run:' BEGIN (ambiguity) 'working-directory:' default_wd_for_all_jobs=StringValue
	 *     triggers+=Event ']' ('on:' (BEGIN END)?)* 'defaults:' BEGIN 'run:' BEGIN (ambiguity) 'shell:' default_shell_for_all_jobs=StringValue
	 *     triggers+=Event ']' ('on:' (BEGIN END)?)* 'defaults:' BEGIN 'run:' BEGIN (ambiguity) 'working-directory:' default_wd_for_all_jobs=StringValue
	 *     triggers+=Event ('on:' (BEGIN END)?)* 'defaults:' BEGIN 'run:' BEGIN (ambiguity) 'shell:' default_shell_for_all_jobs=StringValue
	 *     triggers+=Event ('on:' (BEGIN END)?)* 'defaults:' BEGIN 'run:' BEGIN (ambiguity) 'working-directory:' default_wd_for_all_jobs=StringValue
	 
	 * </pre>
	 */
	protected void emit_Pipeline___ENDTerminalRuleCall_0_3_5_ENDTerminalRuleCall_0_3_6___OnKeyword_0_5_0_0___BEGINTerminalRuleCall_0_5_0_2_0_ENDTerminalRuleCall_0_5_0_2_2__q__a_DefaultsKeyword_0_3_0_BEGINTerminalRuleCall_0_3_1_RunKeyword_0_3_2_BEGINTerminalRuleCall_0_3_3__a(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     (
	  *         END 
	  *         (
	  *             'on:' 
	  *             (
	  *                 'defaults:' 
	  *                 BEGIN 
	  *                 'run:' 
	  *                 BEGIN 
	  *                 END 
	  *                 END
	  *             )*
	  *         )+ 
	  *         BEGIN
	  *     )*
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) ('on:' ('defaults:' BEGIN 'run:' BEGIN END END)*)+ BEGIN (ambiguity) triggers+=Event
	 *     cancelProgress=EXPRESSION END ('on:' ('defaults:' BEGIN 'run:' BEGIN END END)*)+ BEGIN (ambiguity) triggers+=Event
	 *     cancelProgress=ID END ('on:' ('defaults:' BEGIN 'run:' BEGIN END END)*)+ BEGIN (ambiguity) triggers+=Event
	 *     cancelProgress=StringValue END ('on:' ('defaults:' BEGIN 'run:' BEGIN END END)*)+ BEGIN (ambiguity) triggers+=Event
	 *     group=EXPRESSION ('on:' ('defaults:' BEGIN 'run:' BEGIN END END)*)+ BEGIN (ambiguity) triggers+=Event
	 *     group=StringValue ('on:' ('defaults:' BEGIN 'run:' BEGIN END END)*)+ BEGIN (ambiguity) triggers+=Event
	 *     name=StringValue ('on:' ('defaults:' BEGIN 'run:' BEGIN END END)*)+ BEGIN (ambiguity) triggers+=Event
	 *     pipelineConfigurations+=Configuration ('on:' ('defaults:' BEGIN 'run:' BEGIN END END)*)+ BEGIN (ambiguity) triggers+=Event
	 *     run_name=StringValue ('on:' ('defaults:' BEGIN 'run:' BEGIN END END)*)+ BEGIN (ambiguity) triggers+=Event
	 *     triggers+=Event ('on:' ('defaults:' BEGIN 'run:' BEGIN END END)*)+ BEGIN (ambiguity) triggers+=Event
	 *     triggers+=Event (ambiguity) triggers+=Event
	 
	 * </pre>
	 */
	protected void emit_Pipeline___ENDTerminalRuleCall_0_5_0_2_2___OnKeyword_0_5_0_0___DefaultsKeyword_0_3_0_BEGINTerminalRuleCall_0_3_1_RunKeyword_0_3_2_BEGINTerminalRuleCall_0_3_3_ENDTerminalRuleCall_0_3_5_ENDTerminalRuleCall_0_3_6__a__p_BEGINTerminalRuleCall_0_5_0_2_0__a(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     (
	  *         'on:' 
	  *         (BEGIN END)? 
	  *         (
	  *             'defaults:' 
	  *             BEGIN 
	  *             'run:' 
	  *             BEGIN 
	  *             END 
	  *             END
	  *         )*
	  *     )+
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) '[' triggers+=Event
	 *     (rule start) (ambiguity) triggers+=Event
	 *     cancelProgress=EXPRESSION END (ambiguity) '[' triggers+=Event
	 *     cancelProgress=EXPRESSION END (ambiguity) triggers+=Event
	 *     cancelProgress=ID END (ambiguity) '[' triggers+=Event
	 *     cancelProgress=ID END (ambiguity) triggers+=Event
	 *     cancelProgress=StringValue END (ambiguity) '[' triggers+=Event
	 *     cancelProgress=StringValue END (ambiguity) triggers+=Event
	 *     default_shell_for_all_jobs=StringValue END END (ambiguity) '[' triggers+=Event
	 *     default_shell_for_all_jobs=StringValue END END (ambiguity) triggers+=Event
	 *     default_wd_for_all_jobs=StringValue END END (ambiguity) '[' triggers+=Event
	 *     default_wd_for_all_jobs=StringValue END END (ambiguity) triggers+=Event
	 *     group=EXPRESSION (ambiguity) '[' triggers+=Event
	 *     group=EXPRESSION (ambiguity) triggers+=Event
	 *     group=StringValue (ambiguity) '[' triggers+=Event
	 *     group=StringValue (ambiguity) triggers+=Event
	 *     name=StringValue (ambiguity) '[' triggers+=Event
	 *     name=StringValue (ambiguity) triggers+=Event
	 *     pipelineConfigurations+=Configuration (ambiguity) '[' triggers+=Event
	 *     pipelineConfigurations+=Configuration (ambiguity) triggers+=Event
	 *     run_name=StringValue (ambiguity) '[' triggers+=Event
	 *     run_name=StringValue (ambiguity) triggers+=Event
	 *     triggers+=Event ']' (ambiguity) '[' triggers+=Event
	 *     triggers+=Event ']' (ambiguity) triggers+=Event
	 *     triggers+=Event (ambiguity) '[' triggers+=Event
	 *     triggers+=Event (ambiguity) triggers+=Event
	 
	 * </pre>
	 */
	protected void emit_Pipeline___OnKeyword_0_5_0_0___BEGINTerminalRuleCall_0_5_0_2_0_ENDTerminalRuleCall_0_5_0_2_2__q___DefaultsKeyword_0_3_0_BEGINTerminalRuleCall_0_3_1_RunKeyword_0_3_2_BEGINTerminalRuleCall_0_3_3_ENDTerminalRuleCall_0_3_5_ENDTerminalRuleCall_0_3_6__a__p(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     ('on:' (BEGIN END)?)*
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) 'defaults:' BEGIN 'run:' BEGIN (END END (ambiguity) 'defaults:' BEGIN 'run:' BEGIN)* 'shell:' default_shell_for_all_jobs=StringValue
	 *     (rule start) (ambiguity) 'defaults:' BEGIN 'run:' BEGIN (END END (ambiguity) 'defaults:' BEGIN 'run:' BEGIN)* 'working-directory:' default_wd_for_all_jobs=StringValue
	 *     cancelProgress=EXPRESSION END (ambiguity) 'defaults:' BEGIN 'run:' BEGIN (END END (ambiguity) 'defaults:' BEGIN 'run:' BEGIN)* 'shell:' default_shell_for_all_jobs=StringValue
	 *     cancelProgress=EXPRESSION END (ambiguity) 'defaults:' BEGIN 'run:' BEGIN (END END (ambiguity) 'defaults:' BEGIN 'run:' BEGIN)* 'working-directory:' default_wd_for_all_jobs=StringValue
	 *     cancelProgress=ID END (ambiguity) 'defaults:' BEGIN 'run:' BEGIN (END END (ambiguity) 'defaults:' BEGIN 'run:' BEGIN)* 'shell:' default_shell_for_all_jobs=StringValue
	 *     cancelProgress=ID END (ambiguity) 'defaults:' BEGIN 'run:' BEGIN (END END (ambiguity) 'defaults:' BEGIN 'run:' BEGIN)* 'working-directory:' default_wd_for_all_jobs=StringValue
	 *     cancelProgress=StringValue END (ambiguity) 'defaults:' BEGIN 'run:' BEGIN (END END (ambiguity) 'defaults:' BEGIN 'run:' BEGIN)* 'shell:' default_shell_for_all_jobs=StringValue
	 *     cancelProgress=StringValue END (ambiguity) 'defaults:' BEGIN 'run:' BEGIN (END END (ambiguity) 'defaults:' BEGIN 'run:' BEGIN)* 'working-directory:' default_wd_for_all_jobs=StringValue
	 *     default_shell_for_all_jobs=StringValue END END (ambiguity) ('defaults:' BEGIN 'run:' BEGIN END END (ambiguity))* 'cancel-in-progress:' cancelProgress=EXPRESSION
	 *     default_shell_for_all_jobs=StringValue END END (ambiguity) ('defaults:' BEGIN 'run:' BEGIN END END (ambiguity))* 'cancel-in-progress:' cancelProgress=ID
	 *     default_shell_for_all_jobs=StringValue END END (ambiguity) ('defaults:' BEGIN 'run:' BEGIN END END (ambiguity))* 'cancel-in-progress:' cancelProgress=StringValue
	 *     default_shell_for_all_jobs=StringValue END END (ambiguity) ('defaults:' BEGIN 'run:' BEGIN END END (ambiguity))* 'concurrency:' BEGIN 'group:' group=EXPRESSION
	 *     default_shell_for_all_jobs=StringValue END END (ambiguity) ('defaults:' BEGIN 'run:' BEGIN END END (ambiguity))* 'concurrency:' BEGIN 'group:' group=StringValue
	 *     default_shell_for_all_jobs=StringValue END END (ambiguity) ('defaults:' BEGIN 'run:' BEGIN END END (ambiguity))* 'name:' name=StringValue
	 *     default_shell_for_all_jobs=StringValue END END (ambiguity) ('defaults:' BEGIN 'run:' BEGIN END END (ambiguity))* 'run-name:' run_name=StringValue
	 *     default_shell_for_all_jobs=StringValue END END (ambiguity) ('defaults:' BEGIN 'run:' BEGIN END END (ambiguity))* jobOrStage='jobs:'
	 *     default_shell_for_all_jobs=StringValue END END (ambiguity) ('defaults:' BEGIN 'run:' BEGIN END END (ambiguity))* jobOrStage='stages:'
	 *     default_shell_for_all_jobs=StringValue END END (ambiguity) ('defaults:' BEGIN 'run:' BEGIN END END (ambiguity))* pipelineConfigurations+=Configuration
	 *     default_shell_for_all_jobs=StringValue END END (ambiguity) ('defaults:' BEGIN 'run:' BEGIN END END (ambiguity))* triggers+=Event
	 *     default_wd_for_all_jobs=StringValue END END (ambiguity) ('defaults:' BEGIN 'run:' BEGIN END END (ambiguity))* 'cancel-in-progress:' cancelProgress=EXPRESSION
	 *     default_wd_for_all_jobs=StringValue END END (ambiguity) ('defaults:' BEGIN 'run:' BEGIN END END (ambiguity))* 'cancel-in-progress:' cancelProgress=ID
	 *     default_wd_for_all_jobs=StringValue END END (ambiguity) ('defaults:' BEGIN 'run:' BEGIN END END (ambiguity))* 'cancel-in-progress:' cancelProgress=StringValue
	 *     default_wd_for_all_jobs=StringValue END END (ambiguity) ('defaults:' BEGIN 'run:' BEGIN END END (ambiguity))* 'concurrency:' BEGIN 'group:' group=EXPRESSION
	 *     default_wd_for_all_jobs=StringValue END END (ambiguity) ('defaults:' BEGIN 'run:' BEGIN END END (ambiguity))* 'concurrency:' BEGIN 'group:' group=StringValue
	 *     default_wd_for_all_jobs=StringValue END END (ambiguity) ('defaults:' BEGIN 'run:' BEGIN END END (ambiguity))* 'name:' name=StringValue
	 *     default_wd_for_all_jobs=StringValue END END (ambiguity) ('defaults:' BEGIN 'run:' BEGIN END END (ambiguity))* 'run-name:' run_name=StringValue
	 *     default_wd_for_all_jobs=StringValue END END (ambiguity) ('defaults:' BEGIN 'run:' BEGIN END END (ambiguity))* jobOrStage='jobs:'
	 *     default_wd_for_all_jobs=StringValue END END (ambiguity) ('defaults:' BEGIN 'run:' BEGIN END END (ambiguity))* jobOrStage='stages:'
	 *     default_wd_for_all_jobs=StringValue END END (ambiguity) ('defaults:' BEGIN 'run:' BEGIN END END (ambiguity))* pipelineConfigurations+=Configuration
	 *     default_wd_for_all_jobs=StringValue END END (ambiguity) ('defaults:' BEGIN 'run:' BEGIN END END (ambiguity))* triggers+=Event
	 *     group=EXPRESSION (ambiguity) 'defaults:' BEGIN 'run:' BEGIN (END END (ambiguity) 'defaults:' BEGIN 'run:' BEGIN)* 'shell:' default_shell_for_all_jobs=StringValue
	 *     group=EXPRESSION (ambiguity) 'defaults:' BEGIN 'run:' BEGIN (END END (ambiguity) 'defaults:' BEGIN 'run:' BEGIN)* 'working-directory:' default_wd_for_all_jobs=StringValue
	 *     group=StringValue (ambiguity) 'defaults:' BEGIN 'run:' BEGIN (END END (ambiguity) 'defaults:' BEGIN 'run:' BEGIN)* 'shell:' default_shell_for_all_jobs=StringValue
	 *     group=StringValue (ambiguity) 'defaults:' BEGIN 'run:' BEGIN (END END (ambiguity) 'defaults:' BEGIN 'run:' BEGIN)* 'working-directory:' default_wd_for_all_jobs=StringValue
	 *     name=StringValue (ambiguity) 'defaults:' BEGIN 'run:' BEGIN (END END (ambiguity) 'defaults:' BEGIN 'run:' BEGIN)* 'shell:' default_shell_for_all_jobs=StringValue
	 *     name=StringValue (ambiguity) 'defaults:' BEGIN 'run:' BEGIN (END END (ambiguity) 'defaults:' BEGIN 'run:' BEGIN)* 'working-directory:' default_wd_for_all_jobs=StringValue
	 *     pipelineConfigurations+=Configuration (ambiguity) 'defaults:' BEGIN 'run:' BEGIN (END END (ambiguity) 'defaults:' BEGIN 'run:' BEGIN)* 'shell:' default_shell_for_all_jobs=StringValue
	 *     pipelineConfigurations+=Configuration (ambiguity) 'defaults:' BEGIN 'run:' BEGIN (END END (ambiguity) 'defaults:' BEGIN 'run:' BEGIN)* 'working-directory:' default_wd_for_all_jobs=StringValue
	 *     run_name=StringValue (ambiguity) 'defaults:' BEGIN 'run:' BEGIN (END END (ambiguity) 'defaults:' BEGIN 'run:' BEGIN)* 'shell:' default_shell_for_all_jobs=StringValue
	 *     run_name=StringValue (ambiguity) 'defaults:' BEGIN 'run:' BEGIN (END END (ambiguity) 'defaults:' BEGIN 'run:' BEGIN)* 'working-directory:' default_wd_for_all_jobs=StringValue
	 *     triggers+=Event ']' (ambiguity) 'defaults:' BEGIN 'run:' BEGIN (END END (ambiguity) 'defaults:' BEGIN 'run:' BEGIN)* 'shell:' default_shell_for_all_jobs=StringValue
	 *     triggers+=Event ']' (ambiguity) 'defaults:' BEGIN 'run:' BEGIN (END END (ambiguity) 'defaults:' BEGIN 'run:' BEGIN)* 'working-directory:' default_wd_for_all_jobs=StringValue
	 *     triggers+=Event (ambiguity) 'defaults:' BEGIN 'run:' BEGIN (END END (ambiguity) 'defaults:' BEGIN 'run:' BEGIN)* 'shell:' default_shell_for_all_jobs=StringValue
	 *     triggers+=Event (ambiguity) 'defaults:' BEGIN 'run:' BEGIN (END END (ambiguity) 'defaults:' BEGIN 'run:' BEGIN)* 'working-directory:' default_wd_for_all_jobs=StringValue
	 
	 * </pre>
	 */
	protected void emit_Pipeline___OnKeyword_0_5_0_0___BEGINTerminalRuleCall_0_5_0_2_0_ENDTerminalRuleCall_0_5_0_2_2__q__a(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     (
	  *         ('on:' (BEGIN END)?)+ | 
	  *         (
	  *             (('on:' (BEGIN END)?)+ (BEGIN END)?)? 
	  *             (
	  *                 'defaults:' 
	  *                 BEGIN 
	  *                 'run:' 
	  *                 BEGIN 
	  *                 END 
	  *                 END
	  *             )+ 
	  *             ('on:' (BEGIN END)?)+ 
	  *             (
	  *                 (BEGIN END)? 
	  *                 (
	  *                     'defaults:' 
	  *                     BEGIN 
	  *                     'run:' 
	  *                     BEGIN 
	  *                     END 
	  *                     END
	  *                 )+ 
	  *                 ('on:' (BEGIN END)?)+
	  *             )*
	  *         )
	  *     )
	 *
	 * This ambiguous syntax occurs at:
	 *     default_shell_for_all_jobs=StringValue END END (ambiguity) BEGIN triggers+=Event
	 *     default_wd_for_all_jobs=StringValue END END (ambiguity) BEGIN triggers+=Event
	 
	 * </pre>
	 */
	protected void emit_Pipeline___OnKeyword_0_5_0_0___BEGINTerminalRuleCall_0_5_0_2_0_ENDTerminalRuleCall_0_5_0_2_2__q__p_or_______OnKeyword_0_5_0_0___BEGINTerminalRuleCall_0_5_0_2_0_ENDTerminalRuleCall_0_5_0_2_2__q__p___BEGINTerminalRuleCall_0_5_0_2_0_ENDTerminalRuleCall_0_5_0_2_2__q__q___DefaultsKeyword_0_3_0_BEGINTerminalRuleCall_0_3_1_RunKeyword_0_3_2_BEGINTerminalRuleCall_0_3_3_ENDTerminalRuleCall_0_3_5_ENDTerminalRuleCall_0_3_6__p___OnKeyword_0_5_0_0___BEGINTerminalRuleCall_0_5_0_2_0_ENDTerminalRuleCall_0_5_0_2_2__q__p_____BEGINTerminalRuleCall_0_5_0_2_0_ENDTerminalRuleCall_0_5_0_2_2__q___DefaultsKeyword_0_3_0_BEGINTerminalRuleCall_0_3_1_RunKeyword_0_3_2_BEGINTerminalRuleCall_0_3_3_ENDTerminalRuleCall_0_3_5_ENDTerminalRuleCall_0_3_6__p___OnKeyword_0_5_0_0___BEGINTerminalRuleCall_0_5_0_2_0_ENDTerminalRuleCall_0_5_0_2_2__q__p__a__(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     (
	  *         'on:' 
	  *         (
	  *             'defaults:' 
	  *             BEGIN 
	  *             'run:' 
	  *             BEGIN 
	  *             END 
	  *             END
	  *         )* 
	  *         (BEGIN END)?
	  *     )*
	 *
	 * This ambiguous syntax occurs at:
	 *     triggers+=Event END (ambiguity) 'cancel-in-progress:' cancelProgress=EXPRESSION
	 *     triggers+=Event END (ambiguity) 'cancel-in-progress:' cancelProgress=ID
	 *     triggers+=Event END (ambiguity) 'cancel-in-progress:' cancelProgress=StringValue
	 *     triggers+=Event END (ambiguity) 'concurrency:' BEGIN 'group:' group=EXPRESSION
	 *     triggers+=Event END (ambiguity) 'concurrency:' BEGIN 'group:' group=StringValue
	 *     triggers+=Event END (ambiguity) 'name:' name=StringValue
	 *     triggers+=Event END (ambiguity) 'run-name:' run_name=StringValue
	 *     triggers+=Event END (ambiguity) jobOrStage='jobs:'
	 *     triggers+=Event END (ambiguity) jobOrStage='stages:'
	 *     triggers+=Event END (ambiguity) pipelineConfigurations+=Configuration
	 *     triggers+=Event END (ambiguity) triggers+=Event
	 
	 * </pre>
	 */
	protected void emit_Pipeline___OnKeyword_0_5_0_0___DefaultsKeyword_0_3_0_BEGINTerminalRuleCall_0_3_1_RunKeyword_0_3_2_BEGINTerminalRuleCall_0_3_3_ENDTerminalRuleCall_0_3_5_ENDTerminalRuleCall_0_3_6__a___BEGINTerminalRuleCall_0_5_0_2_0_ENDTerminalRuleCall_0_5_0_2_2__q__a(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     (
	  *         'on:' 
	  *         (
	  *             'defaults:' 
	  *             BEGIN 
	  *             'run:' 
	  *             BEGIN 
	  *             END 
	  *             END
	  *         )*
	  *     )+
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) BEGIN (END (ambiguity) BEGIN)* triggers+=Event
	 *     cancelProgress=EXPRESSION END (ambiguity) BEGIN (END (ambiguity) BEGIN)* triggers+=Event
	 *     cancelProgress=ID END (ambiguity) BEGIN (END (ambiguity) BEGIN)* triggers+=Event
	 *     cancelProgress=StringValue END (ambiguity) BEGIN (END (ambiguity) BEGIN)* triggers+=Event
	 *     group=EXPRESSION (ambiguity) BEGIN (END (ambiguity) BEGIN)* triggers+=Event
	 *     group=StringValue (ambiguity) BEGIN (END (ambiguity) BEGIN)* triggers+=Event
	 *     name=StringValue (ambiguity) BEGIN (END (ambiguity) BEGIN)* triggers+=Event
	 *     pipelineConfigurations+=Configuration (ambiguity) BEGIN (END (ambiguity) BEGIN)* triggers+=Event
	 *     run_name=StringValue (ambiguity) BEGIN (END (ambiguity) BEGIN)* triggers+=Event
	 *     triggers+=Event (ambiguity) BEGIN (END (ambiguity) BEGIN)* triggers+=Event
	 *     triggers+=Event END (ambiguity) (BEGIN END (ambiguity))* '[' triggers+=Event
	 *     triggers+=Event END (ambiguity) (BEGIN END (ambiguity))* triggers+=Event
	 
	 * </pre>
	 */
	protected void emit_Pipeline___OnKeyword_0_5_0_0___DefaultsKeyword_0_3_0_BEGINTerminalRuleCall_0_3_1_RunKeyword_0_3_2_BEGINTerminalRuleCall_0_3_3_ENDTerminalRuleCall_0_3_5_ENDTerminalRuleCall_0_3_6__a__p(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     ('on:'* BEGIN END)*
	 *
	 * This ambiguous syntax occurs at:
	 *     (
	 *         triggers+=Event 
	 *         END 
	 *         (ambiguity) 
	 *         'on:'* 
	 *         ('defaults:' BEGIN 'run:' BEGIN END END 'on:'*)* 
	 *         ('defaults:' BEGIN 'run:' BEGIN END END 'on:'* BEGIN END (ambiguity) 'on:'* ('defaults:' BEGIN 'run:' BEGIN END END 'on:'*)*)* 
	 *         'defaults:' 
	 *         BEGIN 
	 *         'run:' 
	 *         BEGIN 
	 *         'shell:' 
	 *         default_shell_for_all_jobs=StringValue
	 *     )
	 *     (
	 *         triggers+=Event 
	 *         END 
	 *         (ambiguity) 
	 *         'on:'* 
	 *         ('defaults:' BEGIN 'run:' BEGIN END END 'on:'*)* 
	 *         ('defaults:' BEGIN 'run:' BEGIN END END 'on:'* BEGIN END (ambiguity) 'on:'* ('defaults:' BEGIN 'run:' BEGIN END END 'on:'*)*)* 
	 *         'defaults:' 
	 *         BEGIN 
	 *         'run:' 
	 *         BEGIN 
	 *         'working-directory:' 
	 *         default_wd_for_all_jobs=StringValue
	 *     )
	 
	 * </pre>
	 */
	protected void emit_Pipeline___OnKeyword_0_5_0_0_a_BEGINTerminalRuleCall_0_5_0_2_0_ENDTerminalRuleCall_0_5_0_2_2__a(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     (
	  *         ('on:' (BEGIN END)?)? 
	  *         (
	  *             'defaults:' 
	  *             BEGIN 
	  *             'run:' 
	  *             BEGIN 
	  *             END 
	  *             END
	  *         )?
	  *     )+
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) 'cancel-in-progress:' cancelProgress=EXPRESSION
	 *     (rule start) (ambiguity) 'cancel-in-progress:' cancelProgress=ID
	 *     (rule start) (ambiguity) 'cancel-in-progress:' cancelProgress=StringValue
	 *     (rule start) (ambiguity) 'concurrency:' BEGIN 'group:' group=EXPRESSION
	 *     (rule start) (ambiguity) 'concurrency:' BEGIN 'group:' group=StringValue
	 *     (rule start) (ambiguity) 'name:' name=StringValue
	 *     (rule start) (ambiguity) 'run-name:' run_name=StringValue
	 *     (rule start) (ambiguity) jobOrStage='jobs:'
	 *     (rule start) (ambiguity) jobOrStage='stages:'
	 *     (rule start) (ambiguity) pipelineConfigurations+=Configuration
	 *     (rule start) (ambiguity) triggers+=Event
	 *     cancelProgress=EXPRESSION END (ambiguity) 'cancel-in-progress:' cancelProgress=EXPRESSION
	 *     cancelProgress=EXPRESSION END (ambiguity) 'cancel-in-progress:' cancelProgress=ID
	 *     cancelProgress=EXPRESSION END (ambiguity) 'cancel-in-progress:' cancelProgress=StringValue
	 *     cancelProgress=EXPRESSION END (ambiguity) 'concurrency:' BEGIN 'group:' group=EXPRESSION
	 *     cancelProgress=EXPRESSION END (ambiguity) 'concurrency:' BEGIN 'group:' group=StringValue
	 *     cancelProgress=EXPRESSION END (ambiguity) 'name:' name=StringValue
	 *     cancelProgress=EXPRESSION END (ambiguity) 'run-name:' run_name=StringValue
	 *     cancelProgress=EXPRESSION END (ambiguity) jobOrStage='jobs:'
	 *     cancelProgress=EXPRESSION END (ambiguity) jobOrStage='stages:'
	 *     cancelProgress=EXPRESSION END (ambiguity) pipelineConfigurations+=Configuration
	 *     cancelProgress=EXPRESSION END (ambiguity) triggers+=Event
	 *     cancelProgress=ID END (ambiguity) 'cancel-in-progress:' cancelProgress=EXPRESSION
	 *     cancelProgress=ID END (ambiguity) 'cancel-in-progress:' cancelProgress=ID
	 *     cancelProgress=ID END (ambiguity) 'cancel-in-progress:' cancelProgress=StringValue
	 *     cancelProgress=ID END (ambiguity) 'concurrency:' BEGIN 'group:' group=EXPRESSION
	 *     cancelProgress=ID END (ambiguity) 'concurrency:' BEGIN 'group:' group=StringValue
	 *     cancelProgress=ID END (ambiguity) 'name:' name=StringValue
	 *     cancelProgress=ID END (ambiguity) 'run-name:' run_name=StringValue
	 *     cancelProgress=ID END (ambiguity) jobOrStage='jobs:'
	 *     cancelProgress=ID END (ambiguity) jobOrStage='stages:'
	 *     cancelProgress=ID END (ambiguity) pipelineConfigurations+=Configuration
	 *     cancelProgress=ID END (ambiguity) triggers+=Event
	 *     cancelProgress=StringValue END (ambiguity) 'cancel-in-progress:' cancelProgress=EXPRESSION
	 *     cancelProgress=StringValue END (ambiguity) 'cancel-in-progress:' cancelProgress=ID
	 *     cancelProgress=StringValue END (ambiguity) 'cancel-in-progress:' cancelProgress=StringValue
	 *     cancelProgress=StringValue END (ambiguity) 'concurrency:' BEGIN 'group:' group=EXPRESSION
	 *     cancelProgress=StringValue END (ambiguity) 'concurrency:' BEGIN 'group:' group=StringValue
	 *     cancelProgress=StringValue END (ambiguity) 'name:' name=StringValue
	 *     cancelProgress=StringValue END (ambiguity) 'run-name:' run_name=StringValue
	 *     cancelProgress=StringValue END (ambiguity) jobOrStage='jobs:'
	 *     cancelProgress=StringValue END (ambiguity) jobOrStage='stages:'
	 *     cancelProgress=StringValue END (ambiguity) pipelineConfigurations+=Configuration
	 *     cancelProgress=StringValue END (ambiguity) triggers+=Event
	 *     group=EXPRESSION (ambiguity) 'cancel-in-progress:' cancelProgress=EXPRESSION
	 *     group=EXPRESSION (ambiguity) 'cancel-in-progress:' cancelProgress=ID
	 *     group=EXPRESSION (ambiguity) 'cancel-in-progress:' cancelProgress=StringValue
	 *     group=EXPRESSION (ambiguity) 'concurrency:' BEGIN 'group:' group=EXPRESSION
	 *     group=EXPRESSION (ambiguity) 'concurrency:' BEGIN 'group:' group=StringValue
	 *     group=EXPRESSION (ambiguity) 'name:' name=StringValue
	 *     group=EXPRESSION (ambiguity) 'run-name:' run_name=StringValue
	 *     group=EXPRESSION (ambiguity) jobOrStage='jobs:'
	 *     group=EXPRESSION (ambiguity) jobOrStage='stages:'
	 *     group=EXPRESSION (ambiguity) pipelineConfigurations+=Configuration
	 *     group=EXPRESSION (ambiguity) triggers+=Event
	 *     group=StringValue (ambiguity) 'cancel-in-progress:' cancelProgress=EXPRESSION
	 *     group=StringValue (ambiguity) 'cancel-in-progress:' cancelProgress=ID
	 *     group=StringValue (ambiguity) 'cancel-in-progress:' cancelProgress=StringValue
	 *     group=StringValue (ambiguity) 'concurrency:' BEGIN 'group:' group=EXPRESSION
	 *     group=StringValue (ambiguity) 'concurrency:' BEGIN 'group:' group=StringValue
	 *     group=StringValue (ambiguity) 'name:' name=StringValue
	 *     group=StringValue (ambiguity) 'run-name:' run_name=StringValue
	 *     group=StringValue (ambiguity) jobOrStage='jobs:'
	 *     group=StringValue (ambiguity) jobOrStage='stages:'
	 *     group=StringValue (ambiguity) pipelineConfigurations+=Configuration
	 *     group=StringValue (ambiguity) triggers+=Event
	 *     name=StringValue (ambiguity) 'cancel-in-progress:' cancelProgress=EXPRESSION
	 *     name=StringValue (ambiguity) 'cancel-in-progress:' cancelProgress=ID
	 *     name=StringValue (ambiguity) 'cancel-in-progress:' cancelProgress=StringValue
	 *     name=StringValue (ambiguity) 'concurrency:' BEGIN 'group:' group=EXPRESSION
	 *     name=StringValue (ambiguity) 'concurrency:' BEGIN 'group:' group=StringValue
	 *     name=StringValue (ambiguity) 'name:' name=StringValue
	 *     name=StringValue (ambiguity) 'run-name:' run_name=StringValue
	 *     name=StringValue (ambiguity) jobOrStage='jobs:'
	 *     name=StringValue (ambiguity) jobOrStage='stages:'
	 *     name=StringValue (ambiguity) pipelineConfigurations+=Configuration
	 *     name=StringValue (ambiguity) triggers+=Event
	 *     pipelineConfigurations+=Configuration (ambiguity) 'cancel-in-progress:' cancelProgress=EXPRESSION
	 *     pipelineConfigurations+=Configuration (ambiguity) 'cancel-in-progress:' cancelProgress=ID
	 *     pipelineConfigurations+=Configuration (ambiguity) 'cancel-in-progress:' cancelProgress=StringValue
	 *     pipelineConfigurations+=Configuration (ambiguity) 'concurrency:' BEGIN 'group:' group=EXPRESSION
	 *     pipelineConfigurations+=Configuration (ambiguity) 'concurrency:' BEGIN 'group:' group=StringValue
	 *     pipelineConfigurations+=Configuration (ambiguity) 'name:' name=StringValue
	 *     pipelineConfigurations+=Configuration (ambiguity) 'run-name:' run_name=StringValue
	 *     pipelineConfigurations+=Configuration (ambiguity) jobOrStage='jobs:'
	 *     pipelineConfigurations+=Configuration (ambiguity) jobOrStage='stages:'
	 *     pipelineConfigurations+=Configuration (ambiguity) pipelineConfigurations+=Configuration
	 *     pipelineConfigurations+=Configuration (ambiguity) triggers+=Event
	 *     run_name=StringValue (ambiguity) 'cancel-in-progress:' cancelProgress=EXPRESSION
	 *     run_name=StringValue (ambiguity) 'cancel-in-progress:' cancelProgress=ID
	 *     run_name=StringValue (ambiguity) 'cancel-in-progress:' cancelProgress=StringValue
	 *     run_name=StringValue (ambiguity) 'concurrency:' BEGIN 'group:' group=EXPRESSION
	 *     run_name=StringValue (ambiguity) 'concurrency:' BEGIN 'group:' group=StringValue
	 *     run_name=StringValue (ambiguity) 'name:' name=StringValue
	 *     run_name=StringValue (ambiguity) 'run-name:' run_name=StringValue
	 *     run_name=StringValue (ambiguity) jobOrStage='jobs:'
	 *     run_name=StringValue (ambiguity) jobOrStage='stages:'
	 *     run_name=StringValue (ambiguity) pipelineConfigurations+=Configuration
	 *     run_name=StringValue (ambiguity) triggers+=Event
	 *     triggers+=Event ']' (ambiguity) 'cancel-in-progress:' cancelProgress=EXPRESSION
	 *     triggers+=Event ']' (ambiguity) 'cancel-in-progress:' cancelProgress=ID
	 *     triggers+=Event ']' (ambiguity) 'cancel-in-progress:' cancelProgress=StringValue
	 *     triggers+=Event ']' (ambiguity) 'concurrency:' BEGIN 'group:' group=EXPRESSION
	 *     triggers+=Event ']' (ambiguity) 'concurrency:' BEGIN 'group:' group=StringValue
	 *     triggers+=Event ']' (ambiguity) 'name:' name=StringValue
	 *     triggers+=Event ']' (ambiguity) 'run-name:' run_name=StringValue
	 *     triggers+=Event ']' (ambiguity) jobOrStage='jobs:'
	 *     triggers+=Event ']' (ambiguity) jobOrStage='stages:'
	 *     triggers+=Event ']' (ambiguity) pipelineConfigurations+=Configuration
	 *     triggers+=Event ']' (ambiguity) triggers+=Event
	 *     triggers+=Event (ambiguity) 'cancel-in-progress:' cancelProgress=EXPRESSION
	 *     triggers+=Event (ambiguity) 'cancel-in-progress:' cancelProgress=ID
	 *     triggers+=Event (ambiguity) 'cancel-in-progress:' cancelProgress=StringValue
	 *     triggers+=Event (ambiguity) 'concurrency:' BEGIN 'group:' group=EXPRESSION
	 *     triggers+=Event (ambiguity) 'concurrency:' BEGIN 'group:' group=StringValue
	 *     triggers+=Event (ambiguity) 'name:' name=StringValue
	 *     triggers+=Event (ambiguity) 'run-name:' run_name=StringValue
	 *     triggers+=Event (ambiguity) jobOrStage='jobs:'
	 *     triggers+=Event (ambiguity) jobOrStage='stages:'
	 *     triggers+=Event (ambiguity) pipelineConfigurations+=Configuration
	 *     triggers+=Event (ambiguity) triggers+=Event
	 
	 * </pre>
	 */
	protected void emit_Pipeline_____OnKeyword_0_5_0_0___BEGINTerminalRuleCall_0_5_0_2_0_ENDTerminalRuleCall_0_5_0_2_2__q__q___DefaultsKeyword_0_3_0_BEGINTerminalRuleCall_0_3_1_RunKeyword_0_3_2_BEGINTerminalRuleCall_0_3_3_ENDTerminalRuleCall_0_3_5_ENDTerminalRuleCall_0_3_6__q__p(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     '|' | '&gt;-'
	 *
	 * This ambiguous syntax occurs at:
	 *     name='bash:' (ambiguity) BEGIN command=StringValue
	 *     name='checkout:' (ambiguity) BEGIN command=StringValue
	 *     name='download:' (ambiguity) BEGIN command=StringValue
	 *     name='getPackage:' (ambiguity) BEGIN command=StringValue
	 *     name='powershell:' (ambiguity) BEGIN command=StringValue
	 *     name='publish:' (ambiguity) BEGIN command=StringValue
	 *     name='pwsh:' (ambiguity) BEGIN command=StringValue
	 *     name='run:' (ambiguity) BEGIN command=StringValue
	 *     name='script:' (ambiguity) BEGIN command=StringValue
	 *     name='task:' (ambiguity) BEGIN command=StringValue
	 
	 * </pre>
	 */
	protected void emit_Script_GreaterThanSignHyphenMinusKeyword_0_1_1_0_1_or_VerticalLineKeyword_0_1_1_0_0(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     (BEGIN END)?
	 *
	 * This ambiguous syntax occurs at:
	 *     command=StringValue (ambiguity) (rule end)
	 *     command=StringValue END (ambiguity) (rule end)
	 
	 * </pre>
	 */
	protected void emit_Script___BEGINTerminalRuleCall_1_0_ENDTerminalRuleCall_1_2__q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     dependsOn+=[Stage|ID]
	 *
	 * This ambiguous syntax occurs at:
	 *     (ambiguity)
	 
	 * </pre>
	 */
	protected void emit_Stage_DependsOnStageIDTerminalRuleCall_1_1_1_0_1(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     (BEGIN | 'dependsOn:')*
	 *
	 * This ambiguous syntax occurs at:
	 *     dependsOn+=[Stage|ID] (ambiguity) 'jobs:' (END (ambiguity) 'jobs:')* jobs+=Job
	 *     displayName=StringValue (ambiguity) 'jobs:' (END (ambiguity) 'jobs:')* jobs+=Job
	 *     jobs+=Job END (ambiguity) ('jobs:' END (ambiguity))* (rule end)
	 *     name=StringValue (ambiguity) 'jobs:' (END (ambiguity) 'jobs:')* jobs+=Job
	 
	 * </pre>
	 */
	protected void emit_Stage___BEGINTerminalRuleCall_1_0_0_or_DependsOnKeyword_1_1_0__a(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     (BEGIN? 'dependsOn:'? ('jobs:' END)?)+
	 *
	 * This ambiguous syntax occurs at:
	 *     displayName=StringValue (ambiguity)
	 *     name=StringValue (ambiguity)
	 
	 * </pre>
	 */
	protected void emit_Stage___BEGINTerminalRuleCall_1_0_0_q_DependsOnKeyword_1_1_0_q___JobsKeyword_1_2_0_0_ENDTerminalRuleCall_1_2_1__q__p(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     ('dependsOn:'? BEGIN? ('jobs:' END)?)+
	 *
	 * This ambiguous syntax occurs at:
	 *     dependsOn+=[Stage|ID] (ambiguity)
	 *     displayName=StringValue (ambiguity)
	 *     name=StringValue (ambiguity)
	 
	 * </pre>
	 */
	protected void emit_Stage___DependsOnKeyword_1_1_0_q_BEGINTerminalRuleCall_1_0_0_q___JobsKeyword_1_2_0_0_ENDTerminalRuleCall_1_2_1__q__p(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     (END (BEGIN | 'dependsOn:')* 'jobs:')*
	 *
	 * This ambiguous syntax occurs at:
	 *     dependsOn+=[Stage|ID] (BEGIN | 'dependsOn:')* 'jobs:' (ambiguity) jobs+=Job
	 *     displayName=StringValue (BEGIN | 'dependsOn:')* 'jobs:' (ambiguity) jobs+=Job
	 *     jobs+=Job (ambiguity) jobs+=Job
	 *     name=StringValue (BEGIN | 'dependsOn:')* 'jobs:' (ambiguity) jobs+=Job
	 
	 * </pre>
	 */
	protected void emit_Stage___ENDTerminalRuleCall_1_2_1___BEGINTerminalRuleCall_1_0_0_or_DependsOnKeyword_1_1_0__a_JobsKeyword_1_2_0_0__a(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     (END (BEGIN? 'dependsOn:'?)+ 'jobs:')*
	 *
	 * This ambiguous syntax occurs at:
	 *     jobs+=Job (ambiguity)
	 
	 * </pre>
	 */
	protected void emit_Stage___ENDTerminalRuleCall_1_2_1___BEGINTerminalRuleCall_1_0_0_q_DependsOnKeyword_1_1_0_q__p_JobsKeyword_1_2_0_0__a(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     (END ('dependsOn:'? BEGIN?)+ 'jobs:')*
	 *
	 * This ambiguous syntax occurs at:
	 *     jobs+=Job (ambiguity)
	 
	 * </pre>
	 */
	protected void emit_Stage___ENDTerminalRuleCall_1_2_1___DependsOnKeyword_1_1_0_q_BEGINTerminalRuleCall_1_0_0_q__p_JobsKeyword_1_2_0_0__a(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     ('jobs:' END (BEGIN | 'dependsOn:')*)*
	 *
	 * This ambiguous syntax occurs at:
	 *     jobs+=Job END (BEGIN | 'dependsOn:')* (ambiguity) (rule end)
	 
	 * </pre>
	 */
	protected void emit_Stage___JobsKeyword_1_2_0_0_ENDTerminalRuleCall_1_2_1___BEGINTerminalRuleCall_1_0_0_or_DependsOnKeyword_1_1_0__a__a(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     ((BEGIN | 'dependsOn:')? ('jobs:' END)?)+
	 *
	 * This ambiguous syntax occurs at:
	 *     dependsOn+=[Stage|ID] (ambiguity) (rule end)
	 *     displayName=StringValue (ambiguity) (rule end)
	 *     name=StringValue (ambiguity) (rule end)
	 
	 * </pre>
	 */
	protected void emit_Stage_____BEGINTerminalRuleCall_1_0_0_or_DependsOnKeyword_1_1_0__q___JobsKeyword_1_2_0_0_ENDTerminalRuleCall_1_2_1__q__p(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
}
