/*
 * generated by Xtext 2.33.0
 */
lexer grammar InternalPipelineLexer;

@header {
package ca.mcgill.devops.pipeline.parser.antlr.lexer;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

Pull_request_review_comment : 'pull_request_review_comment:';

BitbucketBranchCreated : 'bitbucket-branch-created:';

BitbucketBranchDeleted : 'bitbucket-branch-deleted:';

BitbucketTagCreated : 'bitbucket-tag-created:';

BitbucketTagDeleted : 'bitbucket-tag-deleted:';

Pull_request_review : 'pull_request_review:';

Pull_request_target : 'pull_request_target:';

Repository_dispatch : 'repository_dispatch:';

CancelInProgress : 'cancel-in-progress:';

ContinueOnError_1 : 'continue-on-error:';

Deployment_status : 'deployment_status:';

Pipeline_schedule : 'pipeline_schedule:';

Workflow_dispatch : 'workflow_dispatch:';

WorkingDirectory : 'working-directory:';

Registry_package : 'registry_package:';

TimeoutInMinutes : 'timeoutInMinutes:';

BranchesIgnore : 'branches-ignore:';

ContainerImage : 'container.image:';

ContinueOnError : 'continueOnError:';

TimeoutMinutes : 'timeout-minutes:';

Merge_requests : 'merge_requests:';

Project_column : 'project_column:';

ReleaseTrigger : 'releaseTrigger:';

WorkflowRules : 'workflow.rules:';

Allow_failure : 'allow_failure:';

Before_script : 'before_script:';

DeployTrigger : 'deployTrigger:';

Issue_comment : 'issue_comment:';

Notifications : 'notifications:';

PullRequests : 'pull-requests:';

Workflow_call : 'workflow_call:';

After_script : 'after_script:';

DefaultsRun : 'defaults.run:';

Dependencies : 'dependencies:';

LockBehavior : 'lockBehavior:';

MaxParallel : 'max-parallel:';

PathsIgnore : 'paths-ignore:';

Project_card : 'project_card:';

Pull_request : 'pull_request:';

Repositories : 'repositories:';

Requirements : 'requirements:';

ResourceName : 'resourceName:';

ResourceType : 'resourceType:';

TriggerRules : 'triggerRules:';

Workflow_run : 'workflow_run:';

Check_suite : 'check_suite:';

Concurrency : 'concurrency:';

Credentials : 'credentials:';

Definitions : 'definitions:';

Description : 'description:';

DisplayName : 'displayName:';

Environment : 'environment:';

IsSkippable : 'isSkippable:';

Permissions : 'permissions:';

Provisioner : 'provisioner:';

ReviewStage : 'reviewStage:';

TagsIgnore : 'tags-ignore:';

AutoCancel : 'autoCancel:';

Conditions : 'conditions:';

Containers : 'containers:';

Deployment : 'deployment:';

GetPackage : 'getPackage:';

Page_build : 'page_build:';

Parameters : 'parameters:';

Permission : 'permission:';

PlanBranch : 'planBranch:';

Powershell : 'powershell:';

Repository : 'repository:';

Approvals : 'approvals:';

Artifacts : 'artifacts:';

Bitbucket : 'bitbucket:';

Check_run : 'check_run:';

Condition : 'condition:';

Container : 'container:';

DependsOn : 'dependsOn:';

Endpoints : 'endpoints:';

FailFast : 'fail-fast:';

Milestone : 'milestone:';

Pipelines : 'pipelines:';

PostBuild : 'postBuild:';

Resources : 'resources:';

RunPolicy : 'runPolicy:';

Scheduled : 'scheduled:';

Schedules : 'schedules:';

Variables : 'variables:';

Workflows : 'workflows:';

Workspace : 'workspace:';

WriteAll : 'write-all:';

Branches : 'branches:';

Checkout : 'checkout:';

Defaults : 'defaults:';

Download : 'download:';

MaxTime : 'max-time:';

Packages : 'packages:';

Parallel : 'parallel:';

Pipeline : 'pipeline:';

PreBuild : 'preBuild:';

ReadAll : 'read-all:';

Readonly : 'readonly:';

Required : 'required:';

RunName : 'run-name:';

Schedule : 'schedule:';

Services : 'services:';

Snapshot : 'snapshot:';

Strategy : 'strategy:';

Template : 'template:';

Timeouts : 'timeouts:';

Webhooks : 'webhooks:';

Changes : 'changes:';

Command : 'command:';

Default : 'default:';

Demands : 'demands:';

Exclude : 'exclude:';

Extends : 'extends:';

Filters : 'filters:';

Include : 'include:';

Inherit : 'inherit:';

Options : 'options:';

Outputs : 'outputs:';

Project : 'project:';

Publish : 'publish:';

Release : 'release:';

Retries : 'retries:';

RunsOn : 'runs-on:';

Secrets : 'secrets:';

Storage : 'storage:';

Timeout : 'timeout:';

Trigger : 'trigger:';

Version : 'version:';

VmImage : 'vmImage:';

Always : 'always:';

Builds : 'builds:';

Caches : 'caches:';

Create : 'create:';

Custom : 'custom:';

Delete : 'delete:';

Docker : 'docker:';

Drafts : 'drafts:';

Except : 'except:';

Gollum : 'gollum:';

Inputs : 'inputs:';

Issues : 'issues:';

Labels : 'labels:';

Matrix : 'matrix:';

Policy : 'policy:';

Public : 'public:';

Queued : 'queued:';

Remote : 'remote:';

Script : 'script:';

Stages : 'stages:';

Status : 'status:';

Agent : 'agent:';

Batch : 'batch:';

Cache : 'cache:';

Final : 'final:';

Group : 'group:';

Image : 'image:';

Label : 'label:';

Needs : 'needs:';

Paths : 'paths:';

Ports : 'ports:';

Queue : 'queue:';

Rules : 'rules:';

Shell : 'shell:';

Stage : 'stage:';

Steps : 'steps:';

Tasks : 'tasks:';

Types : 'types:';

Value : 'value:';

Watch : 'watch:';

Write_1 : 'write:';

Auth : 'auth:';

Bash : 'bash:';

Cron : 'cron:';

Fork : 'fork:';

Jobs : 'jobs:';

Name : 'name:';

None_1 : 'none:';

Only : 'only:';

Plan : 'plan:';

Pool : 'pool:';

Push : 'push:';

Pwsh : 'pwsh:';

Read_1 : 'read:';

Step : 'step:';

Tags : 'tags:';

Task : 'task:';

Type : 'type:';

Uses : 'uses:';

When : 'when:';

With : 'with:';

Write : 'write';

Env : 'env:';

Jdk : 'jdk:';

Job : 'job:';

None : 'none';

Read : 'read';

Run : 'run:';

Ssh : 'ssh:';

Id : 'id:';

If : 'if:';

On : 'on:';

Pr : 'pr:';

GreaterThanSignHyphenMinus : '>-';

Comma : ',';

HyphenMinus : '-';

Colon : ':';

LeftSquareBracket : '[';

RightSquareBracket : ']';

VerticalLine : '|';

RULE_COMPLEX_EXPRESSION : (('a'..'z'|'A'..'Z') ('a'..'z'|'A'..'Z'|'-')*)? '${{' ( options {greedy=false;} : . )*'}}' ('-${{' ( options {greedy=false;} : . )*'}}')*;

RULE_HEX_INT : '0x' ('0'..'9'|'a'..'f'|'A'..'F')+;

RULE_FLOAT_LITERAL : '-'? RULE_INT '.' RULE_INT;

RULE_VERSION : RULE_INT ('.' RULE_INT)+;

fragment RULE_BEGIN : ;

fragment RULE_END : ;

RULE_ID : ('a'..'z'|'A'..'Z'|'_'|'/'|'@'|'-'|'.'|'\\'|'&') ('a'..'z'|'A'..'Z'|'0'..'9'|'_'|'/'|'@'|'&'|'-'|'.'|'\\'|'('|')'|'|'|'$')*;

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '#' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
