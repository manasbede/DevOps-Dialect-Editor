/*
 * generated by Xtext 2.33.0
 */
package ca.mcgill.devops.pipeline.ide.contentassist.antlr;

import ca.mcgill.devops.pipeline.ide.contentassist.antlr.internal.InternalPipelineParser;
import ca.mcgill.devops.pipeline.services.PipelineGrammarAccess;
import com.google.common.collect.ImmutableMap;
import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.Map;
import org.antlr.runtime.CharStream;
import org.antlr.runtime.TokenSource;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;

public class PipelineParser extends AbstractContentAssistParser {

	@Singleton
	public static final class NameMappings {
		
		private final Map<AbstractElement, String> mappings;
		
		@Inject
		public NameMappings(PipelineGrammarAccess grammarAccess) {
			ImmutableMap.Builder<AbstractElement, String> builder = ImmutableMap.builder();
			init(builder, grammarAccess);
			this.mappings = builder.build();
		}
		
		public String getRuleName(AbstractElement element) {
			return mappings.get(element);
		}
		
		private static void init(ImmutableMap.Builder<AbstractElement, String> builder, PipelineGrammarAccess grammarAccess) {
			builder.put(grammarAccess.getPipelineAccess().getAlternatives_4_1(), "rule__Pipeline__Alternatives_4_1");
			builder.put(grammarAccess.getPipelineAccess().getGroupAlternatives_5_1_1_1_0(), "rule__Pipeline__GroupAlternatives_5_1_1_1_0");
			builder.put(grammarAccess.getPipelineAccess().getCancelConcurrenceAlternatives_5_1_2_1_0(), "rule__Pipeline__CancelConcurrenceAlternatives_5_1_2_1_0");
			builder.put(grammarAccess.getPipelineAccess().getVmImageAlternatives_7_1_0_2_1_0(), "rule__Pipeline__VmImageAlternatives_7_1_0_2_1_0");
			builder.put(grammarAccess.getPipelineAccess().getVmDemandsAlternatives_7_1_1_0_1_0(), "rule__Pipeline__VmDemandsAlternatives_7_1_1_0_1_0");
			builder.put(grammarAccess.getExtendedParameterAccess().getAlternatives(), "rule__ExtendedParameter__Alternatives");
			builder.put(grammarAccess.getVariableAccess().getAlternatives(), "rule__Variable__Alternatives");
			builder.put(grammarAccess.getResourceAccess().getResourceNameAlternatives_0_0(), "rule__Resource__ResourceNameAlternatives_0_0");
			builder.put(grammarAccess.getResourceAccess().getAlternatives_1(), "rule__Resource__Alternatives_1");
			builder.put(grammarAccess.getParameterValueAccess().getAlternatives_1(), "rule__ParameterValue__Alternatives_1");
			builder.put(grammarAccess.getParameterValueAccess().getNameAlternatives_1_0_0(), "rule__ParameterValue__NameAlternatives_1_0_0");
			builder.put(grammarAccess.getParameterValueAccess().getAlternatives_4(), "rule__ParameterValue__Alternatives_4");
			builder.put(grammarAccess.getParameterValueAccess().getValueAlternatives_4_1_0_0(), "rule__ParameterValue__ValueAlternatives_4_1_0_0");
			builder.put(grammarAccess.getAnyDataAccess().getAlternatives(), "rule__AnyData__Alternatives");
			builder.put(grammarAccess.getIndPermissionValueAccess().getAlternatives_2(), "rule__IndPermissionValue__Alternatives_2");
			builder.put(grammarAccess.getUnquotedStringAccess().getAlternatives_1(), "rule__UnquotedString__Alternatives_1");
			builder.put(grammarAccess.getHyphenValuesAccess().getAlternatives(), "rule__HyphenValues__Alternatives");
			builder.put(grammarAccess.getPermissionAccess().getAlternatives(), "rule__Permission__Alternatives");
			builder.put(grammarAccess.getPipelineAccess().getGroup_0(), "rule__Pipeline__Group_0__0");
			builder.put(grammarAccess.getPipelineAccess().getGroup_1(), "rule__Pipeline__Group_1__0");
			builder.put(grammarAccess.getPipelineAccess().getGroup_2_0(), "rule__Pipeline__Group_2_0__0");
			builder.put(grammarAccess.getPipelineAccess().getGroup_2_0_4(), "rule__Pipeline__Group_2_0_4__0");
			builder.put(grammarAccess.getPipelineAccess().getGroup_2_1(), "rule__Pipeline__Group_2_1__0");
			builder.put(grammarAccess.getPipelineAccess().getGroup_2_1_0(), "rule__Pipeline__Group_2_1_0__0");
			builder.put(grammarAccess.getPipelineAccess().getGroup_3(), "rule__Pipeline__Group_3__0");
			builder.put(grammarAccess.getPipelineAccess().getGroup_3_2(), "rule__Pipeline__Group_3_2__0");
			builder.put(grammarAccess.getPipelineAccess().getGroup_4(), "rule__Pipeline__Group_4__0");
			builder.put(grammarAccess.getPipelineAccess().getGroup_4_1_1(), "rule__Pipeline__Group_4_1_1__0");
			builder.put(grammarAccess.getPipelineAccess().getGroup_5(), "rule__Pipeline__Group_5__0");
			builder.put(grammarAccess.getPipelineAccess().getGroup_5_1(), "rule__Pipeline__Group_5_1__0");
			builder.put(grammarAccess.getPipelineAccess().getGroup_5_1_1(), "rule__Pipeline__Group_5_1_1__0");
			builder.put(grammarAccess.getPipelineAccess().getGroup_5_1_2(), "rule__Pipeline__Group_5_1_2__0");
			builder.put(grammarAccess.getPipelineAccess().getGroup_6(), "rule__Pipeline__Group_6__0");
			builder.put(grammarAccess.getPipelineAccess().getGroup_6_1(), "rule__Pipeline__Group_6_1__0");
			builder.put(grammarAccess.getPipelineAccess().getGroup_7(), "rule__Pipeline__Group_7__0");
			builder.put(grammarAccess.getPipelineAccess().getGroup_7_1_0(), "rule__Pipeline__Group_7_1_0__0");
			builder.put(grammarAccess.getPipelineAccess().getGroup_7_1_0_1(), "rule__Pipeline__Group_7_1_0_1__0");
			builder.put(grammarAccess.getPipelineAccess().getGroup_7_1_0_2(), "rule__Pipeline__Group_7_1_0_2__0");
			builder.put(grammarAccess.getPipelineAccess().getGroup_7_1_1(), "rule__Pipeline__Group_7_1_1__0");
			builder.put(grammarAccess.getPipelineAccess().getGroup_7_1_1_0(), "rule__Pipeline__Group_7_1_1_0__0");
			builder.put(grammarAccess.getPipelineAccess().getGroup_8(), "rule__Pipeline__Group_8__0");
			builder.put(grammarAccess.getPipelineAccess().getGroup_8_1(), "rule__Pipeline__Group_8_1__0");
			builder.put(grammarAccess.getPipelineAccess().getGroup_9(), "rule__Pipeline__Group_9__0");
			builder.put(grammarAccess.getPipelineAccess().getGroup_10(), "rule__Pipeline__Group_10__0");
			builder.put(grammarAccess.getExtendedParameterAccess().getGroup_0(), "rule__ExtendedParameter__Group_0__0");
			builder.put(grammarAccess.getExtendedParameterAccess().getGroup_0_1(), "rule__ExtendedParameter__Group_0_1__0");
			builder.put(grammarAccess.getExtendedParameterAccess().getGroup_0_1_1(), "rule__ExtendedParameter__Group_0_1_1__0");
			builder.put(grammarAccess.getExtendedParameterAccess().getGroup_0_1_2(), "rule__ExtendedParameter__Group_0_1_2__0");
			builder.put(grammarAccess.getExtendedParameterAccess().getGroup_0_1_2_1(), "rule__ExtendedParameter__Group_0_1_2_1__0");
			builder.put(grammarAccess.getExtendedParameterAccess().getGroup_1(), "rule__ExtendedParameter__Group_1__0");
			builder.put(grammarAccess.getExtendedParameterAccess().getGroup_1_1(), "rule__ExtendedParameter__Group_1_1__0");
			builder.put(grammarAccess.getVariableAccess().getGroup_0(), "rule__Variable__Group_0__0");
			builder.put(grammarAccess.getVariableAccess().getGroup_1(), "rule__Variable__Group_1__0");
			builder.put(grammarAccess.getVariableAccess().getGroup_1_0(), "rule__Variable__Group_1_0__0");
			builder.put(grammarAccess.getVariableAccess().getGroup_1_1(), "rule__Variable__Group_1_1__0");
			builder.put(grammarAccess.getVariableAccess().getGroup_1_1_0(), "rule__Variable__Group_1_1_0__0");
			builder.put(grammarAccess.getVariableAccess().getGroup_1_1_1(), "rule__Variable__Group_1_1_1__0");
			builder.put(grammarAccess.getVariableAccess().getGroup_1_1_1_1(), "rule__Variable__Group_1_1_1_1__0");
			builder.put(grammarAccess.getVariableAccess().getGroup_1_1_1_2(), "rule__Variable__Group_1_1_1_2__0");
			builder.put(grammarAccess.getResourceAccess().getGroup(), "rule__Resource__Group__0");
			builder.put(grammarAccess.getResourceAccess().getGroup_1_0(), "rule__Resource__Group_1_0__0");
			builder.put(grammarAccess.getResourceAccess().getGroup_1_1(), "rule__Resource__Group_1_1__0");
			builder.put(grammarAccess.getResourceAccess().getGroup_1_1_1(), "rule__Resource__Group_1_1_1__0");
			builder.put(grammarAccess.getPipelineParameterAccess().getGroup(), "rule__PipelineParameter__Group__0");
			builder.put(grammarAccess.getPipelineParameterAccess().getGroup_0(), "rule__PipelineParameter__Group_0__0");
			builder.put(grammarAccess.getPipelineParameterAccess().getGroup_1_0(), "rule__PipelineParameter__Group_1_0__0");
			builder.put(grammarAccess.getPipelineParameterAccess().getGroup_1_0_1(), "rule__PipelineParameter__Group_1_0_1__0");
			builder.put(grammarAccess.getPipelineParameterAccess().getGroup_1_1(), "rule__PipelineParameter__Group_1_1__0");
			builder.put(grammarAccess.getParameterValueAccess().getGroup(), "rule__ParameterValue__Group__0");
			builder.put(grammarAccess.getParameterValueAccess().getGroup_4_0(), "rule__ParameterValue__Group_4_0__0");
			builder.put(grammarAccess.getParameterValueAccess().getGroup_4_1(), "rule__ParameterValue__Group_4_1__0");
			builder.put(grammarAccess.getParameterValueAccess().getGroup_4_1_1(), "rule__ParameterValue__Group_4_1_1__0");
			builder.put(grammarAccess.getKeyValueAccess().getGroup(), "rule__KeyValue__Group__0");
			builder.put(grammarAccess.getIndPermissionValueAccess().getGroup(), "rule__IndPermissionValue__Group__0");
			builder.put(grammarAccess.getUnquotedStringAccess().getGroup(), "rule__UnquotedString__Group__0");
			builder.put(grammarAccess.getHyphenValuesAccess().getGroup_0(), "rule__HyphenValues__Group_0__0");
			builder.put(grammarAccess.getHyphenValuesAccess().getGroup_1(), "rule__HyphenValues__Group_1__0");
			builder.put(grammarAccess.getHyphenValuesAccess().getGroup_1_1(), "rule__HyphenValues__Group_1_1__0");
			builder.put(grammarAccess.getArrayListAccess().getGroup(), "rule__ArrayList__Group__0");
			builder.put(grammarAccess.getArrayListAccess().getGroup_1(), "rule__ArrayList__Group_1__0");
			builder.put(grammarAccess.getArrayListAccess().getGroup_1_1(), "rule__ArrayList__Group_1_1__0");
			builder.put(grammarAccess.getPipelineAccess().getNameAssignment_0_1(), "rule__Pipeline__NameAssignment_0_1");
			builder.put(grammarAccess.getPipelineAccess().getRunNameAssignment_1_1(), "rule__Pipeline__RunNameAssignment_1_1");
			builder.put(grammarAccess.getPipelineAccess().getDefaultShellValueAssignment_2_0_4_1(), "rule__Pipeline__DefaultShellValueAssignment_2_0_4_1");
			builder.put(grammarAccess.getPipelineAccess().getDefaultWDValueAssignment_2_1_0_1(), "rule__Pipeline__DefaultWDValueAssignment_2_1_0_1");
			builder.put(grammarAccess.getPipelineAccess().getEnvAssignment_3_2_1(), "rule__Pipeline__EnvAssignment_3_2_1");
			builder.put(grammarAccess.getPipelineAccess().getAllPermissionAssignment_4_1_0(), "rule__Pipeline__AllPermissionAssignment_4_1_0");
			builder.put(grammarAccess.getPipelineAccess().getIndPermissionsAssignment_4_1_1_1(), "rule__Pipeline__IndPermissionsAssignment_4_1_1_1");
			builder.put(grammarAccess.getPipelineAccess().getGroupAssignment_5_1_1_1(), "rule__Pipeline__GroupAssignment_5_1_1_1");
			builder.put(grammarAccess.getPipelineAccess().getCancelConcurrenceAssignment_5_1_2_1(), "rule__Pipeline__CancelConcurrenceAssignment_5_1_2_1");
			builder.put(grammarAccess.getPipelineAccess().getPipelineParametersAssignment_6_1_1(), "rule__Pipeline__PipelineParametersAssignment_6_1_1");
			builder.put(grammarAccess.getPipelineAccess().getVmNameAssignment_7_1_0_1_1(), "rule__Pipeline__VmNameAssignment_7_1_0_1_1");
			builder.put(grammarAccess.getPipelineAccess().getVmImageAssignment_7_1_0_2_1(), "rule__Pipeline__VmImageAssignment_7_1_0_2_1");
			builder.put(grammarAccess.getPipelineAccess().getVmDemandsAssignment_7_1_1_0_1(), "rule__Pipeline__VmDemandsAssignment_7_1_1_0_1");
			builder.put(grammarAccess.getPipelineAccess().getResourcesAssignment_8_1_1(), "rule__Pipeline__ResourcesAssignment_8_1_1");
			builder.put(grammarAccess.getPipelineAccess().getPipelineParametersAssignment_9_1(), "rule__Pipeline__PipelineParametersAssignment_9_1");
			builder.put(grammarAccess.getPipelineAccess().getVariablesAssignment_10_1(), "rule__Pipeline__VariablesAssignment_10_1");
			builder.put(grammarAccess.getPipelineAccess().getExtendedParameterAssignment_11(), "rule__Pipeline__ExtendedParameterAssignment_11");
			builder.put(grammarAccess.getExtendedParameterAccess().getTemplateAssignment_0_1_1_1(), "rule__ExtendedParameter__TemplateAssignment_0_1_1_1");
			builder.put(grammarAccess.getExtendedParameterAccess().getExtendedParameterValuesAssignment_0_1_2_1_1(), "rule__ExtendedParameter__ExtendedParameterValuesAssignment_0_1_2_1_1");
			builder.put(grammarAccess.getExtendedParameterAccess().getExtendedParameterValuesAssignment_1_1_1(), "rule__ExtendedParameter__ExtendedParameterValuesAssignment_1_1_1");
			builder.put(grammarAccess.getVariableAccess().getVariableValuesAssignment_0_1(), "rule__Variable__VariableValuesAssignment_0_1");
			builder.put(grammarAccess.getVariableAccess().getGroupAssignment_1_0_2(), "rule__Variable__GroupAssignment_1_0_2");
			builder.put(grammarAccess.getVariableAccess().getNameAssignment_1_1_0_2(), "rule__Variable__NameAssignment_1_1_0_2");
			builder.put(grammarAccess.getVariableAccess().getValueAssignment_1_1_1_1_1(), "rule__Variable__ValueAssignment_1_1_1_1_1");
			builder.put(grammarAccess.getVariableAccess().getReadonlyAssignment_1_1_1_2_1(), "rule__Variable__ReadonlyAssignment_1_1_1_2_1");
			builder.put(grammarAccess.getResourceAccess().getResourceNameAssignment_0(), "rule__Resource__ResourceNameAssignment_0");
			builder.put(grammarAccess.getResourceAccess().getResourceValuesAssignment_1_0_1(), "rule__Resource__ResourceValuesAssignment_1_0_1");
			builder.put(grammarAccess.getResourceAccess().getResourceValuesAssignment_1_1_1_1(), "rule__Resource__ResourceValuesAssignment_1_1_1_1");
			builder.put(grammarAccess.getPipelineParameterAccess().getNameAssignment_0_1(), "rule__PipelineParameter__NameAssignment_0_1");
			builder.put(grammarAccess.getPipelineParameterAccess().getDisplayNameAssignment_1_0_1_1(), "rule__PipelineParameter__DisplayNameAssignment_1_0_1_1");
			builder.put(grammarAccess.getPipelineParameterAccess().getParameterValuesAssignment_1_1_0(), "rule__PipelineParameter__ParameterValuesAssignment_1_1_0");
			builder.put(grammarAccess.getParameterValueAccess().getNameAssignment_1_0(), "rule__ParameterValue__NameAssignment_1_0");
			builder.put(grammarAccess.getParameterValueAccess().getPreDefinedKeywordAssignment_1_1(), "rule__ParameterValue__PreDefinedKeywordAssignment_1_1");
			builder.put(grammarAccess.getParameterValueAccess().getSubParameterValuesAssignment_4_0_1(), "rule__ParameterValue__SubParameterValuesAssignment_4_0_1");
			builder.put(grammarAccess.getParameterValueAccess().getValueAssignment_4_1_0(), "rule__ParameterValue__ValueAssignment_4_1_0");
			builder.put(grammarAccess.getParameterValueAccess().getSubParameterValuesAssignment_4_1_1_1(), "rule__ParameterValue__SubParameterValuesAssignment_4_1_1_1");
			builder.put(grammarAccess.getPipelineAccess().getUnorderedGroup(), "rule__Pipeline__UnorderedGroup");
			builder.put(grammarAccess.getPipelineAccess().getUnorderedGroup_2(), "rule__Pipeline__UnorderedGroup_2");
			builder.put(grammarAccess.getPipelineAccess().getUnorderedGroup_7_1(), "rule__Pipeline__UnorderedGroup_7_1");
			builder.put(grammarAccess.getPipelineParameterAccess().getUnorderedGroup_1(), "rule__PipelineParameter__UnorderedGroup_1");
		}
	}
	
	@Inject
	private NameMappings nameMappings;

	@Inject
	private PipelineGrammarAccess grammarAccess;

	@Override
	protected InternalPipelineParser createParser() {
		InternalPipelineParser result = new InternalPipelineParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected TokenSource createLexer(CharStream stream) {
		return new PipelineTokenSource(super.createLexer(stream));
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		return nameMappings.getRuleName(element);
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public PipelineGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(PipelineGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
	
	public NameMappings getNameMappings() {
		return nameMappings;
	}
	
	public void setNameMappings(NameMappings nameMappings) {
		this.nameMappings = nameMappings;
	}
}
