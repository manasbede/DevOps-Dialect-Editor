/*
 * generated by Xtext 2.33.0
 */
lexer grammar InternalPipelineLexer;

@header {
package ca.mcgill.devops.pipeline.ide.contentassist.antlr.lexer;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

CancelInProgress : 'cancel-in-progress:';

Workflow_dispatch : 'workflow_dispatch:';

WorkingDirectory : 'working-directory:';

BranchesIgnore : 'branches-ignore:';

Workflow_call : 'workflow_call:';

PathsIgnore : 'paths-ignore:';

Repositories : 'repositories:';

Workflow_run : 'workflow_run:';

Concurrency : 'concurrency:';

DisplayName : 'displayName:';

TagsIgnore : 'tags-ignore:';

AutoCancel : 'autoCancel:';

Containers : 'containers:';

Parameters : 'parameters:';

Permission : 'permission:';

Executors : 'executors:';

Pipelines : 'pipelines:';

Resources : 'resources:';

Schedules : 'schedules:';

Variables : 'variables:';

Branches : 'branches:';

Commands : 'commands:';

Defaults : 'defaults:';

Excluded : 'excluded:';

Included : 'included:';

Packages : 'packages:';

Readonly : 'readonly:';

RunName : 'run-name:';

Schedule : 'schedule:';

Template : 'template:';

Webhooks : 'webhooks:';

WriteAll : 'write-all';

Default : 'default:';

Demands : 'demands:';

Extends : 'extends:';

Include : 'include:';

ReadAll : 'read-all';

Version : 'version:';

VmImage : 'vmImage:';

Always : 'always:';

Builds : 'builds:';

Drafts : 'drafts:';

Batch : 'batch:';

Group : 'group:';

Paths : 'paths:';

Shell : 'shell:';

Tags : 'tags::';

Types : 'types:';

Value : 'value:';

Cron : 'cron:';

Name : 'name:';

Orbs : 'orbs:';

Pool : 'pool:';

Write : 'write';

Env : 'env:';

Job : 'job:';

None : 'none';

Read : 'read';

Run : 'run:';

On : 'on:';

Comma : ',';

HyphenMinus : '-';

Colon : ':';

LeftSquareBracket : '[';

RightSquareBracket : ']';

RULE_COMPLEX_EXPRESSION : (('a'..'z'|'A'..'Z') ('a'..'z'|'A'..'Z'|'-')*)? '${{' ( options {greedy=false;} : . )*'}}' ('-${{' ( options {greedy=false;} : . )*'}}')*;

RULE_HEX_INT : '0x' ('0'..'9'|'a'..'f'|'A'..'F')+;

RULE_FLOAT_LITERAL : '-'? RULE_INT '.' RULE_INT;

RULE_VERSION : RULE_INT ('.' RULE_INT)+;

fragment RULE_BEGIN : ;

fragment RULE_END : ;

RULE_ID : ('a'..'z'|'A'..'Z'|'_'|'/'|'@'|'-'|'.'|'\\'|'&') ('a'..'z'|'A'..'Z'|'0'..'9'|'_'|'/'|'@'|'&'|'-'|'.'|'\\'|'('|')'|'|'|'$')*;

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '#' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
